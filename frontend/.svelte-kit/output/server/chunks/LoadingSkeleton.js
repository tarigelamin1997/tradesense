import { c as create_ssr_component, e as each, d as escape } from "./ssr.js";
const css = {
  code: ".skeleton.svelte-1roqvb1.svelte-1roqvb1{background:linear-gradient(\n			90deg,\n			#f0f0f0 25%,\n			#e0e0e0 50%,\n			#f0f0f0 75%\n		);background-size:200% 100%;animation:svelte-1roqvb1-shimmer 1.5s infinite;border-radius:4px}@keyframes svelte-1roqvb1-shimmer{0%{background-position:200% 0}100%{background-position:-200% 0}}.skeleton-container.svelte-1roqvb1.svelte-1roqvb1{display:flex;flex-direction:column;gap:0.5rem}.skeleton-text.svelte-1roqvb1.svelte-1roqvb1{height:1rem;margin:0.25rem 0}.skeleton-card.svelte-1roqvb1.svelte-1roqvb1{padding:1.5rem;background:white;border-radius:8px;box-shadow:0 1px 3px rgba(0, 0, 0, 0.1)}.skeleton-header.svelte-1roqvb1.svelte-1roqvb1{display:flex;justify-content:space-between;margin-bottom:1rem}.skeleton-body.svelte-1roqvb1.svelte-1roqvb1{display:flex;flex-direction:column;gap:0.5rem}.skeleton-table.svelte-1roqvb1.svelte-1roqvb1{background:white;border-radius:8px;overflow:hidden;box-shadow:0 1px 3px rgba(0, 0, 0, 0.1)}.skeleton-row.svelte-1roqvb1.svelte-1roqvb1{display:grid;grid-template-columns:repeat(5, 1fr);gap:1rem;padding:1rem;border-bottom:1px solid #f0f0f0}.skeleton-header.svelte-1roqvb1.svelte-1roqvb1{background:#f9fafb;font-weight:600}.skeleton-cell.svelte-1roqvb1.svelte-1roqvb1{height:1rem}.skeleton-chart.svelte-1roqvb1.svelte-1roqvb1{padding:1.5rem;background:white;border-radius:8px;box-shadow:0 1px 3px rgba(0, 0, 0, 0.1);display:flex;align-items:flex-end;justify-content:center}.chart-bars.svelte-1roqvb1.svelte-1roqvb1{display:flex;align-items:flex-end;gap:0.5rem;width:100%;height:80%}.skeleton-bar.svelte-1roqvb1.svelte-1roqvb1{flex:1;background:linear-gradient(\n			90deg,\n			#f0f0f0 25%,\n			#e0e0e0 50%,\n			#f0f0f0 75%\n		);background-size:200% 100%;animation:svelte-1roqvb1-shimmer 1.5s infinite;border-radius:4px 4px 0 0;min-height:20px}.skeleton-stat.svelte-1roqvb1.svelte-1roqvb1{background:white;padding:1.5rem;border-radius:8px;box-shadow:0 1px 3px rgba(0, 0, 0, 0.1)}@media(max-width: 768px){.skeleton-row.svelte-1roqvb1.svelte-1roqvb1{grid-template-columns:repeat(3, 1fr);gap:0.5rem;padding:0.75rem}.skeleton-row.svelte-1roqvb1>.svelte-1roqvb1:nth-child(n+4){display:none}}",
  map: `{"version":3,"file":"LoadingSkeleton.svelte","sources":["LoadingSkeleton.svelte"],"sourcesContent":["<script lang=\\"ts\\">export let type = \\"text\\";\\nexport let lines = 1;\\nexport let height = \\"auto\\";\\nexport let width = \\"100%\\";\\n<\/script>\\n\\n{#if type === 'text'}\\n\\t<div class=\\"skeleton-container\\">\\n\\t\\t{#each Array(lines) as _, i}\\n\\t\\t\\t<div \\n\\t\\t\\t\\tclass=\\"skeleton skeleton-text\\" \\n\\t\\t\\t\\tstyle=\\"width: {i === lines - 1 ? '60%' : width}\\"\\n\\t\\t\\t></div>\\n\\t\\t{/each}\\n\\t</div>\\n{:else if type === 'card'}\\n\\t<div class=\\"skeleton skeleton-card\\" style=\\"height: {height}; width: {width}\\">\\n\\t\\t<div class=\\"skeleton-header\\">\\n\\t\\t\\t<div class=\\"skeleton skeleton-text\\" style=\\"width: 60%\\"></div>\\n\\t\\t\\t<div class=\\"skeleton skeleton-text\\" style=\\"width: 20%\\"></div>\\n\\t\\t</div>\\n\\t\\t<div class=\\"skeleton-body\\">\\n\\t\\t\\t{#each Array(3) as _}\\n\\t\\t\\t\\t<div class=\\"skeleton skeleton-text\\"></div>\\n\\t\\t\\t{/each}\\n\\t\\t</div>\\n\\t</div>\\n{:else if type === 'table'}\\n\\t<div class=\\"skeleton-table\\">\\n\\t\\t<!-- Header -->\\n\\t\\t<div class=\\"skeleton-row skeleton-header\\">\\n\\t\\t\\t{#each Array(5) as _}\\n\\t\\t\\t\\t<div class=\\"skeleton skeleton-cell\\"></div>\\n\\t\\t\\t{/each}\\n\\t\\t</div>\\n\\t\\t<!-- Rows -->\\n\\t\\t{#each Array(lines || 5) as _}\\n\\t\\t\\t<div class=\\"skeleton-row\\">\\n\\t\\t\\t\\t{#each Array(5) as _}\\n\\t\\t\\t\\t\\t<div class=\\"skeleton skeleton-cell\\"></div>\\n\\t\\t\\t\\t{/each}\\n\\t\\t\\t</div>\\n\\t\\t{/each}\\n\\t</div>\\n{:else if type === 'chart'}\\n\\t<div class=\\"skeleton skeleton-chart\\" style=\\"height: {height || '300px'}; width: {width}\\">\\n\\t\\t<div class=\\"chart-bars\\">\\n\\t\\t\\t{#each Array(8) as _, i}\\n\\t\\t\\t\\t<div \\n\\t\\t\\t\\t\\tclass=\\"skeleton-bar\\" \\n\\t\\t\\t\\t\\tstyle=\\"height: {Math.random() * 60 + 20}%\\"\\n\\t\\t\\t\\t></div>\\n\\t\\t\\t{/each}\\n\\t\\t</div>\\n\\t</div>\\n{:else if type === 'stat'}\\n\\t<div class=\\"skeleton-stat\\">\\n\\t\\t<div class=\\"skeleton skeleton-text\\" style=\\"width: 80px; height: 14px\\"></div>\\n\\t\\t<div class=\\"skeleton skeleton-text\\" style=\\"width: 120px; height: 32px; margin-top: 8px\\"></div>\\n\\t\\t<div class=\\"skeleton skeleton-text\\" style=\\"width: 60px; height: 12px; margin-top: 4px\\"></div>\\n\\t</div>\\n{/if}\\n\\n<style>\\n\\t.skeleton {\\n\\t\\tbackground: linear-gradient(\\n\\t\\t\\t90deg,\\n\\t\\t\\t#f0f0f0 25%,\\n\\t\\t\\t#e0e0e0 50%,\\n\\t\\t\\t#f0f0f0 75%\\n\\t\\t);\\n\\t\\tbackground-size: 200% 100%;\\n\\t\\tanimation: shimmer 1.5s infinite;\\n\\t\\tborder-radius: 4px;\\n\\t}\\n\\t\\n\\t@keyframes shimmer {\\n\\t\\t0% {\\n\\t\\t\\tbackground-position: 200% 0;\\n\\t\\t}\\n\\t\\t100% {\\n\\t\\t\\tbackground-position: -200% 0;\\n\\t\\t}\\n\\t}\\n\\t\\n\\t.skeleton-container {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\tgap: 0.5rem;\\n\\t}\\n\\t\\n\\t.skeleton-text {\\n\\t\\theight: 1rem;\\n\\t\\tmargin: 0.25rem 0;\\n\\t}\\n\\t\\n\\t/* Card Skeleton */\\n\\t.skeleton-card {\\n\\t\\tpadding: 1.5rem;\\n\\t\\tbackground: white;\\n\\t\\tborder-radius: 8px;\\n\\t\\tbox-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\\n\\t}\\n\\t\\n\\t.skeleton-header {\\n\\t\\tdisplay: flex;\\n\\t\\tjustify-content: space-between;\\n\\t\\tmargin-bottom: 1rem;\\n\\t}\\n\\t\\n\\t.skeleton-body {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\tgap: 0.5rem;\\n\\t}\\n\\t\\n\\t/* Table Skeleton */\\n\\t.skeleton-table {\\n\\t\\tbackground: white;\\n\\t\\tborder-radius: 8px;\\n\\t\\toverflow: hidden;\\n\\t\\tbox-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\\n\\t}\\n\\t\\n\\t.skeleton-row {\\n\\t\\tdisplay: grid;\\n\\t\\tgrid-template-columns: repeat(5, 1fr);\\n\\t\\tgap: 1rem;\\n\\t\\tpadding: 1rem;\\n\\t\\tborder-bottom: 1px solid #f0f0f0;\\n\\t}\\n\\t\\n\\t.skeleton-header {\\n\\t\\tbackground: #f9fafb;\\n\\t\\tfont-weight: 600;\\n\\t}\\n\\t\\n\\t.skeleton-cell {\\n\\t\\theight: 1rem;\\n\\t}\\n\\t\\n\\t/* Chart Skeleton */\\n\\t.skeleton-chart {\\n\\t\\tpadding: 1.5rem;\\n\\t\\tbackground: white;\\n\\t\\tborder-radius: 8px;\\n\\t\\tbox-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: flex-end;\\n\\t\\tjustify-content: center;\\n\\t}\\n\\t\\n\\t.chart-bars {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: flex-end;\\n\\t\\tgap: 0.5rem;\\n\\t\\twidth: 100%;\\n\\t\\theight: 80%;\\n\\t}\\n\\t\\n\\t.skeleton-bar {\\n\\t\\tflex: 1;\\n\\t\\tbackground: linear-gradient(\\n\\t\\t\\t90deg,\\n\\t\\t\\t#f0f0f0 25%,\\n\\t\\t\\t#e0e0e0 50%,\\n\\t\\t\\t#f0f0f0 75%\\n\\t\\t);\\n\\t\\tbackground-size: 200% 100%;\\n\\t\\tanimation: shimmer 1.5s infinite;\\n\\t\\tborder-radius: 4px 4px 0 0;\\n\\t\\tmin-height: 20px;\\n\\t}\\n\\t\\n\\t/* Stat Skeleton */\\n\\t.skeleton-stat {\\n\\t\\tbackground: white;\\n\\t\\tpadding: 1.5rem;\\n\\t\\tborder-radius: 8px;\\n\\t\\tbox-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\\n\\t}\\n\\t\\n\\t/* Mobile Styles */\\n\\t@media (max-width: 768px) {\\n\\t\\t.skeleton-row {\\n\\t\\t\\tgrid-template-columns: repeat(3, 1fr);\\n\\t\\t\\tgap: 0.5rem;\\n\\t\\t\\tpadding: 0.75rem;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.skeleton-row > *:nth-child(n+4) {\\n\\t\\t\\tdisplay: none;\\n\\t\\t}\\n\\t}\\n</style>"],"names":[],"mappings":"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"}`
};
const LoadingSkeleton = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { type = "text" } = $$props;
  let { lines = 1 } = $$props;
  let { height = "auto" } = $$props;
  let { width = "100%" } = $$props;
  if ($$props.type === void 0 && $$bindings.type && type !== void 0) $$bindings.type(type);
  if ($$props.lines === void 0 && $$bindings.lines && lines !== void 0) $$bindings.lines(lines);
  if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
  if ($$props.width === void 0 && $$bindings.width && width !== void 0) $$bindings.width(width);
  $$result.css.add(css);
  return `${type === "text" ? `<div class="skeleton-container svelte-1roqvb1">${each(Array(lines), (_, i) => {
    return `<div class="skeleton skeleton-text svelte-1roqvb1" style="${"width: " + escape(i === lines - 1 ? "60%" : width, true)}"></div>`;
  })}</div>` : `${type === "card" ? `<div class="skeleton skeleton-card svelte-1roqvb1" style="${"height: " + escape(height, true) + "; width: " + escape(width, true)}"><div class="skeleton-header svelte-1roqvb1" data-svelte-h="svelte-13nkws6"><div class="skeleton skeleton-text svelte-1roqvb1" style="width: 60%"></div> <div class="skeleton skeleton-text svelte-1roqvb1" style="width: 20%"></div></div> <div class="skeleton-body svelte-1roqvb1">${each(Array(3), (_) => {
    return `<div class="skeleton skeleton-text svelte-1roqvb1"></div>`;
  })}</div></div>` : `${type === "table" ? `<div class="skeleton-table svelte-1roqvb1"> <div class="skeleton-row skeleton-header svelte-1roqvb1">${each(Array(5), (_) => {
    return `<div class="skeleton skeleton-cell svelte-1roqvb1"></div>`;
  })}</div>  ${each(Array(lines || 5), (_) => {
    return `<div class="skeleton-row svelte-1roqvb1">${each(Array(5), (_2) => {
      return `<div class="skeleton skeleton-cell svelte-1roqvb1"></div>`;
    })} </div>`;
  })}</div>` : `${type === "chart" ? `<div class="skeleton skeleton-chart svelte-1roqvb1" style="${"height: " + escape(height || "300px", true) + "; width: " + escape(width, true)}"><div class="chart-bars svelte-1roqvb1">${each(Array(8), (_, i) => {
    return `<div class="skeleton-bar svelte-1roqvb1" style="${"height: " + escape(Math.random() * 60 + 20, true) + "%"}"></div>`;
  })}</div></div>` : `${type === "stat" ? `<div class="skeleton-stat svelte-1roqvb1" data-svelte-h="svelte-1744su6"><div class="skeleton skeleton-text svelte-1roqvb1" style="width: 80px; height: 14px"></div> <div class="skeleton skeleton-text svelte-1roqvb1" style="width: 120px; height: 32px; margin-top: 8px"></div> <div class="skeleton skeleton-text svelte-1roqvb1" style="width: 60px; height: 12px; margin-top: 4px"></div></div>` : ``}`}`}`}`}`;
});
export {
  LoadingSkeleton as L
};
