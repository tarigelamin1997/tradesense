apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: tradesense
  labels:
    app: backend
    version: v1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
        version: v1
      annotations:
        # Force pod restart on secret update
        secrets.reloader.stakater.com/reload: "tradesense-secrets"
    spec:
      serviceAccountName: tradesense-backend
      containers:
      - name: backend
        image: tradesense/backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        env:
        # All secrets now come from External Secrets managed secret
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: tradesense-secrets
              key: DATABASE_URL
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: tradesense-secrets
              key: REDIS_URL
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: tradesense-secrets
              key: JWT_SECRET_KEY
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: tradesense-secrets
              key: SECRET_KEY
        - name: MASTER_ENCRYPTION_KEY
          valueFrom:
            secretKeyRef:
              name: tradesense-secrets
              key: MASTER_ENCRYPTION_KEY
        - name: STRIPE_API_KEY
          valueFrom:
            secretKeyRef:
              name: tradesense-secrets
              key: STRIPE_API_KEY
        - name: STRIPE_WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: tradesense-secrets
              key: STRIPE_WEBHOOK_SECRET
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: tradesense-secrets
              key: SENTRY_DSN
        - name: SMTP_USERNAME
          valueFrom:
            secretKeyRef:
              name: tradesense-secrets
              key: SMTP_USERNAME
        - name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: tradesense-secrets
              key: SMTP_PASSWORD
        # Non-secret environment variables from ConfigMap
        envFrom:
        - configMapRef:
            name: tradesense-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /api/v1/monitoring/health/live
            port: 8000
          initialDelaySeconds: 40
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/v1/monitoring/health/ready
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: uploads
          mountPath: /app/uploads
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: logs
        emptyDir: {}
      - name: uploads
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - backend
              topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tradesense-backend
  namespace: tradesense
  annotations:
    # For IRSA - replace with your actual role ARN
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/TradeSenseBackendRole
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: tradesense
  labels:
    app: backend
spec:
  selector:
    app: backend
  ports:
  - port: 8000
    targetPort: 8000
    name: http
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-hpa
  namespace: tradesense
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 2
        periodSeconds: 15