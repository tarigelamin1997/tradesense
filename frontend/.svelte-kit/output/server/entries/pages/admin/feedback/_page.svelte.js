import { c as create_ssr_component } from "../../../../chunks/ssr.js";
import "../../../../chunks/ssr-safe.js";
/* empty css                                                          */
const css = {
  code: ".feedback-dashboard.svelte-vlqaw.svelte-vlqaw{max-width:1400px;margin:0 auto;padding:2rem}.dashboard-header.svelte-vlqaw.svelte-vlqaw{display:flex;justify-content:space-between;align-items:center;margin-bottom:2rem}.dashboard-header.svelte-vlqaw h1.svelte-vlqaw{margin:0;font-size:2rem;font-weight:700}.header-actions.svelte-vlqaw.svelte-vlqaw{display:flex;gap:1rem}.train-button.svelte-vlqaw.svelte-vlqaw{padding:0.75rem 1.5rem;background:linear-gradient(135deg, #667eea 0%, #764ba2 100%);color:white;border:none;border-radius:0.5rem;font-weight:600;cursor:pointer;transition:all 0.2s}.train-button.svelte-vlqaw.svelte-vlqaw:hover{transform:translateY(-2px);box-shadow:0 4px 6px -1px rgba(0, 0, 0, 0.1)}.loading.svelte-vlqaw.svelte-vlqaw{text-align:center;padding:4rem;color:#6b7280}.metrics-grid.svelte-vlqaw.svelte-vlqaw{display:grid;grid-template-columns:repeat(auto-fit, minmax(250px, 1fr));gap:1.5rem;margin-bottom:2rem}.critical-alert.svelte-vlqaw.svelte-vlqaw{background:#fee2e2;color:#991b1b;padding:1rem;border-radius:0.5rem;display:flex;align-items:center;gap:0.5rem;margin-bottom:2rem;font-weight:600}.content-grid.svelte-vlqaw.svelte-vlqaw{display:grid;grid-template-columns:1fr 1fr;gap:2rem;margin-bottom:2rem}.panel.svelte-vlqaw.svelte-vlqaw{background:white;border-radius:0.75rem;padding:1.5rem;box-shadow:0 1px 3px 0 rgba(0, 0, 0, 0.1)}.panel.full-width.svelte-vlqaw.svelte-vlqaw{grid-column:1 / -1}.panel.svelte-vlqaw h2.svelte-vlqaw{margin:0 0 1rem 0;font-size:1.25rem;font-weight:600}.issues-list.svelte-vlqaw.svelte-vlqaw{display:flex;flex-direction:column;gap:1rem}.issue-item.svelte-vlqaw.svelte-vlqaw{display:flex;justify-content:space-between;align-items:center;padding:1rem;background:#f9fafb;border-radius:0.5rem}.issue-info.svelte-vlqaw.svelte-vlqaw{display:flex;align-items:center;gap:0.75rem}.issue-title.svelte-vlqaw.svelte-vlqaw{font-weight:500;color:#111827}.severity-badge.svelte-vlqaw.svelte-vlqaw{padding:0.25rem 0.5rem;border-radius:0.25rem;color:white;font-size:0.75rem;font-weight:600}.issue-stats.svelte-vlqaw.svelte-vlqaw{display:flex;align-items:center;gap:1rem}.count.svelte-vlqaw.svelte-vlqaw{color:#6b7280;font-size:0.875rem}.view-pattern.svelte-vlqaw.svelte-vlqaw{padding:0.375rem 0.75rem;background:#667eea;color:white;border:none;border-radius:0.375rem;font-size:0.875rem;cursor:pointer;transition:background 0.2s}.view-pattern.svelte-vlqaw.svelte-vlqaw:hover{background:#5a67d8}.trending-list.svelte-vlqaw.svelte-vlqaw{display:flex;flex-direction:column;gap:0.75rem}.trending-item.svelte-vlqaw.svelte-vlqaw{display:flex;justify-content:space-between;align-items:center;padding:0.75rem;background:#fef3c7;border-radius:0.375rem}.trend-info.svelte-vlqaw.svelte-vlqaw{display:flex;align-items:center;gap:0.5rem}.growth-rate.svelte-vlqaw.svelte-vlqaw{font-weight:600;color:#d97706}.heatmap.svelte-vlqaw.svelte-vlqaw{display:flex;flex-direction:column;gap:0.5rem}.heatmap-row.svelte-vlqaw.svelte-vlqaw{display:grid;grid-template-columns:300px 1fr 60px;align-items:center;gap:1rem}.page-url.svelte-vlqaw.svelte-vlqaw{font-size:0.875rem;color:#374151;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.issue-bars.svelte-vlqaw.svelte-vlqaw{display:flex;height:20px;border-radius:0.25rem;overflow:hidden}.severity-bar.svelte-vlqaw.svelte-vlqaw{height:100%;transition:width 0.3s}.total-count.svelte-vlqaw.svelte-vlqaw{text-align:right;font-weight:600;color:#6b7280}.feedback-list-panel.svelte-vlqaw.svelte-vlqaw{margin-top:2rem}.panel-header.svelte-vlqaw.svelte-vlqaw{display:flex;justify-content:space-between;align-items:center;margin-bottom:1.5rem}.filters.svelte-vlqaw.svelte-vlqaw{display:flex;gap:1rem;align-items:center}.filters.svelte-vlqaw select.svelte-vlqaw{padding:0.5rem 1rem;border:1px solid #e5e7eb;border-radius:0.375rem;font-size:0.875rem}.search-box.svelte-vlqaw.svelte-vlqaw{display:flex;align-items:center;padding:0.5rem 1rem;border:1px solid #e5e7eb;border-radius:0.375rem;background:white}.search-box.svelte-vlqaw input.svelte-vlqaw{border:none;outline:none;margin-left:0.5rem;font-size:0.875rem}.feedback-table.svelte-vlqaw.svelte-vlqaw{overflow-x:auto}table.svelte-vlqaw.svelte-vlqaw{width:100%;border-collapse:collapse}th.svelte-vlqaw.svelte-vlqaw{text-align:left;padding:0.75rem;border-bottom:2px solid #e5e7eb;font-weight:600;color:#374151;font-size:0.875rem}td.svelte-vlqaw.svelte-vlqaw{padding:0.75rem;border-bottom:1px solid #f3f4f6;font-size:0.875rem}.id.svelte-vlqaw.svelte-vlqaw{font-family:monospace;color:#6b7280}.title.svelte-vlqaw.svelte-vlqaw{max-width:300px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.type-badge.svelte-vlqaw.svelte-vlqaw{padding:0.25rem 0.5rem;background:#e5e7eb;border-radius:0.25rem;font-size:0.75rem}.status-badge.svelte-vlqaw.svelte-vlqaw{padding:0.25rem 0.5rem;border-radius:0.25rem;font-size:0.75rem;font-weight:500}.badge-new.svelte-vlqaw.svelte-vlqaw{background:#dbeafe;color:#1e40af}.badge-investigating.svelte-vlqaw.svelte-vlqaw{background:#fef3c7;color:#d97706}.badge-progress.svelte-vlqaw.svelte-vlqaw{background:#e0e7ff;color:#4338ca}.badge-resolved.svelte-vlqaw.svelte-vlqaw{background:#d1fae5;color:#065f46}.badge-closed.svelte-vlqaw.svelte-vlqaw{background:#e5e7eb;color:#374151}.actions.svelte-vlqaw select.svelte-vlqaw{padding:0.25rem 0.5rem;border:1px solid #e5e7eb;border-radius:0.25rem;font-size:0.75rem}.modal-overlay.svelte-vlqaw.svelte-vlqaw{position:fixed;top:0;left:0;right:0;bottom:0;background:rgba(0, 0, 0, 0.5);display:flex;align-items:center;justify-content:center;z-index:1000}.modal.svelte-vlqaw.svelte-vlqaw{background:white;border-radius:0.75rem;padding:2rem;max-width:600px;width:90%;max-height:80vh;overflow-y:auto}.modal.svelte-vlqaw h2.svelte-vlqaw{margin:0 0 1.5rem 0}.pattern-info.svelte-vlqaw.svelte-vlqaw{background:#f9fafb;padding:1rem;border-radius:0.5rem;margin-bottom:1.5rem}.pattern-info.svelte-vlqaw p.svelte-vlqaw{margin:0.25rem 0}.suggested-fixes.svelte-vlqaw.svelte-vlqaw{list-style:none;padding:0;margin:0 0 1.5rem 0}.suggested-fixes.svelte-vlqaw li.svelte-vlqaw{padding:0.75rem;background:#eef2ff;border-left:3px solid #667eea;margin-bottom:0.5rem}.related-feedback.svelte-vlqaw.svelte-vlqaw{display:flex;flex-direction:column;gap:1rem}.feedback-preview.svelte-vlqaw.svelte-vlqaw{padding:1rem;background:#f9fafb;border-radius:0.5rem}.feedback-preview.svelte-vlqaw strong.svelte-vlqaw{display:block;margin-bottom:0.5rem;color:#111827}.feedback-preview.svelte-vlqaw p.svelte-vlqaw{color:#6b7280;margin:0 0 0.5rem 0;font-size:0.875rem}.feedback-preview.svelte-vlqaw small.svelte-vlqaw{color:#9ca3af;font-size:0.75rem}.close-modal.svelte-vlqaw.svelte-vlqaw{width:100%;padding:0.75rem;background:#667eea;color:white;border:none;border-radius:0.5rem;font-weight:600;cursor:pointer;transition:background 0.2s}.close-modal.svelte-vlqaw.svelte-vlqaw:hover{background:#5a67d8}@media(max-width: 768px){.content-grid.svelte-vlqaw.svelte-vlqaw{grid-template-columns:1fr}.metrics-grid.svelte-vlqaw.svelte-vlqaw{grid-template-columns:1fr 1fr}.filters.svelte-vlqaw.svelte-vlqaw{flex-wrap:wrap}.heatmap-row.svelte-vlqaw.svelte-vlqaw{grid-template-columns:150px 1fr 40px}}",
  map: '{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { onMount } from \\"svelte\\";\\nimport {\\n  TrendingUp,\\n  TrendingDown,\\n  AlertCircle,\\n  CheckCircle,\\n  Clock,\\n  Users,\\n  DollarSign,\\n  Filter,\\n  Search,\\n  ChevronDown\\n} from \\"lucide-svelte\\";\\nimport { feedbackApi } from \\"$lib/api/feedback\\";\\nimport MetricCard from \\"$lib/components/MetricCard.svelte\\";\\nlet analytics = null;\\nlet feedbackList = [];\\nlet heatmapData = [];\\nlet impactAnalysis = null;\\nlet resolutionStats = null;\\nlet loading = true;\\nlet selectedPattern = null;\\nlet patternDetails = null;\\nlet statusFilter = \\"\\";\\nlet typeFilter = \\"\\";\\nlet severityFilter = \\"\\";\\nlet searchQuery = \\"\\";\\nlet recentFeedback = [];\\nlet criticalIssues = [];\\nonMount(async () => {\\n  await loadDashboardData();\\n  const interval = setInterval(loadDashboardData, 3e4);\\n  return () => clearInterval(interval);\\n});\\nasync function loadDashboardData() {\\n  try {\\n    const dashboardData = await feedbackApi.getDashboard();\\n    analytics = await feedbackApi.getAnalytics();\\n    recentFeedback = dashboardData.recent_feedback;\\n    criticalIssues = dashboardData.critical_issues;\\n    heatmapData = dashboardData.feedback_heatmap;\\n    impactAnalysis = dashboardData.impact_analysis;\\n    resolutionStats = dashboardData.resolution_stats;\\n    await loadFeedbackList();\\n  } catch (error) {\\n    console.error(\\"Failed to load dashboard data:\\", error);\\n  } finally {\\n    loading = false;\\n  }\\n}\\nasync function loadFeedbackList() {\\n  try {\\n    feedbackList = await feedbackApi.list({\\n      status: statusFilter || void 0,\\n      type: typeFilter || void 0,\\n      severity: severityFilter || void 0\\n    });\\n  } catch (error) {\\n    console.error(\\"Failed to load feedback list:\\", error);\\n  }\\n}\\nasync function viewPatternDetails(patternId) {\\n  selectedPattern = patternId;\\n  patternDetails = await feedbackApi.getPatternDetails(patternId);\\n}\\nasync function updateStatus(feedbackId, newStatus) {\\n  try {\\n    await feedbackApi.updateStatus(feedbackId, newStatus);\\n    await loadDashboardData();\\n  } catch (error) {\\n    console.error(\\"Failed to update status:\\", error);\\n  }\\n}\\nasync function trainPatternDetection() {\\n  try {\\n    const result = await feedbackApi.trainPatternDetection();\\n    alert(`Pattern detection updated! ${result.patterns_discovered} new patterns found.`);\\n    await loadDashboardData();\\n  } catch (error) {\\n    console.error(\\"Failed to train pattern detection:\\", error);\\n  }\\n}\\n$: filteredFeedback = feedbackList.filter((item) => {\\n  if (searchQuery && !item.title.toLowerCase().includes(searchQuery.toLowerCase())) {\\n    return false;\\n  }\\n  return true;\\n});\\nfunction getSeverityColor(severity) {\\n  const colors = {\\n    critical: \\"#ef4444\\",\\n    high: \\"#f97316\\",\\n    medium: \\"#eab308\\",\\n    low: \\"#3b82f6\\"\\n  };\\n  return colors[severity] || \\"#6b7280\\";\\n}\\nfunction getStatusBadgeClass(status) {\\n  const classes = {\\n    new: \\"badge-new\\",\\n    investigating: \\"badge-investigating\\",\\n    in_progress: \\"badge-progress\\",\\n    resolved: \\"badge-resolved\\",\\n    closed: \\"badge-closed\\"\\n  };\\n  return classes[status] || \\"\\";\\n}\\n<\/script>\\n\\n<div class=\\"feedback-dashboard\\">\\n  <div class=\\"dashboard-header\\">\\n    <h1>Feedback Analytics Dashboard</h1>\\n    <div class=\\"header-actions\\">\\n      <button class=\\"train-button\\" on:click={trainPatternDetection}>\\n        🤖 Retrain Pattern Detection\\n      </button>\\n    </div>\\n  </div>\\n\\n  {#if loading}\\n    <div class=\\"loading\\">Loading dashboard data...</div>\\n  {:else if analytics}\\n    <!-- Key Metrics -->\\n    <div class=\\"metrics-grid\\">\\n      <MetricCard\\n        title=\\"Total Feedback\\"\\n        value={resolutionStats?.total_feedback || 0}\\n        icon={Users}\\n        trend={0}\\n      />\\n      <MetricCard\\n        title=\\"Resolution Rate\\"\\n        value={`${resolutionStats?.resolution_rate?.toFixed(1) || 0}%`}\\n        icon={CheckCircle}\\n        trend={5}\\n      />\\n      <MetricCard\\n        title=\\"Avg Resolution Time\\"\\n        value={`${analytics.resolution_time.average_hours.toFixed(1)}h`}\\n        icon={Clock}\\n        trend={-10}\\n      />\\n      <MetricCard\\n        title=\\"Revenue at Risk\\"\\n        value={`$${impactAnalysis?.revenue_at_risk?.toFixed(0) || 0}`}\\n        icon={DollarSign}\\n        trend={0}\\n        trendDirection=\\"negative\\"\\n      />\\n    </div>\\n\\n    <!-- Critical Issues Alert -->\\n    {#if criticalIssues.length > 0}\\n      <div class=\\"critical-alert\\">\\n        <AlertCircle size={20} />\\n        <span>{criticalIssues.length} Critical Issues Require Immediate Attention</span>\\n      </div>\\n    {/if}\\n\\n    <!-- Main Content Grid -->\\n    <div class=\\"content-grid\\">\\n      <!-- Top Issues -->\\n      <div class=\\"panel\\">\\n        <h2>Top Issues</h2>\\n        <div class=\\"issues-list\\">\\n          {#each analytics.top_issues as issue}\\n            <div class=\\"issue-item\\">\\n              <div class=\\"issue-info\\">\\n                <span class=\\"issue-title\\">{issue.title}</span>\\n                <span \\n                  class=\\"severity-badge\\" \\n                  style=\\"background: {getSeverityColor(issue.severity)}\\"\\n                >\\n                  {issue.severity}\\n                </span>\\n              </div>\\n              <div class=\\"issue-stats\\">\\n                <span class=\\"count\\">{issue.count} reports</span>\\n                <button \\n                  class=\\"view-pattern\\"\\n                  on:click={() => viewPatternDetails(issue.pattern_id)}\\n                >\\n                  View Pattern\\n                </button>\\n              </div>\\n            </div>\\n          {/each}\\n        </div>\\n      </div>\\n\\n      <!-- Trending Issues -->\\n      <div class=\\"panel\\">\\n        <h2>Trending Issues</h2>\\n        <div class=\\"trending-list\\">\\n          {#each analytics.trending_issues as trend}\\n            <div class=\\"trending-item\\">\\n              <div class=\\"trend-info\\">\\n                <TrendingUp size={16} color=\\"#ef4444\\" />\\n                <span>{trend.title}</span>\\n              </div>\\n              <span class=\\"growth-rate\\">+{(trend.growth_rate * 100).toFixed(0)}%</span>\\n            </div>\\n          {/each}\\n        </div>\\n      </div>\\n\\n      <!-- Feedback Heatmap -->\\n      <div class=\\"panel full-width\\">\\n        <h2>Feedback Heatmap by Page</h2>\\n        <div class=\\"heatmap\\">\\n          {#each heatmapData.slice(0, 10) as page}\\n            <div class=\\"heatmap-row\\">\\n              <span class=\\"page-url\\">{page.page}</span>\\n              <div class=\\"issue-bars\\">\\n                {#each Object.entries(page.severity_breakdown) as [severity, count]}\\n                  <div \\n                    class=\\"severity-bar\\"\\n                    style=\\"background: {getSeverityColor(severity)}; width: {(count / page.issue_count) * 100}%\\"\\n                    title=\\"{severity}: {count}\\"\\n                  />\\n                {/each}\\n              </div>\\n              <span class=\\"total-count\\">{page.issue_count}</span>\\n            </div>\\n          {/each}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Feedback List -->\\n    <div class=\\"panel feedback-list-panel\\">\\n      <div class=\\"panel-header\\">\\n        <h2>All Feedback</h2>\\n        <div class=\\"filters\\">\\n          <select bind:value={statusFilter} on:change={loadFeedbackList}>\\n            <option value=\\"\\">All Status</option>\\n            <option value=\\"new\\">New</option>\\n            <option value=\\"investigating\\">Investigating</option>\\n            <option value=\\"in_progress\\">In Progress</option>\\n            <option value=\\"resolved\\">Resolved</option>\\n            <option value=\\"closed\\">Closed</option>\\n          </select>\\n          <select bind:value={typeFilter} on:change={loadFeedbackList}>\\n            <option value=\\"\\">All Types</option>\\n            <option value=\\"bug\\">Bug</option>\\n            <option value=\\"feature\\">Feature</option>\\n            <option value=\\"performance\\">Performance</option>\\n            <option value=\\"ux\\">UX</option>\\n            <option value=\\"other\\">Other</option>\\n          </select>\\n          <select bind:value={severityFilter} on:change={loadFeedbackList}>\\n            <option value=\\"\\">All Severities</option>\\n            <option value=\\"critical\\">Critical</option>\\n            <option value=\\"high\\">High</option>\\n            <option value=\\"medium\\">Medium</option>\\n            <option value=\\"low\\">Low</option>\\n          </select>\\n          <div class=\\"search-box\\">\\n            <Search size={16} />\\n            <input \\n              type=\\"text\\" \\n              placeholder=\\"Search feedback...\\"\\n              bind:value={searchQuery}\\n            />\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\"feedback-table\\">\\n        <table>\\n          <thead>\\n            <tr>\\n              <th>ID</th>\\n              <th>Title</th>\\n              <th>Type</th>\\n              <th>Severity</th>\\n              <th>Status</th>\\n              <th>User</th>\\n              <th>Created</th>\\n              <th>Actions</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            {#each filteredFeedback as item}\\n              <tr>\\n                <td class=\\"id\\">#{item.id.slice(0, 8)}</td>\\n                <td class=\\"title\\">{item.title}</td>\\n                <td>\\n                  <span class=\\"type-badge\\">{item.type}</span>\\n                </td>\\n                <td>\\n                  <span \\n                    class=\\"severity-badge\\"\\n                    style=\\"background: {getSeverityColor(item.severity)}\\"\\n                  >\\n                    {item.severity}\\n                  </span>\\n                </td>\\n                <td>\\n                  <span class=\\"status-badge {getStatusBadgeClass(item.status)}\\">\\n                    {item.status.replace(\'_\', \' \')}\\n                  </span>\\n                </td>\\n                <td>{item.subscription_tier || \'Guest\'}</td>\\n                <td>{new Date(item.created_at).toLocaleDateString()}</td>\\n                <td>\\n                  <div class=\\"actions\\">\\n                    <select \\n                      value={item.status}\\n                      on:change={(e) => updateStatus(item.id, e.target.value)}\\n                    >\\n                      <option value=\\"new\\">New</option>\\n                      <option value=\\"investigating\\">Investigating</option>\\n                      <option value=\\"in_progress\\">In Progress</option>\\n                      <option value=\\"resolved\\">Resolved</option>\\n                      <option value=\\"closed\\">Closed</option>\\n                    </select>\\n                  </div>\\n                </td>\\n              </tr>\\n            {/each}\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n  {/if}\\n\\n  <!-- Pattern Details Modal -->\\n  {#if selectedPattern && patternDetails}\\n    <div class=\\"modal-overlay\\" on:click={() => selectedPattern = null}>\\n      <div class=\\"modal\\" on:click|stopPropagation>\\n        <h2>Pattern Analysis</h2>\\n        <div class=\\"pattern-details\\">\\n          <div class=\\"pattern-info\\">\\n            <p><strong>Pattern ID:</strong> {selectedPattern}</p>\\n            <p><strong>Type:</strong> {patternDetails.pattern.pattern_type}</p>\\n            <p><strong>Occurrences:</strong> {patternDetails.pattern.occurrences}</p>\\n            <p><strong>Affected Users:</strong> {patternDetails.pattern.affected_users}</p>\\n          </div>\\n          \\n          <h3>Suggested Fixes</h3>\\n          <ul class=\\"suggested-fixes\\">\\n            {#each patternDetails.suggested_fixes as fix}\\n              <li>{fix}</li>\\n            {/each}\\n          </ul>\\n\\n          <h3>Related Feedback</h3>\\n          <div class=\\"related-feedback\\">\\n            {#each patternDetails.related_feedback.slice(0, 5) as feedback}\\n              <div class=\\"feedback-preview\\">\\n                <strong>{feedback.title}</strong>\\n                <p>{feedback.description.slice(0, 200)}...</p>\\n                <small>{new Date(feedback.created_at).toLocaleDateString()}</small>\\n              </div>\\n            {/each}\\n          </div>\\n        </div>\\n        <button class=\\"close-modal\\" on:click={() => selectedPattern = null}>\\n          Close\\n        </button>\\n      </div>\\n    </div>\\n  {/if}\\n</div>\\n\\n<style>\\n  .feedback-dashboard {\\n    max-width: 1400px;\\n    margin: 0 auto;\\n    padding: 2rem;\\n  }\\n\\n  .dashboard-header {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    margin-bottom: 2rem;\\n  }\\n\\n  .dashboard-header h1 {\\n    margin: 0;\\n    font-size: 2rem;\\n    font-weight: 700;\\n  }\\n\\n  .header-actions {\\n    display: flex;\\n    gap: 1rem;\\n  }\\n\\n  .train-button {\\n    padding: 0.75rem 1.5rem;\\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\\n    color: white;\\n    border: none;\\n    border-radius: 0.5rem;\\n    font-weight: 600;\\n    cursor: pointer;\\n    transition: all 0.2s;\\n  }\\n\\n  .train-button:hover {\\n    transform: translateY(-2px);\\n    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\\n  }\\n\\n  .loading {\\n    text-align: center;\\n    padding: 4rem;\\n    color: #6b7280;\\n  }\\n\\n  .metrics-grid {\\n    display: grid;\\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\\n    gap: 1.5rem;\\n    margin-bottom: 2rem;\\n  }\\n\\n  .critical-alert {\\n    background: #fee2e2;\\n    color: #991b1b;\\n    padding: 1rem;\\n    border-radius: 0.5rem;\\n    display: flex;\\n    align-items: center;\\n    gap: 0.5rem;\\n    margin-bottom: 2rem;\\n    font-weight: 600;\\n  }\\n\\n  .content-grid {\\n    display: grid;\\n    grid-template-columns: 1fr 1fr;\\n    gap: 2rem;\\n    margin-bottom: 2rem;\\n  }\\n\\n  .panel {\\n    background: white;\\n    border-radius: 0.75rem;\\n    padding: 1.5rem;\\n    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);\\n  }\\n\\n  .panel.full-width {\\n    grid-column: 1 / -1;\\n  }\\n\\n  .panel h2 {\\n    margin: 0 0 1rem 0;\\n    font-size: 1.25rem;\\n    font-weight: 600;\\n  }\\n\\n  .issues-list {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 1rem;\\n  }\\n\\n  .issue-item {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    padding: 1rem;\\n    background: #f9fafb;\\n    border-radius: 0.5rem;\\n  }\\n\\n  .issue-info {\\n    display: flex;\\n    align-items: center;\\n    gap: 0.75rem;\\n  }\\n\\n  .issue-title {\\n    font-weight: 500;\\n    color: #111827;\\n  }\\n\\n  .severity-badge {\\n    padding: 0.25rem 0.5rem;\\n    border-radius: 0.25rem;\\n    color: white;\\n    font-size: 0.75rem;\\n    font-weight: 600;\\n  }\\n\\n  .issue-stats {\\n    display: flex;\\n    align-items: center;\\n    gap: 1rem;\\n  }\\n\\n  .count {\\n    color: #6b7280;\\n    font-size: 0.875rem;\\n  }\\n\\n  .view-pattern {\\n    padding: 0.375rem 0.75rem;\\n    background: #667eea;\\n    color: white;\\n    border: none;\\n    border-radius: 0.375rem;\\n    font-size: 0.875rem;\\n    cursor: pointer;\\n    transition: background 0.2s;\\n  }\\n\\n  .view-pattern:hover {\\n    background: #5a67d8;\\n  }\\n\\n  .trending-list {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 0.75rem;\\n  }\\n\\n  .trending-item {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    padding: 0.75rem;\\n    background: #fef3c7;\\n    border-radius: 0.375rem;\\n  }\\n\\n  .trend-info {\\n    display: flex;\\n    align-items: center;\\n    gap: 0.5rem;\\n  }\\n\\n  .growth-rate {\\n    font-weight: 600;\\n    color: #d97706;\\n  }\\n\\n  .heatmap {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 0.5rem;\\n  }\\n\\n  .heatmap-row {\\n    display: grid;\\n    grid-template-columns: 300px 1fr 60px;\\n    align-items: center;\\n    gap: 1rem;\\n  }\\n\\n  .page-url {\\n    font-size: 0.875rem;\\n    color: #374151;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n  }\\n\\n  .issue-bars {\\n    display: flex;\\n    height: 20px;\\n    border-radius: 0.25rem;\\n    overflow: hidden;\\n  }\\n\\n  .severity-bar {\\n    height: 100%;\\n    transition: width 0.3s;\\n  }\\n\\n  .total-count {\\n    text-align: right;\\n    font-weight: 600;\\n    color: #6b7280;\\n  }\\n\\n  .feedback-list-panel {\\n    margin-top: 2rem;\\n  }\\n\\n  .panel-header {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    margin-bottom: 1.5rem;\\n  }\\n\\n  .filters {\\n    display: flex;\\n    gap: 1rem;\\n    align-items: center;\\n  }\\n\\n  .filters select {\\n    padding: 0.5rem 1rem;\\n    border: 1px solid #e5e7eb;\\n    border-radius: 0.375rem;\\n    font-size: 0.875rem;\\n  }\\n\\n  .search-box {\\n    display: flex;\\n    align-items: center;\\n    padding: 0.5rem 1rem;\\n    border: 1px solid #e5e7eb;\\n    border-radius: 0.375rem;\\n    background: white;\\n  }\\n\\n  .search-box input {\\n    border: none;\\n    outline: none;\\n    margin-left: 0.5rem;\\n    font-size: 0.875rem;\\n  }\\n\\n  .feedback-table {\\n    overflow-x: auto;\\n  }\\n\\n  table {\\n    width: 100%;\\n    border-collapse: collapse;\\n  }\\n\\n  th {\\n    text-align: left;\\n    padding: 0.75rem;\\n    border-bottom: 2px solid #e5e7eb;\\n    font-weight: 600;\\n    color: #374151;\\n    font-size: 0.875rem;\\n  }\\n\\n  td {\\n    padding: 0.75rem;\\n    border-bottom: 1px solid #f3f4f6;\\n    font-size: 0.875rem;\\n  }\\n\\n  .id {\\n    font-family: monospace;\\n    color: #6b7280;\\n  }\\n\\n  .title {\\n    max-width: 300px;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n  }\\n\\n  .type-badge {\\n    padding: 0.25rem 0.5rem;\\n    background: #e5e7eb;\\n    border-radius: 0.25rem;\\n    font-size: 0.75rem;\\n  }\\n\\n  .status-badge {\\n    padding: 0.25rem 0.5rem;\\n    border-radius: 0.25rem;\\n    font-size: 0.75rem;\\n    font-weight: 500;\\n  }\\n\\n  .badge-new { background: #dbeafe; color: #1e40af; }\\n  .badge-investigating { background: #fef3c7; color: #d97706; }\\n  .badge-progress { background: #e0e7ff; color: #4338ca; }\\n  .badge-resolved { background: #d1fae5; color: #065f46; }\\n  .badge-closed { background: #e5e7eb; color: #374151; }\\n\\n  .actions select {\\n    padding: 0.25rem 0.5rem;\\n    border: 1px solid #e5e7eb;\\n    border-radius: 0.25rem;\\n    font-size: 0.75rem;\\n  }\\n\\n  /* Modal */\\n  .modal-overlay {\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    background: rgba(0, 0, 0, 0.5);\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    z-index: 1000;\\n  }\\n\\n  .modal {\\n    background: white;\\n    border-radius: 0.75rem;\\n    padding: 2rem;\\n    max-width: 600px;\\n    width: 90%;\\n    max-height: 80vh;\\n    overflow-y: auto;\\n  }\\n\\n  .modal h2 {\\n    margin: 0 0 1.5rem 0;\\n  }\\n\\n  .pattern-info {\\n    background: #f9fafb;\\n    padding: 1rem;\\n    border-radius: 0.5rem;\\n    margin-bottom: 1.5rem;\\n  }\\n\\n  .pattern-info p {\\n    margin: 0.25rem 0;\\n  }\\n\\n  .suggested-fixes {\\n    list-style: none;\\n    padding: 0;\\n    margin: 0 0 1.5rem 0;\\n  }\\n\\n  .suggested-fixes li {\\n    padding: 0.75rem;\\n    background: #eef2ff;\\n    border-left: 3px solid #667eea;\\n    margin-bottom: 0.5rem;\\n  }\\n\\n  .related-feedback {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 1rem;\\n  }\\n\\n  .feedback-preview {\\n    padding: 1rem;\\n    background: #f9fafb;\\n    border-radius: 0.5rem;\\n  }\\n\\n  .feedback-preview strong {\\n    display: block;\\n    margin-bottom: 0.5rem;\\n    color: #111827;\\n  }\\n\\n  .feedback-preview p {\\n    color: #6b7280;\\n    margin: 0 0 0.5rem 0;\\n    font-size: 0.875rem;\\n  }\\n\\n  .feedback-preview small {\\n    color: #9ca3af;\\n    font-size: 0.75rem;\\n  }\\n\\n  .close-modal {\\n    width: 100%;\\n    padding: 0.75rem;\\n    background: #667eea;\\n    color: white;\\n    border: none;\\n    border-radius: 0.5rem;\\n    font-weight: 600;\\n    cursor: pointer;\\n    transition: background 0.2s;\\n  }\\n\\n  .close-modal:hover {\\n    background: #5a67d8;\\n  }\\n\\n  /* Responsive */\\n  @media (max-width: 768px) {\\n    .content-grid {\\n      grid-template-columns: 1fr;\\n    }\\n\\n    .metrics-grid {\\n      grid-template-columns: 1fr 1fr;\\n    }\\n\\n    .filters {\\n      flex-wrap: wrap;\\n    }\\n\\n    .heatmap-row {\\n      grid-template-columns: 150px 1fr 40px;\\n    }\\n  }\\n</style>"],"names":[],"mappings":"AA+WE,6CAAoB,CAClB,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,OAAO,CAAE,IACX,CAEA,2CAAkB,CAChB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,MAAM,CACnB,aAAa,CAAE,IACjB,CAEA,8BAAiB,CAAC,eAAG,CACnB,MAAM,CAAE,CAAC,CACT,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GACf,CAEA,yCAAgB,CACd,OAAO,CAAE,IAAI,CACb,GAAG,CAAE,IACP,CAEA,uCAAc,CACZ,OAAO,CAAE,OAAO,CAAC,MAAM,CACvB,UAAU,CAAE,gBAAgB,MAAM,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAC7D,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,MAAM,CACrB,WAAW,CAAE,GAAG,CAChB,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,GAAG,CAAC,IAClB,CAEA,uCAAa,MAAO,CAClB,SAAS,CAAE,WAAW,IAAI,CAAC,CAC3B,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAC9C,CAEA,kCAAS,CACP,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,OACT,CAEA,uCAAc,CACZ,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,OAAO,QAAQ,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAC3D,GAAG,CAAE,MAAM,CACX,aAAa,CAAE,IACjB,CAEA,yCAAgB,CACd,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OAAO,CACd,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,MAAM,CACrB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,GAAG,CAAE,MAAM,CACX,aAAa,CAAE,IAAI,CACnB,WAAW,CAAE,GACf,CAEA,uCAAc,CACZ,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,GAAG,CAAC,GAAG,CAC9B,GAAG,CAAE,IAAI,CACT,aAAa,CAAE,IACjB,CAEA,gCAAO,CACL,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,OAAO,CACtB,OAAO,CAAE,MAAM,CACf,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAC3C,CAEA,MAAM,qCAAY,CAChB,WAAW,CAAE,CAAC,CAAC,CAAC,CAAC,EACnB,CAEA,mBAAM,CAAC,eAAG,CACR,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAClB,SAAS,CAAE,OAAO,CAClB,WAAW,CAAE,GACf,CAEA,sCAAa,CACX,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,GAAG,CAAE,IACP,CAEA,qCAAY,CACV,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,MAAM,CACnB,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,OAAO,CACnB,aAAa,CAAE,MACjB,CAEA,qCAAY,CACV,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,GAAG,CAAE,OACP,CAEA,sCAAa,CACX,WAAW,CAAE,GAAG,CAChB,KAAK,CAAE,OACT,CAEA,yCAAgB,CACd,OAAO,CAAE,OAAO,CAAC,MAAM,CACvB,aAAa,CAAE,OAAO,CACtB,KAAK,CAAE,KAAK,CACZ,SAAS,CAAE,OAAO,CAClB,WAAW,CAAE,GACf,CAEA,sCAAa,CACX,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,GAAG,CAAE,IACP,CAEA,gCAAO,CACL,KAAK,CAAE,OAAO,CACd,SAAS,CAAE,QACb,CAEA,uCAAc,CACZ,OAAO,CAAE,QAAQ,CAAC,OAAO,CACzB,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,QAAQ,CACvB,SAAS,CAAE,QAAQ,CACnB,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,UAAU,CAAC,IACzB,CAEA,uCAAa,MAAO,CAClB,UAAU,CAAE,OACd,CAEA,wCAAe,CACb,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,GAAG,CAAE,OACP,CAEA,wCAAe,CACb,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,MAAM,CACnB,OAAO,CAAE,OAAO,CAChB,UAAU,CAAE,OAAO,CACnB,aAAa,CAAE,QACjB,CAEA,qCAAY,CACV,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,GAAG,CAAE,MACP,CAEA,sCAAa,CACX,WAAW,CAAE,GAAG,CAChB,KAAK,CAAE,OACT,CAEA,kCAAS,CACP,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,GAAG,CAAE,MACP,CAEA,sCAAa,CACX,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,KAAK,CAAC,GAAG,CAAC,IAAI,CACrC,WAAW,CAAE,MAAM,CACnB,GAAG,CAAE,IACP,CAEA,mCAAU,CACR,SAAS,CAAE,QAAQ,CACnB,KAAK,CAAE,OAAO,CACd,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,QAAQ,CACvB,WAAW,CAAE,MACf,CAEA,qCAAY,CACV,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,OAAO,CACtB,QAAQ,CAAE,MACZ,CAEA,uCAAc,CACZ,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,KAAK,CAAC,IACpB,CAEA,sCAAa,CACX,UAAU,CAAE,KAAK,CACjB,WAAW,CAAE,GAAG,CAChB,KAAK,CAAE,OACT,CAEA,8CAAqB,CACnB,UAAU,CAAE,IACd,CAEA,uCAAc,CACZ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,MAAM,CACnB,aAAa,CAAE,MACjB,CAEA,kCAAS,CACP,OAAO,CAAE,IAAI,CACb,GAAG,CAAE,IAAI,CACT,WAAW,CAAE,MACf,CAEA,qBAAQ,CAAC,mBAAO,CACd,OAAO,CAAE,MAAM,CAAC,IAAI,CACpB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,aAAa,CAAE,QAAQ,CACvB,SAAS,CAAE,QACb,CAEA,qCAAY,CACV,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,OAAO,CAAE,MAAM,CAAC,IAAI,CACpB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,aAAa,CAAE,QAAQ,CACvB,UAAU,CAAE,KACd,CAEA,wBAAW,CAAC,kBAAM,CAChB,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,SAAS,CAAE,QACb,CAEA,yCAAgB,CACd,UAAU,CAAE,IACd,CAEA,+BAAM,CACJ,KAAK,CAAE,IAAI,CACX,eAAe,CAAE,QACnB,CAEA,4BAAG,CACD,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,OAAO,CAChB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,WAAW,CAAE,GAAG,CAChB,KAAK,CAAE,OAAO,CACd,SAAS,CAAE,QACb,CAEA,4BAAG,CACD,OAAO,CAAE,OAAO,CAChB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,SAAS,CAAE,QACb,CAEA,6BAAI,CACF,WAAW,CAAE,SAAS,CACtB,KAAK,CAAE,OACT,CAEA,gCAAO,CACL,SAAS,CAAE,KAAK,CAChB,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,QAAQ,CACvB,WAAW,CAAE,MACf,CAEA,qCAAY,CACV,OAAO,CAAE,OAAO,CAAC,MAAM,CACvB,UAAU,CAAE,OAAO,CACnB,aAAa,CAAE,OAAO,CACtB,SAAS,CAAE,OACb,CAEA,uCAAc,CACZ,OAAO,CAAE,OAAO,CAAC,MAAM,CACvB,aAAa,CAAE,OAAO,CACtB,SAAS,CAAE,OAAO,CAClB,WAAW,CAAE,GACf,CAEA,oCAAW,CAAE,UAAU,CAAE,OAAO,CAAE,KAAK,CAAE,OAAS,CAClD,8CAAqB,CAAE,UAAU,CAAE,OAAO,CAAE,KAAK,CAAE,OAAS,CAC5D,yCAAgB,CAAE,UAAU,CAAE,OAAO,CAAE,KAAK,CAAE,OAAS,CACvD,yCAAgB,CAAE,UAAU,CAAE,OAAO,CAAE,KAAK,CAAE,OAAS,CACvD,uCAAc,CAAE,UAAU,CAAE,OAAO,CAAE,KAAK,CAAE,OAAS,CAErD,qBAAQ,CAAC,mBAAO,CACd,OAAO,CAAE,OAAO,CAAC,MAAM,CACvB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,aAAa,CAAE,OAAO,CACtB,SAAS,CAAE,OACb,CAGA,wCAAe,CACb,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,CAAC,CACT,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAC9B,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,OAAO,CAAE,IACX,CAEA,gCAAO,CACL,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,OAAO,CACtB,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,KAAK,CAChB,KAAK,CAAE,GAAG,CACV,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,IACd,CAEA,mBAAM,CAAC,eAAG,CACR,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CACrB,CAEA,uCAAc,CACZ,UAAU,CAAE,OAAO,CACnB,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,MAAM,CACrB,aAAa,CAAE,MACjB,CAEA,0BAAa,CAAC,cAAE,CACd,MAAM,CAAE,OAAO,CAAC,CAClB,CAEA,0CAAiB,CACf,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CACrB,CAEA,6BAAgB,CAAC,eAAG,CAClB,OAAO,CAAE,OAAO,CAChB,UAAU,CAAE,OAAO,CACnB,WAAW,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAC9B,aAAa,CAAE,MACjB,CAEA,2CAAkB,CAChB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,GAAG,CAAE,IACP,CAEA,2CAAkB,CAChB,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,OAAO,CACnB,aAAa,CAAE,MACjB,CAEA,8BAAiB,CAAC,mBAAO,CACvB,OAAO,CAAE,KAAK,CACd,aAAa,CAAE,MAAM,CACrB,KAAK,CAAE,OACT,CAEA,8BAAiB,CAAC,cAAE,CAClB,KAAK,CAAE,OAAO,CACd,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CACpB,SAAS,CAAE,QACb,CAEA,8BAAiB,CAAC,kBAAM,CACtB,KAAK,CAAE,OAAO,CACd,SAAS,CAAE,OACb,CAEA,sCAAa,CACX,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,OAAO,CAChB,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,MAAM,CACrB,WAAW,CAAE,GAAG,CAChB,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,UAAU,CAAC,IACzB,CAEA,sCAAY,MAAO,CACjB,UAAU,CAAE,OACd,CAGA,MAAO,YAAY,KAAK,CAAE,CACxB,uCAAc,CACZ,qBAAqB,CAAE,GACzB,CAEA,uCAAc,CACZ,qBAAqB,CAAE,GAAG,CAAC,GAC7B,CAEA,kCAAS,CACP,SAAS,CAAE,IACb,CAEA,sCAAa,CACX,qBAAqB,CAAE,KAAK,CAAC,GAAG,CAAC,IACnC,CACF"}'
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css);
  return `<div class="feedback-dashboard svelte-vlqaw"><div class="dashboard-header svelte-vlqaw"><h1 class="svelte-vlqaw" data-svelte-h="svelte-1434ppb">Feedback Analytics Dashboard</h1> <div class="header-actions svelte-vlqaw"><button class="train-button svelte-vlqaw" data-svelte-h="svelte-1bwey2d">🤖 Retrain Pattern Detection</button></div></div> ${`<div class="loading svelte-vlqaw" data-svelte-h="svelte-djhbv1">Loading dashboard data...</div>`}  ${``} </div>`;
});
export {
  Page as default
};
