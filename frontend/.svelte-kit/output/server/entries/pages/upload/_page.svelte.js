import { s as subscribe } from "../../../chunks/utils.js";
import { c as create_ssr_component, i as createEventDispatcher, a as add_attribute, v as validate_component, b as escape, e as each, m as missing_component } from "../../../chunks/ssr.js";
import "@sveltejs/kit/internal";
import "../../../chunks/exports.js";
import "../../../chunks/state.svelte.js";
import "../../../chunks/auth2.js";
import { a as api } from "../../../chunks/ssr-safe.js";
import { w as writable } from "../../../chunks/index.js";
import { U as Upload } from "../../../chunks/upload.js";
import { C as Circle_alert } from "../../../chunks/circle-alert.js";
import { X } from "../../../chunks/x.js";
import { F as File_json, L as Loader, I as Info } from "../../../chunks/loader.js";
import { F as File_spreadsheet } from "../../../chunks/file-spreadsheet.js";
import { F as File_text } from "../../../chunks/file-text.js";
import { C as Circle_x } from "../../../chunks/circle-x.js";
import { C as Circle_check_big } from "../../../chunks/circle-check-big.js";
import { E as Eye } from "../../../chunks/eye.js";
import { D as Download } from "../../../chunks/download.js";
import { R as Refresh_cw } from "../../../chunks/refresh-cw.js";
const uploadsApi = {
  // Upload a file
  async uploadFile(file) {
    const formData = new FormData();
    formData.append("file", file);
    return api.post("/api/v1/uploads", formData, {
      headers: {
        "Content-Type": "multipart/form-data"
      }
    });
  },
  // Validate uploaded data
  async validateData(uploadId, columnMapping) {
    return api.post(`/api/v1/uploads/${uploadId}/validate`, {
      column_mapping: columnMapping
    });
  },
  // Import validated data
  async importTrades(uploadId, columnMapping) {
    return api.post(`/api/v1/uploads/${uploadId}/import`, {
      column_mapping: columnMapping
    });
  },
  // Get upload status
  async getUploadStatus(uploadId) {
    return api.get(`/api/v1/uploads/${uploadId}/status`);
  },
  // Get suggested column mappings
  async getSuggestedMappings(columns) {
    const mappings = {};
    const fieldMappings = {
      symbol: ["symbol", "ticker", "stock", "instrument"],
      side: ["side", "direction", "type", "position"],
      entry_price: ["entry_price", "entry", "buy_price", "open_price", "price_in"],
      exit_price: ["exit_price", "exit", "sell_price", "close_price", "price_out"],
      quantity: ["quantity", "qty", "shares", "size", "volume"],
      entry_date: ["entry_date", "entry_time", "open_date", "buy_date", "date_in"],
      exit_date: ["exit_date", "exit_time", "close_date", "sell_date", "date_out"],
      pnl: ["pnl", "profit", "profit_loss", "gain_loss", "p&l"],
      strategy: ["strategy", "setup", "system", "method"],
      notes: ["notes", "comments", "remarks", "description"]
    };
    for (const column of columns) {
      const lowerColumn = column.toLowerCase().replace(/[^a-z0-9]/g, "_");
      for (const [field, variations] of Object.entries(fieldMappings)) {
        if (variations.some((v) => lowerColumn.includes(v))) {
          mappings[column] = field;
          break;
        }
      }
    }
    return mappings;
  }
};
function createUploadStore() {
  const { subscribe: subscribe2, set, update } = writable({
    stage: "idle",
    progress: 0,
    message: "",
    file: null,
    uploadResponse: null,
    validationResult: null,
    columnMapping: {},
    importResult: null,
    error: null
  });
  return {
    subscribe: subscribe2,
    reset: () => set({
      stage: "idle",
      progress: 0,
      message: "",
      file: null,
      uploadResponse: null,
      validationResult: null,
      columnMapping: {},
      importResult: null,
      error: null
    }),
    setStage: (stage) => update((s) => ({ ...s, stage })),
    setProgress: (progress) => update((s) => ({ ...s, progress })),
    setMessage: (message) => update((s) => ({ ...s, message })),
    setFile: (file) => update((s) => ({ ...s, file })),
    setUploadResponse: (response) => update((s) => ({
      ...s,
      uploadResponse: response
    })),
    setValidationResult: (result) => update((s) => ({
      ...s,
      validationResult: result
    })),
    setColumnMapping: (mapping) => update((s) => ({
      ...s,
      columnMapping: mapping
    })),
    setImportResult: (result) => update((s) => ({
      ...s,
      importResult: result
    })),
    setError: (error) => update((s) => ({
      ...s,
      error,
      stage: "error"
    }))
  };
}
const uploadStore = createUploadStore();
const css$5 = {
  code: ".file-upload.svelte-8nrkyq.svelte-8nrkyq{width:100%}.drop-zone.svelte-8nrkyq.svelte-8nrkyq{border:2px dashed #e0e0e0;border-radius:12px;padding:3rem;text-align:center;transition:all 0.3s ease;background:#fafafa;cursor:pointer}.drop-zone.svelte-8nrkyq.svelte-8nrkyq:hover{border-color:#10b981;background:#f0fdf4}.drop-zone.active.svelte-8nrkyq.svelte-8nrkyq{border-color:#10b981;background:#f0fdf4;transform:scale(1.02)}.upload-label.svelte-8nrkyq.svelte-8nrkyq{display:flex;flex-direction:column;align-items:center;gap:1rem;cursor:pointer}.upload-label.svelte-8nrkyq h3.svelte-8nrkyq{font-size:1.25rem;font-weight:600;color:#333;margin:0}.upload-label.svelte-8nrkyq p.svelte-8nrkyq{color:#666;margin:0}.formats.svelte-8nrkyq.svelte-8nrkyq{display:flex;flex-direction:column;gap:0.25rem;margin-top:1rem}.formats.svelte-8nrkyq span.svelte-8nrkyq{font-size:0.875rem;color:#999}.hidden.svelte-8nrkyq.svelte-8nrkyq{display:none}.errors.svelte-8nrkyq.svelte-8nrkyq{margin-top:1rem;display:flex;flex-direction:column;gap:0.5rem}.error.svelte-8nrkyq.svelte-8nrkyq{display:flex;align-items:center;gap:0.5rem;padding:0.75rem 1rem;background:#fee;border:1px solid #fcc;border-radius:6px;color:#c00;font-size:0.875rem}.file-list.svelte-8nrkyq.svelte-8nrkyq{margin-top:2rem;padding:1.5rem;background:white;border:1px solid #e0e0e0;border-radius:8px}.file-list.svelte-8nrkyq h4.svelte-8nrkyq{margin:0 0 1rem 0;font-size:1rem;font-weight:600;color:#333}.file-item.svelte-8nrkyq.svelte-8nrkyq{display:flex;align-items:center;justify-content:space-between;padding:0.75rem;background:#f9f9f9;border-radius:6px;margin-bottom:0.5rem}.file-item.svelte-8nrkyq.svelte-8nrkyq:last-child{margin-bottom:0}.file-info.svelte-8nrkyq.svelte-8nrkyq{display:flex;align-items:center;gap:0.75rem;flex:1}.file-name.svelte-8nrkyq.svelte-8nrkyq{flex:1;font-weight:500;color:#333;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.file-size.svelte-8nrkyq.svelte-8nrkyq{font-size:0.875rem;color:#666}.remove-btn.svelte-8nrkyq.svelte-8nrkyq{padding:0.25rem;background:none;border:none;color:#999;cursor:pointer;border-radius:4px;transition:all 0.2s;display:flex;align-items:center;justify-content:center}.remove-btn.svelte-8nrkyq.svelte-8nrkyq:hover{background:#fee;color:#c00}.upload-icon{stroke-width:1.5}@media(max-width: 640px){.drop-zone.svelte-8nrkyq.svelte-8nrkyq{padding:2rem 1rem}.upload-label.svelte-8nrkyq h3.svelte-8nrkyq{font-size:1.125rem}.formats.svelte-8nrkyq.svelte-8nrkyq{font-size:0.75rem}.file-info.svelte-8nrkyq.svelte-8nrkyq{gap:0.5rem}.file-name.svelte-8nrkyq.svelte-8nrkyq{font-size:0.875rem}}",
  map: '{"version":3,"file":"FileUpload.svelte","sources":["FileUpload.svelte"],"sourcesContent":["<script lang=\\"ts\\">\\"use strict\\";\\nimport { createEventDispatcher } from \\"svelte\\";\\nimport { Upload, X, FileText, FileSpreadsheet, FileJson, AlertCircle } from \\"lucide-svelte\\";\\nconst dispatch = createEventDispatcher();\\nexport let accept = \\".csv,.xlsx,.xls,.json\\";\\nexport let maxSize = 10 * 1024 * 1024;\\nexport let multiple = false;\\nlet dragActive = false;\\nlet files = [];\\nlet errors = [];\\nconst acceptedFormats = {\\n  \\".csv\\": { icon: FileText, color: \\"text-green-600\\" },\\n  \\".xlsx\\": { icon: FileSpreadsheet, color: \\"text-blue-600\\" },\\n  \\".xls\\": { icon: FileSpreadsheet, color: \\"text-blue-600\\" },\\n  \\".json\\": { icon: FileJson, color: \\"text-orange-600\\" }\\n};\\nfunction handleDragEnter(e) {\\n  e.preventDefault();\\n  e.stopPropagation();\\n  dragActive = true;\\n}\\nfunction handleDragLeave(e) {\\n  e.preventDefault();\\n  e.stopPropagation();\\n  dragActive = false;\\n}\\nfunction handleDragOver(e) {\\n  e.preventDefault();\\n  e.stopPropagation();\\n}\\nfunction handleDrop(e) {\\n  e.preventDefault();\\n  e.stopPropagation();\\n  dragActive = false;\\n  const droppedFiles = Array.from(e.dataTransfer?.files || []);\\n  handleFiles(droppedFiles);\\n}\\nfunction handleFileInput(e) {\\n  const input = e.target;\\n  const selectedFiles = Array.from(input.files || []);\\n  handleFiles(selectedFiles);\\n}\\nfunction handleFiles(newFiles) {\\n  errors = [];\\n  const validFiles = [];\\n  for (const file of newFiles) {\\n    const ext = \\".\\" + file.name.split(\\".\\").pop()?.toLowerCase();\\n    if (!accept.includes(ext)) {\\n      errors.push(`${file.name}: Invalid file type. Accepted formats: ${accept}`);\\n      continue;\\n    }\\n    if (file.size > maxSize) {\\n      errors.push(`${file.name}: File too large. Maximum size: ${formatFileSize(maxSize)}`);\\n      continue;\\n    }\\n    validFiles.push(file);\\n  }\\n  if (multiple) {\\n    files = [...files, ...validFiles];\\n  } else {\\n    files = validFiles.slice(0, 1);\\n  }\\n  if (validFiles.length > 0) {\\n    dispatch(\\"upload\\", { files: validFiles });\\n  }\\n}\\nfunction removeFile(index) {\\n  files = files.filter((_, i) => i !== index);\\n  dispatch(\\"remove\\", { index });\\n}\\nfunction formatFileSize(bytes) {\\n  if (bytes === 0) return \\"0 Bytes\\";\\n  const k = 1024;\\n  const sizes = [\\"Bytes\\", \\"KB\\", \\"MB\\", \\"GB\\"];\\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + \\" \\" + sizes[i];\\n}\\nfunction getFileIcon(fileName) {\\n  const ext = \\".\\" + fileName.split(\\".\\").pop()?.toLowerCase();\\n  return acceptedFormats[ext] || { icon: FileText, color: \\"text-gray-600\\" };\\n}\\n<\/script>\\n\\n<div class=\\"file-upload\\">\\n\\t<div\\n\\t\\tclass=\\"drop-zone {dragActive ? \'active\' : \'\'}\\"\\n\\t\\ton:dragenter={handleDragEnter}\\n\\t\\ton:dragleave={handleDragLeave}\\n\\t\\ton:dragover={handleDragOver}\\n\\t\\ton:drop={handleDrop}\\n\\t\\trole=\\"region\\"\\n\\t\\taria-label=\\"File upload drop zone\\"\\n\\t>\\n\\t\\t<input\\n\\t\\t\\ttype=\\"file\\"\\n\\t\\t\\tid=\\"file-input\\"\\n\\t\\t\\t{accept}\\n\\t\\t\\t{multiple}\\n\\t\\t\\ton:change={handleFileInput}\\n\\t\\t\\tclass=\\"hidden\\"\\n\\t\\t/>\\n\\t\\t\\n\\t\\t<label for=\\"file-input\\" class=\\"upload-label\\">\\n\\t\\t\\t<Upload size={48} class=\\"upload-icon\\" />\\n\\t\\t\\t<h3>Drag & drop files here</h3>\\n\\t\\t\\t<p>or click to browse</p>\\n\\t\\t\\t<div class=\\"formats\\">\\n\\t\\t\\t\\t<span>Accepted formats: CSV, Excel, JSON</span>\\n\\t\\t\\t\\t<span>Maximum size: {formatFileSize(maxSize)}</span>\\n\\t\\t\\t</div>\\n\\t\\t</label>\\n\\t</div>\\n\\t\\n\\t{#if errors.length > 0}\\n\\t\\t<div class=\\"errors\\">\\n\\t\\t\\t{#each errors as error}\\n\\t\\t\\t\\t<div class=\\"error\\">\\n\\t\\t\\t\\t\\t<AlertCircle size={16} />\\n\\t\\t\\t\\t\\t<span>{error}</span>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/each}\\n\\t\\t</div>\\n\\t{/if}\\n\\t\\n\\t{#if files.length > 0}\\n\\t\\t<div class=\\"file-list\\">\\n\\t\\t\\t<h4>Selected Files</h4>\\n\\t\\t\\t{#each files as file, index}\\n\\t\\t\\t\\t{@const fileInfo = getFileIcon(file.name)}\\n\\t\\t\\t\\t<div class=\\"file-item\\">\\n\\t\\t\\t\\t\\t<div class=\\"file-info\\">\\n\\t\\t\\t\\t\\t\\t<svelte:component this={fileInfo.icon} size={20} class={fileInfo.color} />\\n\\t\\t\\t\\t\\t\\t<span class=\\"file-name\\">{file.name}</span>\\n\\t\\t\\t\\t\\t\\t<span class=\\"file-size\\">{formatFileSize(file.size)}</span>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<button\\n\\t\\t\\t\\t\\t\\ttype=\\"button\\"\\n\\t\\t\\t\\t\\t\\tclass=\\"remove-btn\\"\\n\\t\\t\\t\\t\\t\\ton:click={() => removeFile(index)}\\n\\t\\t\\t\\t\\t\\taria-label=\\"Remove file\\"\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<X size={16} />\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/each}\\n\\t\\t</div>\\n\\t{/if}\\n</div>\\n\\n<style>\\n\\t.file-upload {\\n\\t\\twidth: 100%;\\n\\t}\\n\\t\\n\\t.drop-zone {\\n\\t\\tborder: 2px dashed #e0e0e0;\\n\\t\\tborder-radius: 12px;\\n\\t\\tpadding: 3rem;\\n\\t\\ttext-align: center;\\n\\t\\ttransition: all 0.3s ease;\\n\\t\\tbackground: #fafafa;\\n\\t\\tcursor: pointer;\\n\\t}\\n\\t\\n\\t.drop-zone:hover {\\n\\t\\tborder-color: #10b981;\\n\\t\\tbackground: #f0fdf4;\\n\\t}\\n\\t\\n\\t.drop-zone.active {\\n\\t\\tborder-color: #10b981;\\n\\t\\tbackground: #f0fdf4;\\n\\t\\ttransform: scale(1.02);\\n\\t}\\n\\t\\n\\t.upload-label {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\talign-items: center;\\n\\t\\tgap: 1rem;\\n\\t\\tcursor: pointer;\\n\\t}\\n\\t\\n\\t.upload-icon {\\n\\t\\tcolor: #10b981;\\n\\t\\ttransition: transform 0.3s ease;\\n\\t}\\n\\t\\n\\t.drop-zone:hover .upload-icon {\\n\\t\\ttransform: translateY(-4px);\\n\\t}\\n\\t\\n\\t.upload-label h3 {\\n\\t\\tfont-size: 1.25rem;\\n\\t\\tfont-weight: 600;\\n\\t\\tcolor: #333;\\n\\t\\tmargin: 0;\\n\\t}\\n\\t\\n\\t.upload-label p {\\n\\t\\tcolor: #666;\\n\\t\\tmargin: 0;\\n\\t}\\n\\t\\n\\t.formats {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\tgap: 0.25rem;\\n\\t\\tmargin-top: 1rem;\\n\\t}\\n\\t\\n\\t.formats span {\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tcolor: #999;\\n\\t}\\n\\t\\n\\t.hidden {\\n\\t\\tdisplay: none;\\n\\t}\\n\\t\\n\\t.errors {\\n\\t\\tmargin-top: 1rem;\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\tgap: 0.5rem;\\n\\t}\\n\\t\\n\\t.error {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tgap: 0.5rem;\\n\\t\\tpadding: 0.75rem 1rem;\\n\\t\\tbackground: #fee;\\n\\t\\tborder: 1px solid #fcc;\\n\\t\\tborder-radius: 6px;\\n\\t\\tcolor: #c00;\\n\\t\\tfont-size: 0.875rem;\\n\\t}\\n\\t\\n\\t.file-list {\\n\\t\\tmargin-top: 2rem;\\n\\t\\tpadding: 1.5rem;\\n\\t\\tbackground: white;\\n\\t\\tborder: 1px solid #e0e0e0;\\n\\t\\tborder-radius: 8px;\\n\\t}\\n\\t\\n\\t.file-list h4 {\\n\\t\\tmargin: 0 0 1rem 0;\\n\\t\\tfont-size: 1rem;\\n\\t\\tfont-weight: 600;\\n\\t\\tcolor: #333;\\n\\t}\\n\\t\\n\\t.file-item {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tjustify-content: space-between;\\n\\t\\tpadding: 0.75rem;\\n\\t\\tbackground: #f9f9f9;\\n\\t\\tborder-radius: 6px;\\n\\t\\tmargin-bottom: 0.5rem;\\n\\t}\\n\\t\\n\\t.file-item:last-child {\\n\\t\\tmargin-bottom: 0;\\n\\t}\\n\\t\\n\\t.file-info {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tgap: 0.75rem;\\n\\t\\tflex: 1;\\n\\t}\\n\\t\\n\\t.file-name {\\n\\t\\tflex: 1;\\n\\t\\tfont-weight: 500;\\n\\t\\tcolor: #333;\\n\\t\\twhite-space: nowrap;\\n\\t\\toverflow: hidden;\\n\\t\\ttext-overflow: ellipsis;\\n\\t}\\n\\t\\n\\t.file-size {\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tcolor: #666;\\n\\t}\\n\\t\\n\\t.remove-btn {\\n\\t\\tpadding: 0.25rem;\\n\\t\\tbackground: none;\\n\\t\\tborder: none;\\n\\t\\tcolor: #999;\\n\\t\\tcursor: pointer;\\n\\t\\tborder-radius: 4px;\\n\\t\\ttransition: all 0.2s;\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tjustify-content: center;\\n\\t}\\n\\t\\n\\t.remove-btn:hover {\\n\\t\\tbackground: #fee;\\n\\t\\tcolor: #c00;\\n\\t}\\n\\t\\n\\t:global(.upload-icon) {\\n\\t\\tstroke-width: 1.5;\\n\\t}\\n\\t\\n\\t@media (max-width: 640px) {\\n\\t\\t.drop-zone {\\n\\t\\t\\tpadding: 2rem 1rem;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.upload-label h3 {\\n\\t\\t\\tfont-size: 1.125rem;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.formats {\\n\\t\\t\\tfont-size: 0.75rem;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.file-info {\\n\\t\\t\\tgap: 0.5rem;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.file-name {\\n\\t\\t\\tfont-size: 0.875rem;\\n\\t\\t}\\n\\t}\\n</style>"],"names":[],"mappings":"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"}'
};
function formatFileSize(bytes) {
  if (bytes === 0) return "0 Bytes";
  const k = 1024;
  const sizes = ["Bytes", "KB", "MB", "GB"];
  const i = Math.floor(Math.log(bytes) / Math.log(k));
  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + " " + sizes[i];
}
const FileUpload = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  createEventDispatcher();
  let { accept = ".csv,.xlsx,.xls,.json" } = $$props;
  let { maxSize = 10 * 1024 * 1024 } = $$props;
  let { multiple = false } = $$props;
  let files = [];
  let errors = [];
  const acceptedFormats = {
    ".csv": { icon: File_text, color: "text-green-600" },
    ".xlsx": {
      icon: File_spreadsheet,
      color: "text-blue-600"
    },
    ".xls": {
      icon: File_spreadsheet,
      color: "text-blue-600"
    },
    ".json": { icon: File_json, color: "text-orange-600" }
  };
  function getFileIcon(fileName) {
    const ext = "." + fileName.split(".").pop()?.toLowerCase();
    return acceptedFormats[ext] || { icon: File_text, color: "text-gray-600" };
  }
  if ($$props.accept === void 0 && $$bindings.accept && accept !== void 0) $$bindings.accept(accept);
  if ($$props.maxSize === void 0 && $$bindings.maxSize && maxSize !== void 0) $$bindings.maxSize(maxSize);
  if ($$props.multiple === void 0 && $$bindings.multiple && multiple !== void 0) $$bindings.multiple(multiple);
  $$result.css.add(css$5);
  return `<div class="file-upload svelte-8nrkyq"><div class="${"drop-zone " + escape("", true) + " svelte-8nrkyq"}" role="region" aria-label="File upload drop zone"><input type="file" id="file-input"${add_attribute("accept", accept, 0)} ${multiple ? "multiple" : ""} class="hidden svelte-8nrkyq"> <label for="file-input" class="upload-label svelte-8nrkyq">${validate_component(Upload, "Upload").$$render($$result, { size: 48, class: "upload-icon" }, {}, {})} <h3 class="svelte-8nrkyq" data-svelte-h="svelte-ghq3dk">Drag &amp; drop files here</h3> <p class="svelte-8nrkyq" data-svelte-h="svelte-9qv2v8">or click to browse</p> <div class="formats svelte-8nrkyq"><span class="svelte-8nrkyq" data-svelte-h="svelte-1v7yak">Accepted formats: CSV, Excel, JSON</span> <span class="svelte-8nrkyq">Maximum size: ${escape(formatFileSize(maxSize))}</span></div></label></div> ${errors.length > 0 ? `<div class="errors svelte-8nrkyq">${each(errors, (error) => {
    return `<div class="error svelte-8nrkyq">${validate_component(Circle_alert, "AlertCircle").$$render($$result, { size: 16 }, {}, {})} <span>${escape(error)}</span> </div>`;
  })}</div>` : ``} ${files.length > 0 ? `<div class="file-list svelte-8nrkyq"><h4 class="svelte-8nrkyq" data-svelte-h="svelte-6nsbgs">Selected Files</h4> ${each(files, (file, index) => {
    let fileInfo = getFileIcon(file.name);
    return ` <div class="file-item svelte-8nrkyq"><div class="file-info svelte-8nrkyq">${validate_component(fileInfo.icon || missing_component, "svelte:component").$$render($$result, { size: 20, class: fileInfo.color }, {}, {})} <span class="file-name svelte-8nrkyq">${escape(file.name)}</span> <span class="file-size svelte-8nrkyq">${escape(formatFileSize(file.size))}</span></div> <button type="button" class="remove-btn svelte-8nrkyq" aria-label="Remove file">${validate_component(X, "X").$$render($$result, { size: 16 }, {}, {})}</button> </div>`;
  })}</div>` : ``} </div>`;
});
const css$4 = {
  code: ".upload-progress.svelte-hlxry.svelte-hlxry{background:white;border:1px solid #e0e0e0;border-radius:8px;padding:1.5rem;margin-top:1rem}.progress-header.svelte-hlxry.svelte-hlxry{display:flex;justify-content:space-between;align-items:center;margin-bottom:1rem}.stage-info.svelte-hlxry.svelte-hlxry{display:flex;align-items:center;gap:0.5rem}.stage-label.svelte-hlxry.svelte-hlxry{font-weight:600;font-size:0.875rem;text-transform:uppercase;letter-spacing:0.05em}.file-name.svelte-hlxry.svelte-hlxry{font-size:0.875rem;color:#666;max-width:200px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.progress-bar-container.svelte-hlxry.svelte-hlxry{width:100%;height:8px;background:#f0f0f0;border-radius:4px;overflow:hidden;margin-bottom:1rem}.progress-bar.svelte-hlxry.svelte-hlxry{height:100%;background:#10b981;border-radius:4px;transition:width 0.3s ease}.progress-details.svelte-hlxry.svelte-hlxry{margin-bottom:1rem}.message.svelte-hlxry.svelte-hlxry{font-size:0.875rem;color:#666;margin:0 0 0.5rem 0}.row-count.svelte-hlxry.svelte-hlxry{font-size:0.875rem;color:#999;margin:0}.error-list.svelte-hlxry.svelte-hlxry,.warning-list.svelte-hlxry.svelte-hlxry{margin-top:1rem;padding:1rem;border-radius:6px;font-size:0.875rem}.error-list.svelte-hlxry.svelte-hlxry{background:#fee;border:1px solid #fcc;color:#c00}.warning-list.svelte-hlxry.svelte-hlxry{background:#fffbeb;border:1px solid #fde68a;color:#92400e}.error-list.svelte-hlxry h4.svelte-hlxry,.warning-list.svelte-hlxry h4.svelte-hlxry{display:flex;align-items:center;gap:0.5rem;margin:0 0 0.5rem 0;font-size:0.875rem;font-weight:600}.error-list.svelte-hlxry ul.svelte-hlxry,.warning-list.svelte-hlxry ul.svelte-hlxry{margin:0;padding-left:1.5rem;list-style:disc}.error-list.svelte-hlxry li.svelte-hlxry,.warning-list.svelte-hlxry li.svelte-hlxry{margin-bottom:0.25rem}.more.svelte-hlxry.svelte-hlxry{font-style:italic;opacity:0.8}.animate-spin{animation:svelte-hlxry-spin 1s linear infinite}@keyframes svelte-hlxry-spin{from{transform:rotate(0deg)}to{transform:rotate(360deg)}}@media(max-width: 640px){.upload-progress.svelte-hlxry.svelte-hlxry{padding:1rem}.file-name.svelte-hlxry.svelte-hlxry{max-width:150px}}",
  map: `{"version":3,"file":"UploadProgress.svelte","sources":["UploadProgress.svelte"],"sourcesContent":["<script lang=\\"ts\\">\\"use strict\\";\\nimport { CheckCircle, XCircle, Loader, AlertCircle } from \\"lucide-svelte\\";\\nexport let stage = \\"idle\\";\\nexport let progress = 0;\\nexport let message = \\"\\";\\nexport let fileName = \\"\\";\\nexport let rowsProcessed = 0;\\nexport let totalRows = 0;\\nexport let errors = [];\\nexport let warnings = [];\\nconst stages = {\\n  idle: { label: \\"Ready\\", icon: null, color: \\"text-gray-500\\" },\\n  uploading: { label: \\"Uploading\\", icon: Loader, color: \\"text-blue-600\\" },\\n  validating: { label: \\"Validating\\", icon: Loader, color: \\"text-orange-600\\" },\\n  mapping: { label: \\"Mapping Columns\\", icon: Loader, color: \\"text-purple-600\\" },\\n  importing: { label: \\"Importing\\", icon: Loader, color: \\"text-green-600\\" },\\n  complete: { label: \\"Complete\\", icon: CheckCircle, color: \\"text-green-600\\" },\\n  error: { label: \\"Error\\", icon: XCircle, color: \\"text-red-600\\" }\\n};\\n$: currentStage = stages[stage];\\n$: progressPercentage = Math.min(100, Math.max(0, progress));\\n<\/script>\\n\\n{#if stage !== 'idle'}\\n\\t<div class=\\"upload-progress\\">\\n\\t\\t<div class=\\"progress-header\\">\\n\\t\\t\\t<div class=\\"stage-info\\">\\n\\t\\t\\t\\t{#if currentStage.icon}\\n\\t\\t\\t\\t\\t<svelte:component \\n\\t\\t\\t\\t\\t\\tthis={currentStage.icon} \\n\\t\\t\\t\\t\\t\\tsize={20} \\n\\t\\t\\t\\t\\t\\tclass=\\"{currentStage.color} {stage === 'uploading' || stage === 'validating' || stage === 'mapping' || stage === 'importing' ? 'animate-spin' : ''}\\"\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t<span class=\\"stage-label {currentStage.color}\\">{currentStage.label}</span>\\n\\t\\t\\t</div>\\n\\t\\t\\t{#if fileName}\\n\\t\\t\\t\\t<span class=\\"file-name\\">{fileName}</span>\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div class=\\"progress-bar-container\\">\\n\\t\\t\\t<div class=\\"progress-bar\\" style=\\"width: {progressPercentage}%\\"></div>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div class=\\"progress-details\\">\\n\\t\\t\\t{#if message}\\n\\t\\t\\t\\t<p class=\\"message\\">{message}</p>\\n\\t\\t\\t{/if}\\n\\t\\t\\t\\n\\t\\t\\t{#if totalRows > 0 && (stage === 'validating' || stage === 'importing')}\\n\\t\\t\\t\\t<p class=\\"row-count\\">\\n\\t\\t\\t\\t\\tProcessing: {rowsProcessed} / {totalRows} rows\\n\\t\\t\\t\\t</p>\\n\\t\\t\\t{/if}\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t{#if errors.length > 0}\\n\\t\\t\\t<div class=\\"error-list\\">\\n\\t\\t\\t\\t<h4><XCircle size={16} /> Errors ({errors.length})</h4>\\n\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t{#each errors.slice(0, 5) as error}\\n\\t\\t\\t\\t\\t\\t<li>{error}</li>\\n\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t{#if errors.length > 5}\\n\\t\\t\\t\\t\\t\\t<li class=\\"more\\">... and {errors.length - 5} more errors</li>\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t</ul>\\n\\t\\t\\t</div>\\n\\t\\t{/if}\\n\\t\\t\\n\\t\\t{#if warnings.length > 0}\\n\\t\\t\\t<div class=\\"warning-list\\">\\n\\t\\t\\t\\t<h4><AlertCircle size={16} /> Warnings ({warnings.length})</h4>\\n\\t\\t\\t\\t<ul>\\n\\t\\t\\t\\t\\t{#each warnings.slice(0, 3) as warning}\\n\\t\\t\\t\\t\\t\\t<li>{warning}</li>\\n\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t{#if warnings.length > 3}\\n\\t\\t\\t\\t\\t\\t<li class=\\"more\\">... and {warnings.length - 3} more warnings</li>\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t</ul>\\n\\t\\t\\t</div>\\n\\t\\t{/if}\\n\\t</div>\\n{/if}\\n\\n<style>\\n\\t.upload-progress {\\n\\t\\tbackground: white;\\n\\t\\tborder: 1px solid #e0e0e0;\\n\\t\\tborder-radius: 8px;\\n\\t\\tpadding: 1.5rem;\\n\\t\\tmargin-top: 1rem;\\n\\t}\\n\\t\\n\\t.progress-header {\\n\\t\\tdisplay: flex;\\n\\t\\tjustify-content: space-between;\\n\\t\\talign-items: center;\\n\\t\\tmargin-bottom: 1rem;\\n\\t}\\n\\t\\n\\t.stage-info {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tgap: 0.5rem;\\n\\t}\\n\\t\\n\\t.stage-label {\\n\\t\\tfont-weight: 600;\\n\\t\\tfont-size: 0.875rem;\\n\\t\\ttext-transform: uppercase;\\n\\t\\tletter-spacing: 0.05em;\\n\\t}\\n\\t\\n\\t.file-name {\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tcolor: #666;\\n\\t\\tmax-width: 200px;\\n\\t\\twhite-space: nowrap;\\n\\t\\toverflow: hidden;\\n\\t\\ttext-overflow: ellipsis;\\n\\t}\\n\\t\\n\\t.progress-bar-container {\\n\\t\\twidth: 100%;\\n\\t\\theight: 8px;\\n\\t\\tbackground: #f0f0f0;\\n\\t\\tborder-radius: 4px;\\n\\t\\toverflow: hidden;\\n\\t\\tmargin-bottom: 1rem;\\n\\t}\\n\\t\\n\\t.progress-bar {\\n\\t\\theight: 100%;\\n\\t\\tbackground: #10b981;\\n\\t\\tborder-radius: 4px;\\n\\t\\ttransition: width 0.3s ease;\\n\\t}\\n\\t\\n\\t.progress-details {\\n\\t\\tmargin-bottom: 1rem;\\n\\t}\\n\\t\\n\\t.message {\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tcolor: #666;\\n\\t\\tmargin: 0 0 0.5rem 0;\\n\\t}\\n\\t\\n\\t.row-count {\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tcolor: #999;\\n\\t\\tmargin: 0;\\n\\t}\\n\\t\\n\\t.error-list, .warning-list {\\n\\t\\tmargin-top: 1rem;\\n\\t\\tpadding: 1rem;\\n\\t\\tborder-radius: 6px;\\n\\t\\tfont-size: 0.875rem;\\n\\t}\\n\\t\\n\\t.error-list {\\n\\t\\tbackground: #fee;\\n\\t\\tborder: 1px solid #fcc;\\n\\t\\tcolor: #c00;\\n\\t}\\n\\t\\n\\t.warning-list {\\n\\t\\tbackground: #fffbeb;\\n\\t\\tborder: 1px solid #fde68a;\\n\\t\\tcolor: #92400e;\\n\\t}\\n\\t\\n\\t.error-list h4, .warning-list h4 {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tgap: 0.5rem;\\n\\t\\tmargin: 0 0 0.5rem 0;\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tfont-weight: 600;\\n\\t}\\n\\t\\n\\t.error-list ul, .warning-list ul {\\n\\t\\tmargin: 0;\\n\\t\\tpadding-left: 1.5rem;\\n\\t\\tlist-style: disc;\\n\\t}\\n\\t\\n\\t.error-list li, .warning-list li {\\n\\t\\tmargin-bottom: 0.25rem;\\n\\t}\\n\\t\\n\\t.more {\\n\\t\\tfont-style: italic;\\n\\t\\topacity: 0.8;\\n\\t}\\n\\t\\n\\t:global(.animate-spin) {\\n\\t\\tanimation: spin 1s linear infinite;\\n\\t}\\n\\t\\n\\t@keyframes spin {\\n\\t\\tfrom {\\n\\t\\t\\ttransform: rotate(0deg);\\n\\t\\t}\\n\\t\\tto {\\n\\t\\t\\ttransform: rotate(360deg);\\n\\t\\t}\\n\\t}\\n\\t\\n\\t@media (max-width: 640px) {\\n\\t\\t.upload-progress {\\n\\t\\t\\tpadding: 1rem;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.file-name {\\n\\t\\t\\tmax-width: 150px;\\n\\t\\t}\\n\\t}\\n</style>"],"names":[],"mappings":"AAwFC,0CAAiB,CAChB,UAAU,CAAE,KAAK,CACjB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,MAAM,CACf,UAAU,CAAE,IACb,CAEA,0CAAiB,CAChB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,MAAM,CACnB,aAAa,CAAE,IAChB,CAEA,qCAAY,CACX,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,GAAG,CAAE,MACN,CAEA,sCAAa,CACZ,WAAW,CAAE,GAAG,CAChB,SAAS,CAAE,QAAQ,CACnB,cAAc,CAAE,SAAS,CACzB,cAAc,CAAE,MACjB,CAEA,oCAAW,CACV,SAAS,CAAE,QAAQ,CACnB,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,MAAM,CACnB,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,QAChB,CAEA,iDAAwB,CACvB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CACX,UAAU,CAAE,OAAO,CACnB,aAAa,CAAE,GAAG,CAClB,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,IAChB,CAEA,uCAAc,CACb,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,OAAO,CACnB,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,KAAK,CAAC,IAAI,CAAC,IACxB,CAEA,2CAAkB,CACjB,aAAa,CAAE,IAChB,CAEA,kCAAS,CACR,SAAS,CAAE,QAAQ,CACnB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CACpB,CAEA,oCAAW,CACV,SAAS,CAAE,QAAQ,CACnB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,CACT,CAEA,qCAAW,CAAE,uCAAc,CAC1B,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,GAAG,CAClB,SAAS,CAAE,QACZ,CAEA,qCAAY,CACX,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,KAAK,CAAE,IACR,CAEA,uCAAc,CACb,UAAU,CAAE,OAAO,CACnB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,KAAK,CAAE,OACR,CAEA,wBAAW,CAAC,eAAE,CAAE,0BAAa,CAAC,eAAG,CAChC,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,GAAG,CAAE,MAAM,CACX,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CACpB,SAAS,CAAE,QAAQ,CACnB,WAAW,CAAE,GACd,CAEA,wBAAW,CAAC,eAAE,CAAE,0BAAa,CAAC,eAAG,CAChC,MAAM,CAAE,CAAC,CACT,YAAY,CAAE,MAAM,CACpB,UAAU,CAAE,IACb,CAEA,wBAAW,CAAC,eAAE,CAAE,0BAAa,CAAC,eAAG,CAChC,aAAa,CAAE,OAChB,CAEA,+BAAM,CACL,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GACV,CAEQ,aAAe,CACtB,SAAS,CAAE,iBAAI,CAAC,EAAE,CAAC,MAAM,CAAC,QAC3B,CAEA,WAAW,iBAAK,CACf,IAAK,CACJ,SAAS,CAAE,OAAO,IAAI,CACvB,CACA,EAAG,CACF,SAAS,CAAE,OAAO,MAAM,CACzB,CACD,CAEA,MAAO,YAAY,KAAK,CAAE,CACzB,0CAAiB,CAChB,OAAO,CAAE,IACV,CAEA,oCAAW,CACV,SAAS,CAAE,KACZ,CACD"}`
};
const UploadProgress = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let currentStage;
  let progressPercentage;
  let { stage = "idle" } = $$props;
  let { progress = 0 } = $$props;
  let { message = "" } = $$props;
  let { fileName = "" } = $$props;
  let { rowsProcessed = 0 } = $$props;
  let { totalRows = 0 } = $$props;
  let { errors = [] } = $$props;
  let { warnings = [] } = $$props;
  const stages = {
    idle: {
      label: "Ready",
      icon: null,
      color: "text-gray-500"
    },
    uploading: {
      label: "Uploading",
      icon: Loader,
      color: "text-blue-600"
    },
    validating: {
      label: "Validating",
      icon: Loader,
      color: "text-orange-600"
    },
    mapping: {
      label: "Mapping Columns",
      icon: Loader,
      color: "text-purple-600"
    },
    importing: {
      label: "Importing",
      icon: Loader,
      color: "text-green-600"
    },
    complete: {
      label: "Complete",
      icon: Circle_check_big,
      color: "text-green-600"
    },
    error: {
      label: "Error",
      icon: Circle_x,
      color: "text-red-600"
    }
  };
  if ($$props.stage === void 0 && $$bindings.stage && stage !== void 0) $$bindings.stage(stage);
  if ($$props.progress === void 0 && $$bindings.progress && progress !== void 0) $$bindings.progress(progress);
  if ($$props.message === void 0 && $$bindings.message && message !== void 0) $$bindings.message(message);
  if ($$props.fileName === void 0 && $$bindings.fileName && fileName !== void 0) $$bindings.fileName(fileName);
  if ($$props.rowsProcessed === void 0 && $$bindings.rowsProcessed && rowsProcessed !== void 0) $$bindings.rowsProcessed(rowsProcessed);
  if ($$props.totalRows === void 0 && $$bindings.totalRows && totalRows !== void 0) $$bindings.totalRows(totalRows);
  if ($$props.errors === void 0 && $$bindings.errors && errors !== void 0) $$bindings.errors(errors);
  if ($$props.warnings === void 0 && $$bindings.warnings && warnings !== void 0) $$bindings.warnings(warnings);
  $$result.css.add(css$4);
  currentStage = stages[stage];
  progressPercentage = Math.min(100, Math.max(0, progress));
  return `${stage !== "idle" ? `<div class="upload-progress svelte-hlxry"><div class="progress-header svelte-hlxry"><div class="stage-info svelte-hlxry">${currentStage.icon ? `${validate_component(currentStage.icon || missing_component, "svelte:component").$$render(
    $$result,
    {
      size: 20,
      class: currentStage.color + " " + (stage === "uploading" || stage === "validating" || stage === "mapping" || stage === "importing" ? "animate-spin" : "")
    },
    {},
    {}
  )}` : ``} <span class="${"stage-label " + escape(currentStage.color, true) + " svelte-hlxry"}">${escape(currentStage.label)}</span></div> ${fileName ? `<span class="file-name svelte-hlxry">${escape(fileName)}</span>` : ``}</div> <div class="progress-bar-container svelte-hlxry"><div class="progress-bar svelte-hlxry" style="${"width: " + escape(progressPercentage, true) + "%"}"></div></div> <div class="progress-details svelte-hlxry">${message ? `<p class="message svelte-hlxry">${escape(message)}</p>` : ``} ${totalRows > 0 && (stage === "validating" || stage === "importing") ? `<p class="row-count svelte-hlxry">Processing: ${escape(rowsProcessed)} / ${escape(totalRows)} rows</p>` : ``}</div> ${errors.length > 0 ? `<div class="error-list svelte-hlxry"><h4 class="svelte-hlxry">${validate_component(Circle_x, "XCircle").$$render($$result, { size: 16 }, {}, {})} Errors (${escape(errors.length)})</h4> <ul class="svelte-hlxry">${each(errors.slice(0, 5), (error) => {
    return `<li class="svelte-hlxry">${escape(error)}</li>`;
  })} ${errors.length > 5 ? `<li class="more svelte-hlxry">... and ${escape(errors.length - 5)} more errors</li>` : ``}</ul></div>` : ``} ${warnings.length > 0 ? `<div class="warning-list svelte-hlxry"><h4 class="svelte-hlxry">${validate_component(Circle_alert, "AlertCircle").$$render($$result, { size: 16 }, {}, {})} Warnings (${escape(warnings.length)})</h4> <ul class="svelte-hlxry">${each(warnings.slice(0, 3), (warning) => {
    return `<li class="svelte-hlxry">${escape(warning)}</li>`;
  })} ${warnings.length > 3 ? `<li class="more svelte-hlxry">... and ${escape(warnings.length - 3)} more warnings</li>` : ``}</ul></div>` : ``}</div>` : ``}`;
});
const css$3 = {
  code: ".column-mapper.svelte-89fr8f.svelte-89fr8f{background:white;border:1px solid #e0e0e0;border-radius:8px;padding:1.5rem}.mapper-header.svelte-89fr8f.svelte-89fr8f{margin-bottom:1.5rem}.mapper-header.svelte-89fr8f h3.svelte-89fr8f{font-size:1.25rem;font-weight:600;margin:0 0 0.5rem 0}.mapper-header.svelte-89fr8f p.svelte-89fr8f{color:#666;margin:0 0 1rem 0}.actions.svelte-89fr8f.svelte-89fr8f{display:flex;gap:0.5rem}.btn-secondary.svelte-89fr8f.svelte-89fr8f,.btn-ghost.svelte-89fr8f.svelte-89fr8f{padding:0.5rem 1rem;border-radius:6px;font-size:0.875rem;cursor:pointer;transition:all 0.2s;border:none}.btn-secondary.svelte-89fr8f.svelte-89fr8f{background:#10b981;color:white}.btn-secondary.svelte-89fr8f.svelte-89fr8f:hover{background:#059669}.btn-ghost.svelte-89fr8f.svelte-89fr8f{background:#f3f4f6;color:#666}.btn-ghost.svelte-89fr8f.svelte-89fr8f:hover{background:#e5e7eb}.warning-banner.svelte-89fr8f.svelte-89fr8f,.success-banner.svelte-89fr8f.svelte-89fr8f{display:flex;align-items:center;gap:0.75rem;padding:1rem;border-radius:6px;margin-bottom:1.5rem;font-size:0.875rem}.warning-banner.svelte-89fr8f.svelte-89fr8f{background:#fffbeb;border:1px solid #fde68a;color:#92400e}.success-banner.svelte-89fr8f.svelte-89fr8f{background:#f0fdf4;border:1px solid #86efac;color:#166534}.mapping-grid.svelte-89fr8f.svelte-89fr8f{border:1px solid #e0e0e0;border-radius:6px;overflow:hidden}.grid-header.svelte-89fr8f.svelte-89fr8f{display:grid;grid-template-columns:1fr 1.5fr 1fr;gap:1rem;padding:1rem;background:#f9f9f9;font-weight:600;font-size:0.875rem;color:#666;border-bottom:1px solid #e0e0e0}.mapping-row.svelte-89fr8f.svelte-89fr8f{display:grid;grid-template-columns:1fr 1.5fr 1fr;gap:1rem;padding:1rem;border-bottom:1px solid #f0f0f0;align-items:start}.mapping-row.svelte-89fr8f.svelte-89fr8f:last-child{border-bottom:none}.column-name.svelte-89fr8f.svelte-89fr8f{display:flex;flex-direction:column;gap:0.25rem}.column-name.svelte-89fr8f .name.svelte-89fr8f{font-weight:500;color:#333}.suggestion.svelte-89fr8f.svelte-89fr8f{display:flex;align-items:center;gap:0.25rem;font-size:0.75rem;color:#10b981}.mapping-select.svelte-89fr8f.svelte-89fr8f{display:flex;flex-direction:column;gap:0.5rem}.mapping-select.svelte-89fr8f select.svelte-89fr8f{width:100%;padding:0.5rem;border:1px solid #e0e0e0;border-radius:6px;font-size:0.875rem;background:white;cursor:pointer}.mapping-select.svelte-89fr8f select.svelte-89fr8f:focus{outline:none;border-color:#10b981}.field-description.svelte-89fr8f.svelte-89fr8f{font-size:0.75rem;color:#666;margin:0;font-style:italic}.sample-values.svelte-89fr8f.svelte-89fr8f{display:flex;flex-wrap:wrap;gap:0.5rem}.sample.svelte-89fr8f.svelte-89fr8f{padding:0.25rem 0.5rem;background:#f3f4f6;border-radius:4px;font-size:0.75rem;color:#666;max-width:150px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.legend.svelte-89fr8f.svelte-89fr8f{display:flex;gap:2rem;margin-top:1rem;padding-top:1rem;border-top:1px solid #f0f0f0;font-size:0.875rem;color:#666}.legend.svelte-89fr8f p.svelte-89fr8f{display:flex;align-items:center;gap:0.5rem;margin:0}.required.svelte-89fr8f.svelte-89fr8f{color:#ef4444;font-weight:600}@media(max-width: 768px){.grid-header.svelte-89fr8f.svelte-89fr8f,.mapping-row.svelte-89fr8f.svelte-89fr8f{grid-template-columns:1fr;gap:0.5rem}.grid-header.svelte-89fr8f>div.svelte-89fr8f:not(:first-child),.mapping-row.svelte-89fr8f>div.svelte-89fr8f:not(:first-child){padding-left:1rem}.grid-header.svelte-89fr8f.svelte-89fr8f{display:none}.mapping-row.svelte-89fr8f.svelte-89fr8f{padding:1rem 0.75rem}.sample-values.svelte-89fr8f.svelte-89fr8f{margin-top:0.5rem}}",
  map: `{"version":3,"file":"ColumnMapper.svelte","sources":["ColumnMapper.svelte"],"sourcesContent":["<script lang=\\"ts\\">\\"use strict\\";\\nimport { createEventDispatcher } from \\"svelte\\";\\nimport { Info, AlertCircle, CheckCircle } from \\"lucide-svelte\\";\\nconst dispatch = createEventDispatcher();\\nexport let fileColumns = [];\\nexport let dataPreview = [];\\nexport let suggestedMapping = {};\\nexport let currentMapping = {};\\nconst systemFields = [\\n  { value: \\"symbol\\", label: \\"Symbol\\", required: true, description: \\"Trading symbol (e.g., AAPL, TSLA)\\" },\\n  { value: \\"side\\", label: \\"Side\\", required: true, description: \\"Trade direction (long/short)\\" },\\n  { value: \\"entry_price\\", label: \\"Entry Price\\", required: true, description: \\"Price at entry\\" },\\n  { value: \\"exit_price\\", label: \\"Exit Price\\", required: true, description: \\"Price at exit\\" },\\n  { value: \\"quantity\\", label: \\"Quantity\\", required: true, description: \\"Number of shares/contracts\\" },\\n  { value: \\"entry_date\\", label: \\"Entry Date\\", required: true, description: \\"Date/time of entry\\" },\\n  { value: \\"exit_date\\", label: \\"Exit Date\\", required: true, description: \\"Date/time of exit\\" },\\n  { value: \\"pnl\\", label: \\"P&L\\", required: false, description: \\"Profit/Loss (will be calculated if not provided)\\" },\\n  { value: \\"strategy\\", label: \\"Strategy\\", required: false, description: \\"Trading strategy used\\" },\\n  { value: \\"notes\\", label: \\"Notes\\", required: false, description: \\"Additional notes or comments\\" },\\n  { value: \\"\\", label: \\"Skip this column\\", required: false, description: \\"Do not import this column\\" }\\n];\\nlet mapping = { ...suggestedMapping, ...currentMapping };\\n$: requiredFields = systemFields.filter((f) => f.required);\\n$: mappedRequiredFields = requiredFields.filter(\\n  (f) => Object.values(mapping).includes(f.value)\\n);\\n$: allRequiredMapped = mappedRequiredFields.length === requiredFields.length;\\nfunction getSampleValues(column) {\\n  const values = dataPreview.map((row) => row[column]).filter((v) => v !== null && v !== void 0 && v !== \\"\\").slice(0, 3);\\n  return [...new Set(values)];\\n}\\nfunction handleMappingChange(fileColumn, systemField) {\\n  if (systemField === \\"\\") {\\n    const newMapping = { ...mapping };\\n    delete newMapping[fileColumn];\\n    mapping = newMapping;\\n  } else {\\n    const existingColumn = Object.entries(mapping).find(\\n      ([col, field]) => field === systemField && col !== fileColumn\\n    );\\n    if (existingColumn) {\\n      const newMapping = { ...mapping };\\n      delete newMapping[existingColumn[0]];\\n      newMapping[fileColumn] = systemField;\\n      mapping = newMapping;\\n    } else {\\n      mapping = { ...mapping, [fileColumn]: systemField };\\n    }\\n  }\\n  dispatch(\\"change\\", { mapping });\\n}\\nfunction applySuggestions() {\\n  mapping = { ...suggestedMapping };\\n  dispatch(\\"change\\", { mapping });\\n}\\nfunction clearMappings() {\\n  mapping = {};\\n  dispatch(\\"change\\", { mapping });\\n}\\n<\/script>\\n\\n<div class=\\"column-mapper\\">\\n\\t<div class=\\"mapper-header\\">\\n\\t\\t<h3>Map Your Columns</h3>\\n\\t\\t<p>Match your file columns to the system fields</p>\\n\\t\\t\\n\\t\\t<div class=\\"actions\\">\\n\\t\\t\\t{#if Object.keys(suggestedMapping).length > 0}\\n\\t\\t\\t\\t<button type=\\"button\\" class=\\"btn-secondary\\" on:click={applySuggestions}>\\n\\t\\t\\t\\t\\tApply Suggestions\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t{/if}\\n\\t\\t\\t<button type=\\"button\\" class=\\"btn-ghost\\" on:click={clearMappings}>\\n\\t\\t\\t\\tClear All\\n\\t\\t\\t</button>\\n\\t\\t</div>\\n\\t</div>\\n\\t\\n\\t{#if !allRequiredMapped}\\n\\t\\t<div class=\\"warning-banner\\">\\n\\t\\t\\t<AlertCircle size={20} />\\n\\t\\t\\t<span>\\n\\t\\t\\t\\tPlease map all required fields: \\n\\t\\t\\t\\t{requiredFields\\n\\t\\t\\t\\t\\t.filter(f => !Object.values(mapping).includes(f.value))\\n\\t\\t\\t\\t\\t.map(f => f.label)\\n\\t\\t\\t\\t\\t.join(', ')}\\n\\t\\t\\t</span>\\n\\t\\t</div>\\n\\t{:else}\\n\\t\\t<div class=\\"success-banner\\">\\n\\t\\t\\t<CheckCircle size={20} />\\n\\t\\t\\t<span>All required fields are mapped!</span>\\n\\t\\t</div>\\n\\t{/if}\\n\\t\\n\\t<div class=\\"mapping-grid\\">\\n\\t\\t<div class=\\"grid-header\\">\\n\\t\\t\\t<div>Your Column</div>\\n\\t\\t\\t<div>Maps To</div>\\n\\t\\t\\t<div>Sample Values</div>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t{#each fileColumns as column}\\n\\t\\t\\t<div class=\\"mapping-row\\">\\n\\t\\t\\t\\t<div class=\\"column-name\\">\\n\\t\\t\\t\\t\\t<span class=\\"name\\">{column}</span>\\n\\t\\t\\t\\t\\t{#if suggestedMapping[column] && !mapping[column]}\\n\\t\\t\\t\\t\\t\\t<span class=\\"suggestion\\">\\n\\t\\t\\t\\t\\t\\t\\t<Info size={14} />\\n\\t\\t\\t\\t\\t\\t\\tSuggested: {suggestedMapping[column]}\\n\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\"mapping-select\\">\\n\\t\\t\\t\\t\\t<select\\n\\t\\t\\t\\t\\t\\tvalue={mapping[column] || ''}\\n\\t\\t\\t\\t\\t\\ton:change={(e) => handleMappingChange(column, e.currentTarget.value)}\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<option value=\\"\\">Select field...</option>\\n\\t\\t\\t\\t\\t\\t{#each systemFields as field}\\n\\t\\t\\t\\t\\t\\t\\t<option \\n\\t\\t\\t\\t\\t\\t\\t\\tvalue={field.value}\\n\\t\\t\\t\\t\\t\\t\\t\\tdisabled={field.value !== '' && field.value !== mapping[column] && Object.values(mapping).includes(field.value)}\\n\\t\\t\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t\\t\\t{field.label}\\n\\t\\t\\t\\t\\t\\t\\t\\t{#if field.required}*{/if}\\n\\t\\t\\t\\t\\t\\t\\t\\t{#if field.value !== '' && field.value !== mapping[column] && Object.values(mapping).includes(field.value)}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(already mapped)\\n\\t\\t\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t\\t\\t</option>\\n\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t</select>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t{#if mapping[column]}\\n\\t\\t\\t\\t\\t\\t{@const field = systemFields.find(f => f.value === mapping[column])}\\n\\t\\t\\t\\t\\t\\t{#if field?.description}\\n\\t\\t\\t\\t\\t\\t\\t<p class=\\"field-description\\">{field.description}</p>\\n\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\"sample-values\\">\\n\\t\\t\\t\\t\\t{#each getSampleValues(column) as value}\\n\\t\\t\\t\\t\\t\\t<span class=\\"sample\\">{value}</span>\\n\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n\\t\\t{/each}\\n\\t</div>\\n\\t\\n\\t<div class=\\"legend\\">\\n\\t\\t<p><span class=\\"required\\">*</span> Required fields</p>\\n\\t\\t<p><Info size={14} /> Suggested mappings are based on column names</p>\\n\\t</div>\\n</div>\\n\\n<style>\\n\\t.column-mapper {\\n\\t\\tbackground: white;\\n\\t\\tborder: 1px solid #e0e0e0;\\n\\t\\tborder-radius: 8px;\\n\\t\\tpadding: 1.5rem;\\n\\t}\\n\\t\\n\\t.mapper-header {\\n\\t\\tmargin-bottom: 1.5rem;\\n\\t}\\n\\t\\n\\t.mapper-header h3 {\\n\\t\\tfont-size: 1.25rem;\\n\\t\\tfont-weight: 600;\\n\\t\\tmargin: 0 0 0.5rem 0;\\n\\t}\\n\\t\\n\\t.mapper-header p {\\n\\t\\tcolor: #666;\\n\\t\\tmargin: 0 0 1rem 0;\\n\\t}\\n\\t\\n\\t.actions {\\n\\t\\tdisplay: flex;\\n\\t\\tgap: 0.5rem;\\n\\t}\\n\\t\\n\\t.btn-secondary, .btn-ghost {\\n\\t\\tpadding: 0.5rem 1rem;\\n\\t\\tborder-radius: 6px;\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tcursor: pointer;\\n\\t\\ttransition: all 0.2s;\\n\\t\\tborder: none;\\n\\t}\\n\\t\\n\\t.btn-secondary {\\n\\t\\tbackground: #10b981;\\n\\t\\tcolor: white;\\n\\t}\\n\\t\\n\\t.btn-secondary:hover {\\n\\t\\tbackground: #059669;\\n\\t}\\n\\t\\n\\t.btn-ghost {\\n\\t\\tbackground: #f3f4f6;\\n\\t\\tcolor: #666;\\n\\t}\\n\\t\\n\\t.btn-ghost:hover {\\n\\t\\tbackground: #e5e7eb;\\n\\t}\\n\\t\\n\\t.warning-banner, .success-banner {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tgap: 0.75rem;\\n\\t\\tpadding: 1rem;\\n\\t\\tborder-radius: 6px;\\n\\t\\tmargin-bottom: 1.5rem;\\n\\t\\tfont-size: 0.875rem;\\n\\t}\\n\\t\\n\\t.warning-banner {\\n\\t\\tbackground: #fffbeb;\\n\\t\\tborder: 1px solid #fde68a;\\n\\t\\tcolor: #92400e;\\n\\t}\\n\\t\\n\\t.success-banner {\\n\\t\\tbackground: #f0fdf4;\\n\\t\\tborder: 1px solid #86efac;\\n\\t\\tcolor: #166534;\\n\\t}\\n\\t\\n\\t.mapping-grid {\\n\\t\\tborder: 1px solid #e0e0e0;\\n\\t\\tborder-radius: 6px;\\n\\t\\toverflow: hidden;\\n\\t}\\n\\t\\n\\t.grid-header {\\n\\t\\tdisplay: grid;\\n\\t\\tgrid-template-columns: 1fr 1.5fr 1fr;\\n\\t\\tgap: 1rem;\\n\\t\\tpadding: 1rem;\\n\\t\\tbackground: #f9f9f9;\\n\\t\\tfont-weight: 600;\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tcolor: #666;\\n\\t\\tborder-bottom: 1px solid #e0e0e0;\\n\\t}\\n\\t\\n\\t.mapping-row {\\n\\t\\tdisplay: grid;\\n\\t\\tgrid-template-columns: 1fr 1.5fr 1fr;\\n\\t\\tgap: 1rem;\\n\\t\\tpadding: 1rem;\\n\\t\\tborder-bottom: 1px solid #f0f0f0;\\n\\t\\talign-items: start;\\n\\t}\\n\\t\\n\\t.mapping-row:last-child {\\n\\t\\tborder-bottom: none;\\n\\t}\\n\\t\\n\\t.column-name {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\tgap: 0.25rem;\\n\\t}\\n\\t\\n\\t.column-name .name {\\n\\t\\tfont-weight: 500;\\n\\t\\tcolor: #333;\\n\\t}\\n\\t\\n\\t.suggestion {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tgap: 0.25rem;\\n\\t\\tfont-size: 0.75rem;\\n\\t\\tcolor: #10b981;\\n\\t}\\n\\t\\n\\t.mapping-select {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\tgap: 0.5rem;\\n\\t}\\n\\t\\n\\t.mapping-select select {\\n\\t\\twidth: 100%;\\n\\t\\tpadding: 0.5rem;\\n\\t\\tborder: 1px solid #e0e0e0;\\n\\t\\tborder-radius: 6px;\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tbackground: white;\\n\\t\\tcursor: pointer;\\n\\t}\\n\\t\\n\\t.mapping-select select:focus {\\n\\t\\toutline: none;\\n\\t\\tborder-color: #10b981;\\n\\t}\\n\\t\\n\\t.field-description {\\n\\t\\tfont-size: 0.75rem;\\n\\t\\tcolor: #666;\\n\\t\\tmargin: 0;\\n\\t\\tfont-style: italic;\\n\\t}\\n\\t\\n\\t.sample-values {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-wrap: wrap;\\n\\t\\tgap: 0.5rem;\\n\\t}\\n\\t\\n\\t.sample {\\n\\t\\tpadding: 0.25rem 0.5rem;\\n\\t\\tbackground: #f3f4f6;\\n\\t\\tborder-radius: 4px;\\n\\t\\tfont-size: 0.75rem;\\n\\t\\tcolor: #666;\\n\\t\\tmax-width: 150px;\\n\\t\\twhite-space: nowrap;\\n\\t\\toverflow: hidden;\\n\\t\\ttext-overflow: ellipsis;\\n\\t}\\n\\t\\n\\t.legend {\\n\\t\\tdisplay: flex;\\n\\t\\tgap: 2rem;\\n\\t\\tmargin-top: 1rem;\\n\\t\\tpadding-top: 1rem;\\n\\t\\tborder-top: 1px solid #f0f0f0;\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tcolor: #666;\\n\\t}\\n\\t\\n\\t.legend p {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tgap: 0.5rem;\\n\\t\\tmargin: 0;\\n\\t}\\n\\t\\n\\t.required {\\n\\t\\tcolor: #ef4444;\\n\\t\\tfont-weight: 600;\\n\\t}\\n\\t\\n\\t@media (max-width: 768px) {\\n\\t\\t.grid-header, .mapping-row {\\n\\t\\t\\tgrid-template-columns: 1fr;\\n\\t\\t\\tgap: 0.5rem;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.grid-header > div:not(:first-child),\\n\\t\\t.mapping-row > div:not(:first-child) {\\n\\t\\t\\tpadding-left: 1rem;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.grid-header {\\n\\t\\t\\tdisplay: none;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.mapping-row {\\n\\t\\t\\tpadding: 1rem 0.75rem;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.sample-values {\\n\\t\\t\\tmargin-top: 0.5rem;\\n\\t\\t}\\n\\t}\\n</style>"],"names":[],"mappings":"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"}`
};
const ColumnMapper = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let requiredFields;
  let mappedRequiredFields;
  let allRequiredMapped;
  createEventDispatcher();
  let { fileColumns = [] } = $$props;
  let { dataPreview = [] } = $$props;
  let { suggestedMapping = {} } = $$props;
  let { currentMapping = {} } = $$props;
  const systemFields = [
    {
      value: "symbol",
      label: "Symbol",
      required: true,
      description: "Trading symbol (e.g., AAPL, TSLA)"
    },
    {
      value: "side",
      label: "Side",
      required: true,
      description: "Trade direction (long/short)"
    },
    {
      value: "entry_price",
      label: "Entry Price",
      required: true,
      description: "Price at entry"
    },
    {
      value: "exit_price",
      label: "Exit Price",
      required: true,
      description: "Price at exit"
    },
    {
      value: "quantity",
      label: "Quantity",
      required: true,
      description: "Number of shares/contracts"
    },
    {
      value: "entry_date",
      label: "Entry Date",
      required: true,
      description: "Date/time of entry"
    },
    {
      value: "exit_date",
      label: "Exit Date",
      required: true,
      description: "Date/time of exit"
    },
    {
      value: "pnl",
      label: "P&L",
      required: false,
      description: "Profit/Loss (will be calculated if not provided)"
    },
    {
      value: "strategy",
      label: "Strategy",
      required: false,
      description: "Trading strategy used"
    },
    {
      value: "notes",
      label: "Notes",
      required: false,
      description: "Additional notes or comments"
    },
    {
      value: "",
      label: "Skip this column",
      required: false,
      description: "Do not import this column"
    }
  ];
  let mapping = { ...suggestedMapping, ...currentMapping };
  function getSampleValues(column) {
    const values = dataPreview.map((row) => row[column]).filter((v) => v !== null && v !== void 0 && v !== "").slice(0, 3);
    return [...new Set(values)];
  }
  if ($$props.fileColumns === void 0 && $$bindings.fileColumns && fileColumns !== void 0) $$bindings.fileColumns(fileColumns);
  if ($$props.dataPreview === void 0 && $$bindings.dataPreview && dataPreview !== void 0) $$bindings.dataPreview(dataPreview);
  if ($$props.suggestedMapping === void 0 && $$bindings.suggestedMapping && suggestedMapping !== void 0) $$bindings.suggestedMapping(suggestedMapping);
  if ($$props.currentMapping === void 0 && $$bindings.currentMapping && currentMapping !== void 0) $$bindings.currentMapping(currentMapping);
  $$result.css.add(css$3);
  requiredFields = systemFields.filter((f) => f.required);
  mappedRequiredFields = requiredFields.filter((f) => Object.values(mapping).includes(f.value));
  allRequiredMapped = mappedRequiredFields.length === requiredFields.length;
  return `<div class="column-mapper svelte-89fr8f"><div class="mapper-header svelte-89fr8f"><h3 class="svelte-89fr8f" data-svelte-h="svelte-2c9sj6">Map Your Columns</h3> <p class="svelte-89fr8f" data-svelte-h="svelte-oqa1lx">Match your file columns to the system fields</p> <div class="actions svelte-89fr8f">${Object.keys(suggestedMapping).length > 0 ? `<button type="button" class="btn-secondary svelte-89fr8f" data-svelte-h="svelte-1gjnqhk">Apply Suggestions</button>` : ``} <button type="button" class="btn-ghost svelte-89fr8f" data-svelte-h="svelte-3oqbvh">Clear All</button></div></div> ${!allRequiredMapped ? `<div class="warning-banner svelte-89fr8f">${validate_component(Circle_alert, "AlertCircle").$$render($$result, { size: 20 }, {}, {})} <span>Please map all required fields: 
				${escape(requiredFields.filter((f) => !Object.values(mapping).includes(f.value)).map((f) => f.label).join(", "))}</span></div>` : `<div class="success-banner svelte-89fr8f">${validate_component(Circle_check_big, "CheckCircle").$$render($$result, { size: 20 }, {}, {})} <span data-svelte-h="svelte-102sxa9">All required fields are mapped!</span></div>`} <div class="mapping-grid svelte-89fr8f"><div class="grid-header svelte-89fr8f" data-svelte-h="svelte-1w2eyrs"><div class="svelte-89fr8f">Your Column</div> <div class="svelte-89fr8f">Maps To</div> <div class="svelte-89fr8f">Sample Values</div></div> ${each(fileColumns, (column) => {
    return `<div class="mapping-row svelte-89fr8f"><div class="column-name svelte-89fr8f"><span class="name svelte-89fr8f">${escape(column)}</span> ${suggestedMapping[column] && !mapping[column] ? `<span class="suggestion svelte-89fr8f">${validate_component(Info, "Info").$$render($$result, { size: 14 }, {}, {})}
							Suggested: ${escape(suggestedMapping[column])} </span>` : ``}</div> <div class="mapping-select svelte-89fr8f"><select${add_attribute("value", mapping[column] || "", 0)} class="svelte-89fr8f"><option value="" data-svelte-h="svelte-rwo5t2">Select field...</option>${each(systemFields, (field) => {
      return `<option${add_attribute("value", field.value, 0)} ${field.value !== "" && field.value !== mapping[column] && Object.values(mapping).includes(field.value) ? "disabled" : ""}>${escape(field.label)} ${field.required ? `*` : ``} ${field.value !== "" && field.value !== mapping[column] && Object.values(mapping).includes(field.value) ? `(already mapped)` : ``} </option>`;
    })}</select> ${mapping[column] ? (() => {
      let field = systemFields.find((f) => f.value === mapping[column]);
      return ` ${field?.description ? `<p class="field-description svelte-89fr8f">${escape(field.description)}</p>` : ``}`;
    })() : ``}</div> <div class="sample-values svelte-89fr8f">${each(getSampleValues(column), (value) => {
      return `<span class="sample svelte-89fr8f">${escape(value)}</span>`;
    })}</div> </div>`;
  })}</div> <div class="legend svelte-89fr8f"><p class="svelte-89fr8f" data-svelte-h="svelte-n19w63"><span class="required svelte-89fr8f">*</span> Required fields</p> <p class="svelte-89fr8f">${validate_component(Info, "Info").$$render($$result, { size: 14 }, {}, {})} Suggested mappings are based on column names</p></div> </div>`;
});
const css$2 = {
  code: ".data-preview.svelte-1o68069.svelte-1o68069{background:white;border:1px solid #e0e0e0;border-radius:8px;padding:1.5rem;margin-top:1rem}.preview-header.svelte-1o68069.svelte-1o68069{display:flex;align-items:center;gap:1rem;margin-bottom:1rem;flex-wrap:wrap}.preview-header.svelte-1o68069 h3.svelte-1o68069{font-size:1.125rem;font-weight:600;margin:0;flex:1}.preview-header.svelte-1o68069 p.svelte-1o68069{font-size:0.875rem;color:#666;margin:0}.toggle-btn.svelte-1o68069.svelte-1o68069{display:flex;align-items:center;gap:0.5rem;padding:0.5rem 1rem;background:#f3f4f6;border:none;border-radius:6px;font-size:0.875rem;color:#666;cursor:pointer;transition:all 0.2s}.toggle-btn.svelte-1o68069.svelte-1o68069:hover{background:#e5e7eb;color:#333}.table-container.svelte-1o68069.svelte-1o68069{overflow-x:auto;border:1px solid #e0e0e0;border-radius:6px}table.svelte-1o68069.svelte-1o68069{width:100%;border-collapse:collapse;font-size:0.875rem}thead.svelte-1o68069.svelte-1o68069{background:#f9f9f9;border-bottom:2px solid #e0e0e0}th.svelte-1o68069.svelte-1o68069{padding:0.75rem 1rem;text-align:left;font-weight:600;color:#666;white-space:nowrap;position:sticky;top:0;background:#f9f9f9;z-index:1}th.row-number.svelte-1o68069.svelte-1o68069{width:50px;text-align:center;color:#999}tbody.svelte-1o68069 tr.svelte-1o68069{border-bottom:1px solid #f0f0f0}tbody.svelte-1o68069 tr.svelte-1o68069:hover{background:#fafafa}tbody.svelte-1o68069 tr.svelte-1o68069:last-child{border-bottom:none}td.svelte-1o68069.svelte-1o68069{padding:0.75rem 1rem;color:#333;max-width:200px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}td.row-number.svelte-1o68069.svelte-1o68069{text-align:center;color:#999;font-size:0.75rem;background:#fafafa;font-weight:500}.empty.svelte-1o68069.svelte-1o68069{color:#ccc}.more-indicator.svelte-1o68069.svelte-1o68069{text-align:center;padding:1rem;color:#666;font-size:0.875rem;font-style:italic;border-top:1px solid #f0f0f0;margin-top:1rem}.no-data.svelte-1o68069.svelte-1o68069{text-align:center;padding:3rem;color:#999;font-size:0.875rem}@media(max-width: 768px){.data-preview.svelte-1o68069.svelte-1o68069{padding:1rem}th.svelte-1o68069.svelte-1o68069,td.svelte-1o68069.svelte-1o68069{padding:0.5rem;font-size:0.75rem}td.svelte-1o68069.svelte-1o68069{max-width:120px}}",
  map: '{"version":3,"file":"DataPreview.svelte","sources":["DataPreview.svelte"],"sourcesContent":["<script lang=\\"ts\\">\\"use strict\\";\\nimport { Eye, EyeOff } from \\"lucide-svelte\\";\\nexport let data = [];\\nexport let columns = [];\\nexport let title = \\"Data Preview\\";\\nexport let maxRows = 10;\\nlet showAll = false;\\n$: displayData = showAll ? data : data.slice(0, maxRows);\\n$: hasMore = data.length > maxRows;\\n<\/script>\\n\\n<div class=\\"data-preview\\">\\n\\t<div class=\\"preview-header\\">\\n\\t\\t<h3>{title}</h3>\\n\\t\\t<p>Showing {displayData.length} of {data.length} rows</p>\\n\\t\\t{#if hasMore}\\n\\t\\t\\t<button\\n\\t\\t\\t\\ttype=\\"button\\"\\n\\t\\t\\t\\tclass=\\"toggle-btn\\"\\n\\t\\t\\t\\ton:click={() => showAll = !showAll}\\n\\t\\t\\t>\\n\\t\\t\\t\\t{#if showAll}\\n\\t\\t\\t\\t\\t<EyeOff size={16} />\\n\\t\\t\\t\\t\\tShow Less\\n\\t\\t\\t\\t{:else}\\n\\t\\t\\t\\t\\t<Eye size={16} />\\n\\t\\t\\t\\t\\tShow All\\n\\t\\t\\t\\t{/if}\\n\\t\\t\\t</button>\\n\\t\\t{/if}\\n\\t</div>\\n\\t\\n\\t{#if data.length > 0}\\n\\t\\t<div class=\\"table-container\\">\\n\\t\\t\\t<table>\\n\\t\\t\\t\\t<thead>\\n\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t<th class=\\"row-number\\">#</th>\\n\\t\\t\\t\\t\\t\\t{#each columns as column}\\n\\t\\t\\t\\t\\t\\t\\t<th>{column}</th>\\n\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t</thead>\\n\\t\\t\\t\\t<tbody>\\n\\t\\t\\t\\t\\t{#each displayData as row, index}\\n\\t\\t\\t\\t\\t\\t<tr>\\n\\t\\t\\t\\t\\t\\t\\t<td class=\\"row-number\\">{index + 1}</td>\\n\\t\\t\\t\\t\\t\\t\\t{#each columns as column}\\n\\t\\t\\t\\t\\t\\t\\t\\t<td>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{#if row[column] !== null && row[column] !== undefined}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{row[column]}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{:else}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\"empty\\">-</span>\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t\\t\\t\\t</td>\\n\\t\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t\\t</tr>\\n\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t</tbody>\\n\\t\\t\\t</table>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t{#if hasMore && !showAll}\\n\\t\\t\\t<div class=\\"more-indicator\\">\\n\\t\\t\\t\\t... and {data.length - maxRows} more rows\\n\\t\\t\\t</div>\\n\\t\\t{/if}\\n\\t{:else}\\n\\t\\t<div class=\\"no-data\\">\\n\\t\\t\\tNo data to preview\\n\\t\\t</div>\\n\\t{/if}\\n</div>\\n\\n<style>\\n\\t.data-preview {\\n\\t\\tbackground: white;\\n\\t\\tborder: 1px solid #e0e0e0;\\n\\t\\tborder-radius: 8px;\\n\\t\\tpadding: 1.5rem;\\n\\t\\tmargin-top: 1rem;\\n\\t}\\n\\t\\n\\t.preview-header {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tgap: 1rem;\\n\\t\\tmargin-bottom: 1rem;\\n\\t\\tflex-wrap: wrap;\\n\\t}\\n\\t\\n\\t.preview-header h3 {\\n\\t\\tfont-size: 1.125rem;\\n\\t\\tfont-weight: 600;\\n\\t\\tmargin: 0;\\n\\t\\tflex: 1;\\n\\t}\\n\\t\\n\\t.preview-header p {\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tcolor: #666;\\n\\t\\tmargin: 0;\\n\\t}\\n\\t\\n\\t.toggle-btn {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tgap: 0.5rem;\\n\\t\\tpadding: 0.5rem 1rem;\\n\\t\\tbackground: #f3f4f6;\\n\\t\\tborder: none;\\n\\t\\tborder-radius: 6px;\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tcolor: #666;\\n\\t\\tcursor: pointer;\\n\\t\\ttransition: all 0.2s;\\n\\t}\\n\\t\\n\\t.toggle-btn:hover {\\n\\t\\tbackground: #e5e7eb;\\n\\t\\tcolor: #333;\\n\\t}\\n\\t\\n\\t.table-container {\\n\\t\\toverflow-x: auto;\\n\\t\\tborder: 1px solid #e0e0e0;\\n\\t\\tborder-radius: 6px;\\n\\t}\\n\\t\\n\\ttable {\\n\\t\\twidth: 100%;\\n\\t\\tborder-collapse: collapse;\\n\\t\\tfont-size: 0.875rem;\\n\\t}\\n\\t\\n\\tthead {\\n\\t\\tbackground: #f9f9f9;\\n\\t\\tborder-bottom: 2px solid #e0e0e0;\\n\\t}\\n\\t\\n\\tth {\\n\\t\\tpadding: 0.75rem 1rem;\\n\\t\\ttext-align: left;\\n\\t\\tfont-weight: 600;\\n\\t\\tcolor: #666;\\n\\t\\twhite-space: nowrap;\\n\\t\\tposition: sticky;\\n\\t\\ttop: 0;\\n\\t\\tbackground: #f9f9f9;\\n\\t\\tz-index: 1;\\n\\t}\\n\\t\\n\\tth.row-number {\\n\\t\\twidth: 50px;\\n\\t\\ttext-align: center;\\n\\t\\tcolor: #999;\\n\\t}\\n\\t\\n\\ttbody tr {\\n\\t\\tborder-bottom: 1px solid #f0f0f0;\\n\\t}\\n\\t\\n\\ttbody tr:hover {\\n\\t\\tbackground: #fafafa;\\n\\t}\\n\\t\\n\\ttbody tr:last-child {\\n\\t\\tborder-bottom: none;\\n\\t}\\n\\t\\n\\ttd {\\n\\t\\tpadding: 0.75rem 1rem;\\n\\t\\tcolor: #333;\\n\\t\\tmax-width: 200px;\\n\\t\\twhite-space: nowrap;\\n\\t\\toverflow: hidden;\\n\\t\\ttext-overflow: ellipsis;\\n\\t}\\n\\t\\n\\ttd.row-number {\\n\\t\\ttext-align: center;\\n\\t\\tcolor: #999;\\n\\t\\tfont-size: 0.75rem;\\n\\t\\tbackground: #fafafa;\\n\\t\\tfont-weight: 500;\\n\\t}\\n\\t\\n\\t.empty {\\n\\t\\tcolor: #ccc;\\n\\t}\\n\\t\\n\\t.more-indicator {\\n\\t\\ttext-align: center;\\n\\t\\tpadding: 1rem;\\n\\t\\tcolor: #666;\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tfont-style: italic;\\n\\t\\tborder-top: 1px solid #f0f0f0;\\n\\t\\tmargin-top: 1rem;\\n\\t}\\n\\t\\n\\t.no-data {\\n\\t\\ttext-align: center;\\n\\t\\tpadding: 3rem;\\n\\t\\tcolor: #999;\\n\\t\\tfont-size: 0.875rem;\\n\\t}\\n\\t\\n\\t@media (max-width: 768px) {\\n\\t\\t.data-preview {\\n\\t\\t\\tpadding: 1rem;\\n\\t\\t}\\n\\t\\t\\n\\t\\tth, td {\\n\\t\\t\\tpadding: 0.5rem;\\n\\t\\t\\tfont-size: 0.75rem;\\n\\t\\t}\\n\\t\\t\\n\\t\\ttd {\\n\\t\\t\\tmax-width: 120px;\\n\\t\\t}\\n\\t}\\n</style>"],"names":[],"mappings":"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"}'
};
const DataPreview = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let displayData;
  let hasMore;
  let { data = [] } = $$props;
  let { columns = [] } = $$props;
  let { title = "Data Preview" } = $$props;
  let { maxRows = 10 } = $$props;
  if ($$props.data === void 0 && $$bindings.data && data !== void 0) $$bindings.data(data);
  if ($$props.columns === void 0 && $$bindings.columns && columns !== void 0) $$bindings.columns(columns);
  if ($$props.title === void 0 && $$bindings.title && title !== void 0) $$bindings.title(title);
  if ($$props.maxRows === void 0 && $$bindings.maxRows && maxRows !== void 0) $$bindings.maxRows(maxRows);
  $$result.css.add(css$2);
  displayData = data.slice(0, maxRows);
  hasMore = data.length > maxRows;
  return `<div class="data-preview svelte-1o68069"><div class="preview-header svelte-1o68069"><h3 class="svelte-1o68069">${escape(title)}</h3> <p class="svelte-1o68069">Showing ${escape(displayData.length)} of ${escape(data.length)} rows</p> ${hasMore ? `<button type="button" class="toggle-btn svelte-1o68069">${`${validate_component(Eye, "Eye").$$render($$result, { size: 16 }, {}, {})}
					Show All`}</button>` : ``}</div> ${data.length > 0 ? `<div class="table-container svelte-1o68069"><table class="svelte-1o68069"><thead class="svelte-1o68069"><tr><th class="row-number svelte-1o68069" data-svelte-h="svelte-1kq6afa">#</th> ${each(columns, (column) => {
    return `<th class="svelte-1o68069">${escape(column)}</th>`;
  })}</tr></thead> <tbody class="svelte-1o68069">${each(displayData, (row, index) => {
    return `<tr class="svelte-1o68069"><td class="row-number svelte-1o68069">${escape(index + 1)}</td> ${each(columns, (column) => {
      return `<td class="svelte-1o68069">${row[column] !== null && row[column] !== void 0 ? `${escape(row[column])}` : `<span class="empty svelte-1o68069" data-svelte-h="svelte-c8aoy5">-</span>`} </td>`;
    })} </tr>`;
  })}</tbody></table></div> ${hasMore && true ? `<div class="more-indicator svelte-1o68069">... and ${escape(data.length - maxRows)} more rows</div>` : ``}` : `<div class="no-data svelte-1o68069" data-svelte-h="svelte-9onrw2">No data to preview</div>`} </div>`;
});
const css$1 = {
  code: ".import-results.svelte-3ka85i.svelte-3ka85i{background:white;border:1px solid #e0e0e0;border-radius:8px;padding:2rem;max-width:800px;margin:0 auto}.results-header.svelte-3ka85i.svelte-3ka85i{text-align:center;margin-bottom:2rem}.results-header.svelte-3ka85i h2.svelte-3ka85i{font-size:1.5rem;font-weight:600;margin:1rem 0 0.5rem 0}.message.svelte-3ka85i.svelte-3ka85i{color:#666;margin:0}.icon-success{color:#10b981}.icon-warning{color:#f59e0b}.icon-error{color:#ef4444}.stats-grid.svelte-3ka85i.svelte-3ka85i{display:grid;grid-template-columns:repeat(3, 1fr);gap:1.5rem;margin-bottom:2rem}.stat-card.svelte-3ka85i.svelte-3ka85i{display:flex;flex-direction:column;align-items:center;gap:1rem;padding:1.5rem;border-radius:8px;background:#f9f9f9}.stat-card.success.svelte-3ka85i.svelte-3ka85i{background:#f0fdf4;color:#166534}.stat-card.error.svelte-3ka85i.svelte-3ka85i{background:#fef2f2;color:#991b1b}.stat-card.neutral.svelte-3ka85i.svelte-3ka85i{background:#f9f9f9;color:#333}.stat-content.svelte-3ka85i.svelte-3ka85i{display:flex;flex-direction:column;align-items:center;gap:0.25rem}.stat-value.svelte-3ka85i.svelte-3ka85i{font-size:2rem;font-weight:700;line-height:1}.stat-label.svelte-3ka85i.svelte-3ka85i{font-size:0.875rem;opacity:0.8}.progress-ring.svelte-3ka85i.svelte-3ka85i{position:relative;width:60px;height:60px}.progress-circle.svelte-3ka85i.svelte-3ka85i{transition:stroke-dasharray 0.5s ease}.progress-text.svelte-3ka85i.svelte-3ka85i{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);font-size:1rem;font-weight:600}.errors-section.svelte-3ka85i.svelte-3ka85i{background:#fef2f2;border:1px solid #fecaca;border-radius:8px;padding:1.5rem;margin-bottom:2rem}.errors-header.svelte-3ka85i.svelte-3ka85i{display:flex;justify-content:space-between;align-items:center;margin-bottom:1rem;flex-wrap:wrap;gap:1rem}.errors-header.svelte-3ka85i h3.svelte-3ka85i{font-size:1.125rem;font-weight:600;margin:0;color:#991b1b}.btn-ghost.svelte-3ka85i.svelte-3ka85i{display:flex;align-items:center;gap:0.5rem;padding:0.5rem 1rem;background:white;border:1px solid #fecaca;border-radius:6px;font-size:0.875rem;color:#991b1b;cursor:pointer;transition:all 0.2s}.btn-ghost.svelte-3ka85i.svelte-3ka85i:hover{background:#fee;border-color:#f87171}.error-list.svelte-3ka85i.svelte-3ka85i{display:flex;flex-direction:column;gap:0.75rem}.error-item.svelte-3ka85i.svelte-3ka85i{background:white;border:1px solid #fecaca;border-radius:6px;padding:1rem}.error-row.svelte-3ka85i.svelte-3ka85i{font-weight:600;color:#991b1b;font-size:0.875rem;margin-bottom:0.25rem}.error-message.svelte-3ka85i.svelte-3ka85i{color:#666;font-size:0.875rem;margin-bottom:0.5rem}.error-data.svelte-3ka85i.svelte-3ka85i{margin-top:0.5rem;font-size:0.75rem}.error-data.svelte-3ka85i summary.svelte-3ka85i{cursor:pointer;color:#991b1b;font-weight:500}.error-data.svelte-3ka85i pre.svelte-3ka85i{margin-top:0.5rem;padding:0.5rem;background:#fafafa;border-radius:4px;overflow-x:auto;font-size:0.75rem;line-height:1.4}.more-errors.svelte-3ka85i.svelte-3ka85i{text-align:center;padding:1rem;color:#991b1b;font-size:0.875rem;font-style:italic}.actions.svelte-3ka85i.svelte-3ka85i{display:flex;justify-content:center;gap:1rem;margin-top:2rem}.btn-primary.svelte-3ka85i.svelte-3ka85i,.btn-secondary.svelte-3ka85i.svelte-3ka85i{display:flex;align-items:center;gap:0.5rem;padding:0.75rem 1.5rem;border:none;border-radius:6px;font-size:1rem;font-weight:500;cursor:pointer;transition:all 0.2s}.btn-primary.svelte-3ka85i.svelte-3ka85i{background:#10b981;color:white}.btn-primary.svelte-3ka85i.svelte-3ka85i:hover{background:#059669;transform:translateY(-1px);box-shadow:0 4px 12px rgba(16, 185, 129, 0.2)}.btn-secondary.svelte-3ka85i.svelte-3ka85i{background:#f3f4f6;color:#333;border:1px solid #e5e7eb}.btn-secondary.svelte-3ka85i.svelte-3ka85i:hover{background:#e5e7eb;transform:translateY(-1px)}@media(max-width: 768px){.import-results.svelte-3ka85i.svelte-3ka85i{padding:1.5rem}.stats-grid.svelte-3ka85i.svelte-3ka85i{grid-template-columns:1fr;gap:1rem}.actions.svelte-3ka85i.svelte-3ka85i{flex-direction:column}.btn-primary.svelte-3ka85i.svelte-3ka85i,.btn-secondary.svelte-3ka85i.svelte-3ka85i{width:100%;justify-content:center}}",
  map: '{"version":3,"file":"ImportResults.svelte","sources":["ImportResults.svelte"],"sourcesContent":["<script lang=\\"ts\\">\\"use strict\\";\\nimport { CheckCircle, XCircle, AlertCircle, Download, RefreshCw } from \\"lucide-svelte\\";\\nexport let result;\\nexport let onRetry = () => {\\n};\\nexport let onNewImport = () => {\\n};\\n$: successRate = result.imported > 0 ? Math.round(result.imported / (result.imported + result.failed) * 100) : 0;\\nfunction downloadErrorReport() {\\n  const errors = result.errors.map((e) => ({\\n    row: e.row,\\n    message: e.message,\\n    data: JSON.stringify(e.data || {})\\n  }));\\n  const csv = [\\n    [\\"Row\\", \\"Error Message\\", \\"Data\\"],\\n    ...errors.map((e) => [e.row, e.message, e.data])\\n  ].map((row) => row.join(\\",\\")).join(\\"\\\\n\\");\\n  const blob = new Blob([csv], { type: \\"text/csv\\" });\\n  const url = URL.createObjectURL(blob);\\n  const a = document.createElement(\\"a\\");\\n  a.href = url;\\n  a.download = \\"import-errors.csv\\";\\n  a.click();\\n  URL.revokeObjectURL(url);\\n}\\n<\/script>\\n\\n<div class=\\"import-results\\">\\n\\t<div class=\\"results-header\\">\\n\\t\\t{#if result.success}\\n\\t\\t\\t<CheckCircle size={48} class=\\"icon-success\\" />\\n\\t\\t\\t<h2>Import Complete!</h2>\\n\\t\\t{:else if result.imported > 0}\\n\\t\\t\\t<AlertCircle size={48} class=\\"icon-warning\\" />\\n\\t\\t\\t<h2>Partial Import Complete</h2>\\n\\t\\t{:else}\\n\\t\\t\\t<XCircle size={48} class=\\"icon-error\\" />\\n\\t\\t\\t<h2>Import Failed</h2>\\n\\t\\t{/if}\\n\\t\\t\\n\\t\\t<p class=\\"message\\">{result.message}</p>\\n\\t</div>\\n\\t\\n\\t<div class=\\"stats-grid\\">\\n\\t\\t<div class=\\"stat-card success\\">\\n\\t\\t\\t<CheckCircle size={24} />\\n\\t\\t\\t<div class=\\"stat-content\\">\\n\\t\\t\\t\\t<span class=\\"stat-value\\">{result.imported}</span>\\n\\t\\t\\t\\t<span class=\\"stat-label\\">Trades Imported</span>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div class=\\"stat-card error\\">\\n\\t\\t\\t<XCircle size={24} />\\n\\t\\t\\t<div class=\\"stat-content\\">\\n\\t\\t\\t\\t<span class=\\"stat-value\\">{result.failed}</span>\\n\\t\\t\\t\\t<span class=\\"stat-label\\">Failed Imports</span>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<div class=\\"stat-card neutral\\">\\n\\t\\t\\t<div class=\\"progress-ring\\">\\n\\t\\t\\t\\t<svg width=\\"60\\" height=\\"60\\">\\n\\t\\t\\t\\t\\t<circle\\n\\t\\t\\t\\t\\t\\tcx=\\"30\\"\\n\\t\\t\\t\\t\\t\\tcy=\\"30\\"\\n\\t\\t\\t\\t\\t\\tr=\\"25\\"\\n\\t\\t\\t\\t\\t\\tstroke=\\"#e0e0e0\\"\\n\\t\\t\\t\\t\\t\\tstroke-width=\\"5\\"\\n\\t\\t\\t\\t\\t\\tfill=\\"none\\"\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t\\t<circle\\n\\t\\t\\t\\t\\t\\tcx=\\"30\\"\\n\\t\\t\\t\\t\\t\\tcy=\\"30\\"\\n\\t\\t\\t\\t\\t\\tr=\\"25\\"\\n\\t\\t\\t\\t\\t\\tstroke=\\"#10b981\\"\\n\\t\\t\\t\\t\\t\\tstroke-width=\\"5\\"\\n\\t\\t\\t\\t\\t\\tfill=\\"none\\"\\n\\t\\t\\t\\t\\t\\tstroke-dasharray={`${successRate * 1.57} 157`}\\n\\t\\t\\t\\t\\t\\tstroke-dashoffset=\\"0\\"\\n\\t\\t\\t\\t\\t\\ttransform=\\"rotate(-90 30 30)\\"\\n\\t\\t\\t\\t\\t\\tclass=\\"progress-circle\\"\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t</svg>\\n\\t\\t\\t\\t<span class=\\"progress-text\\">{successRate}%</span>\\n\\t\\t\\t</div>\\n\\t\\t\\t<span class=\\"stat-label\\">Success Rate</span>\\n\\t\\t</div>\\n\\t</div>\\n\\t\\n\\t{#if result.errors.length > 0}\\n\\t\\t<div class=\\"errors-section\\">\\n\\t\\t\\t<div class=\\"errors-header\\">\\n\\t\\t\\t\\t<h3>Import Errors ({result.errors.length})</h3>\\n\\t\\t\\t\\t<button type=\\"button\\" class=\\"btn-ghost\\" on:click={downloadErrorReport}>\\n\\t\\t\\t\\t\\t<Download size={16} />\\n\\t\\t\\t\\t\\tDownload Error Report\\n\\t\\t\\t\\t</button>\\n\\t\\t\\t</div>\\n\\t\\t\\t\\n\\t\\t\\t<div class=\\"error-list\\">\\n\\t\\t\\t\\t{#each result.errors.slice(0, 10) as error}\\n\\t\\t\\t\\t\\t<div class=\\"error-item\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\"error-row\\">Row {error.row}</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\"error-message\\">{error.message}</div>\\n\\t\\t\\t\\t\\t\\t{#if error.data}\\n\\t\\t\\t\\t\\t\\t\\t<details class=\\"error-data\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<summary>View data</summary>\\n\\t\\t\\t\\t\\t\\t\\t\\t<pre>{JSON.stringify(error.data, null, 2)}</pre>\\n\\t\\t\\t\\t\\t\\t\\t</details>\\n\\t\\t\\t\\t\\t\\t{/if}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t{#if result.errors.length > 10}\\n\\t\\t\\t\\t\\t<div class=\\"more-errors\\">\\n\\t\\t\\t\\t\\t\\t... and {result.errors.length - 10} more errors\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t{/if}\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t{/if}\\n\\t\\n\\t<div class=\\"actions\\">\\n\\t\\t{#if result.failed > 0}\\n\\t\\t\\t<button type=\\"button\\" class=\\"btn-secondary\\" on:click={onRetry}>\\n\\t\\t\\t\\t<RefreshCw size={16} />\\n\\t\\t\\t\\tRetry Failed Imports\\n\\t\\t\\t</button>\\n\\t\\t{/if}\\n\\t\\t<button type=\\"button\\" class=\\"btn-primary\\" on:click={onNewImport}>\\n\\t\\t\\tNew Import\\n\\t\\t</button>\\n\\t</div>\\n</div>\\n\\n<style>\\n\\t.import-results {\\n\\t\\tbackground: white;\\n\\t\\tborder: 1px solid #e0e0e0;\\n\\t\\tborder-radius: 8px;\\n\\t\\tpadding: 2rem;\\n\\t\\tmax-width: 800px;\\n\\t\\tmargin: 0 auto;\\n\\t}\\n\\t\\n\\t.results-header {\\n\\t\\ttext-align: center;\\n\\t\\tmargin-bottom: 2rem;\\n\\t}\\n\\t\\n\\t.results-header h2 {\\n\\t\\tfont-size: 1.5rem;\\n\\t\\tfont-weight: 600;\\n\\t\\tmargin: 1rem 0 0.5rem 0;\\n\\t}\\n\\t\\n\\t.message {\\n\\t\\tcolor: #666;\\n\\t\\tmargin: 0;\\n\\t}\\n\\t\\n\\t:global(.icon-success) {\\n\\t\\tcolor: #10b981;\\n\\t}\\n\\t\\n\\t:global(.icon-warning) {\\n\\t\\tcolor: #f59e0b;\\n\\t}\\n\\t\\n\\t:global(.icon-error) {\\n\\t\\tcolor: #ef4444;\\n\\t}\\n\\t\\n\\t.stats-grid {\\n\\t\\tdisplay: grid;\\n\\t\\tgrid-template-columns: repeat(3, 1fr);\\n\\t\\tgap: 1.5rem;\\n\\t\\tmargin-bottom: 2rem;\\n\\t}\\n\\t\\n\\t.stat-card {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\talign-items: center;\\n\\t\\tgap: 1rem;\\n\\t\\tpadding: 1.5rem;\\n\\t\\tborder-radius: 8px;\\n\\t\\tbackground: #f9f9f9;\\n\\t}\\n\\t\\n\\t.stat-card.success {\\n\\t\\tbackground: #f0fdf4;\\n\\t\\tcolor: #166534;\\n\\t}\\n\\t\\n\\t.stat-card.error {\\n\\t\\tbackground: #fef2f2;\\n\\t\\tcolor: #991b1b;\\n\\t}\\n\\t\\n\\t.stat-card.neutral {\\n\\t\\tbackground: #f9f9f9;\\n\\t\\tcolor: #333;\\n\\t}\\n\\t\\n\\t.stat-content {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\talign-items: center;\\n\\t\\tgap: 0.25rem;\\n\\t}\\n\\t\\n\\t.stat-value {\\n\\t\\tfont-size: 2rem;\\n\\t\\tfont-weight: 700;\\n\\t\\tline-height: 1;\\n\\t}\\n\\t\\n\\t.stat-label {\\n\\t\\tfont-size: 0.875rem;\\n\\t\\topacity: 0.8;\\n\\t}\\n\\t\\n\\t.progress-ring {\\n\\t\\tposition: relative;\\n\\t\\twidth: 60px;\\n\\t\\theight: 60px;\\n\\t}\\n\\t\\n\\t.progress-circle {\\n\\t\\ttransition: stroke-dasharray 0.5s ease;\\n\\t}\\n\\t\\n\\t.progress-text {\\n\\t\\tposition: absolute;\\n\\t\\ttop: 50%;\\n\\t\\tleft: 50%;\\n\\t\\ttransform: translate(-50%, -50%);\\n\\t\\tfont-size: 1rem;\\n\\t\\tfont-weight: 600;\\n\\t}\\n\\t\\n\\t.errors-section {\\n\\t\\tbackground: #fef2f2;\\n\\t\\tborder: 1px solid #fecaca;\\n\\t\\tborder-radius: 8px;\\n\\t\\tpadding: 1.5rem;\\n\\t\\tmargin-bottom: 2rem;\\n\\t}\\n\\t\\n\\t.errors-header {\\n\\t\\tdisplay: flex;\\n\\t\\tjustify-content: space-between;\\n\\t\\talign-items: center;\\n\\t\\tmargin-bottom: 1rem;\\n\\t\\tflex-wrap: wrap;\\n\\t\\tgap: 1rem;\\n\\t}\\n\\t\\n\\t.errors-header h3 {\\n\\t\\tfont-size: 1.125rem;\\n\\t\\tfont-weight: 600;\\n\\t\\tmargin: 0;\\n\\t\\tcolor: #991b1b;\\n\\t}\\n\\t\\n\\t.btn-ghost {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tgap: 0.5rem;\\n\\t\\tpadding: 0.5rem 1rem;\\n\\t\\tbackground: white;\\n\\t\\tborder: 1px solid #fecaca;\\n\\t\\tborder-radius: 6px;\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tcolor: #991b1b;\\n\\t\\tcursor: pointer;\\n\\t\\ttransition: all 0.2s;\\n\\t}\\n\\t\\n\\t.btn-ghost:hover {\\n\\t\\tbackground: #fee;\\n\\t\\tborder-color: #f87171;\\n\\t}\\n\\t\\n\\t.error-list {\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t\\tgap: 0.75rem;\\n\\t}\\n\\t\\n\\t.error-item {\\n\\t\\tbackground: white;\\n\\t\\tborder: 1px solid #fecaca;\\n\\t\\tborder-radius: 6px;\\n\\t\\tpadding: 1rem;\\n\\t}\\n\\t\\n\\t.error-row {\\n\\t\\tfont-weight: 600;\\n\\t\\tcolor: #991b1b;\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tmargin-bottom: 0.25rem;\\n\\t}\\n\\t\\n\\t.error-message {\\n\\t\\tcolor: #666;\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tmargin-bottom: 0.5rem;\\n\\t}\\n\\t\\n\\t.error-data {\\n\\t\\tmargin-top: 0.5rem;\\n\\t\\tfont-size: 0.75rem;\\n\\t}\\n\\t\\n\\t.error-data summary {\\n\\t\\tcursor: pointer;\\n\\t\\tcolor: #991b1b;\\n\\t\\tfont-weight: 500;\\n\\t}\\n\\t\\n\\t.error-data pre {\\n\\t\\tmargin-top: 0.5rem;\\n\\t\\tpadding: 0.5rem;\\n\\t\\tbackground: #fafafa;\\n\\t\\tborder-radius: 4px;\\n\\t\\toverflow-x: auto;\\n\\t\\tfont-size: 0.75rem;\\n\\t\\tline-height: 1.4;\\n\\t}\\n\\t\\n\\t.more-errors {\\n\\t\\ttext-align: center;\\n\\t\\tpadding: 1rem;\\n\\t\\tcolor: #991b1b;\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tfont-style: italic;\\n\\t}\\n\\t\\n\\t.actions {\\n\\t\\tdisplay: flex;\\n\\t\\tjustify-content: center;\\n\\t\\tgap: 1rem;\\n\\t\\tmargin-top: 2rem;\\n\\t}\\n\\t\\n\\t.btn-primary, .btn-secondary {\\n\\t\\tdisplay: flex;\\n\\t\\talign-items: center;\\n\\t\\tgap: 0.5rem;\\n\\t\\tpadding: 0.75rem 1.5rem;\\n\\t\\tborder: none;\\n\\t\\tborder-radius: 6px;\\n\\t\\tfont-size: 1rem;\\n\\t\\tfont-weight: 500;\\n\\t\\tcursor: pointer;\\n\\t\\ttransition: all 0.2s;\\n\\t}\\n\\t\\n\\t.btn-primary {\\n\\t\\tbackground: #10b981;\\n\\t\\tcolor: white;\\n\\t}\\n\\t\\n\\t.btn-primary:hover {\\n\\t\\tbackground: #059669;\\n\\t\\ttransform: translateY(-1px);\\n\\t\\tbox-shadow: 0 4px 12px rgba(16, 185, 129, 0.2);\\n\\t}\\n\\t\\n\\t.btn-secondary {\\n\\t\\tbackground: #f3f4f6;\\n\\t\\tcolor: #333;\\n\\t\\tborder: 1px solid #e5e7eb;\\n\\t}\\n\\t\\n\\t.btn-secondary:hover {\\n\\t\\tbackground: #e5e7eb;\\n\\t\\ttransform: translateY(-1px);\\n\\t}\\n\\t\\n\\t@media (max-width: 768px) {\\n\\t\\t.import-results {\\n\\t\\t\\tpadding: 1.5rem;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.stats-grid {\\n\\t\\t\\tgrid-template-columns: 1fr;\\n\\t\\t\\tgap: 1rem;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.actions {\\n\\t\\t\\tflex-direction: column;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.btn-primary, .btn-secondary {\\n\\t\\t\\twidth: 100%;\\n\\t\\t\\tjustify-content: center;\\n\\t\\t}\\n\\t}\\n</style>"],"names":[],"mappings":"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"}'
};
const ImportResults = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let successRate;
  let { result } = $$props;
  let { onRetry = () => {
  } } = $$props;
  let { onNewImport = () => {
  } } = $$props;
  if ($$props.result === void 0 && $$bindings.result && result !== void 0) $$bindings.result(result);
  if ($$props.onRetry === void 0 && $$bindings.onRetry && onRetry !== void 0) $$bindings.onRetry(onRetry);
  if ($$props.onNewImport === void 0 && $$bindings.onNewImport && onNewImport !== void 0) $$bindings.onNewImport(onNewImport);
  $$result.css.add(css$1);
  successRate = result.imported > 0 ? Math.round(result.imported / (result.imported + result.failed) * 100) : 0;
  return `<div class="import-results svelte-3ka85i"><div class="results-header svelte-3ka85i">${result.success ? `${validate_component(Circle_check_big, "CheckCircle").$$render($$result, { size: 48, class: "icon-success" }, {}, {})} <h2 class="svelte-3ka85i" data-svelte-h="svelte-rsxmq9">Import Complete!</h2>` : `${result.imported > 0 ? `${validate_component(Circle_alert, "AlertCircle").$$render($$result, { size: 48, class: "icon-warning" }, {}, {})} <h2 class="svelte-3ka85i" data-svelte-h="svelte-1rlykt1">Partial Import Complete</h2>` : `${validate_component(Circle_x, "XCircle").$$render($$result, { size: 48, class: "icon-error" }, {}, {})} <h2 class="svelte-3ka85i" data-svelte-h="svelte-rjyhcg">Import Failed</h2>`}`} <p class="message svelte-3ka85i">${escape(result.message)}</p></div> <div class="stats-grid svelte-3ka85i"><div class="stat-card success svelte-3ka85i">${validate_component(Circle_check_big, "CheckCircle").$$render($$result, { size: 24 }, {}, {})} <div class="stat-content svelte-3ka85i"><span class="stat-value svelte-3ka85i">${escape(result.imported)}</span> <span class="stat-label svelte-3ka85i" data-svelte-h="svelte-xwnhhj">Trades Imported</span></div></div> <div class="stat-card error svelte-3ka85i">${validate_component(Circle_x, "XCircle").$$render($$result, { size: 24 }, {}, {})} <div class="stat-content svelte-3ka85i"><span class="stat-value svelte-3ka85i">${escape(result.failed)}</span> <span class="stat-label svelte-3ka85i" data-svelte-h="svelte-hg06v7">Failed Imports</span></div></div> <div class="stat-card neutral svelte-3ka85i"><div class="progress-ring svelte-3ka85i"><svg width="60" height="60"><circle cx="30" cy="30" r="25" stroke="#e0e0e0" stroke-width="5" fill="none"></circle><circle cx="30" cy="30" r="25" stroke="#10b981" stroke-width="5" fill="none"${add_attribute("stroke-dasharray", `${successRate * 1.57} 157`, 0)} stroke-dashoffset="0" transform="rotate(-90 30 30)" class="progress-circle svelte-3ka85i"></circle></svg> <span class="progress-text svelte-3ka85i">${escape(successRate)}%</span></div> <span class="stat-label svelte-3ka85i" data-svelte-h="svelte-helmn3">Success Rate</span></div></div> ${result.errors.length > 0 ? `<div class="errors-section svelte-3ka85i"><div class="errors-header svelte-3ka85i"><h3 class="svelte-3ka85i">Import Errors (${escape(result.errors.length)})</h3> <button type="button" class="btn-ghost svelte-3ka85i">${validate_component(Download, "Download").$$render($$result, { size: 16 }, {}, {})}
					Download Error Report</button></div> <div class="error-list svelte-3ka85i">${each(result.errors.slice(0, 10), (error) => {
    return `<div class="error-item svelte-3ka85i"><div class="error-row svelte-3ka85i">Row ${escape(error.row)}</div> <div class="error-message svelte-3ka85i">${escape(error.message)}</div> ${error.data ? `<details class="error-data svelte-3ka85i"><summary class="svelte-3ka85i" data-svelte-h="svelte-1undvm7">View data</summary> <pre class="svelte-3ka85i">${escape(JSON.stringify(error.data, null, 2))}</pre> </details>` : ``} </div>`;
  })} ${result.errors.length > 10 ? `<div class="more-errors svelte-3ka85i">... and ${escape(result.errors.length - 10)} more errors</div>` : ``}</div></div>` : ``} <div class="actions svelte-3ka85i">${result.failed > 0 ? `<button type="button" class="btn-secondary svelte-3ka85i">${validate_component(Refresh_cw, "RefreshCw").$$render($$result, { size: 16 }, {}, {})}
				Retry Failed Imports</button>` : ``} <button type="button" class="btn-primary svelte-3ka85i" data-svelte-h="svelte-1mxq5cv">New Import</button></div> </div>`;
});
const css = {
  code: ".upload-page.svelte-16ur8w6.svelte-16ur8w6{max-width:1000px;margin:0 auto;padding-bottom:4rem}.page-header.svelte-16ur8w6.svelte-16ur8w6{margin-bottom:2rem}.page-header.svelte-16ur8w6 h1.svelte-16ur8w6{font-size:2rem;margin-bottom:0.5rem}.page-header.svelte-16ur8w6 p.svelte-16ur8w6{color:#666;font-size:1.125rem}.instructions.svelte-16ur8w6.svelte-16ur8w6{margin-top:3rem;display:grid;gap:2rem}.instructions.svelte-16ur8w6 h3.svelte-16ur8w6{font-size:1.125rem;font-weight:600;margin-bottom:0.75rem;color:#333}.instructions.svelte-16ur8w6 ul.svelte-16ur8w6{margin:0;padding-left:1.5rem;color:#666;line-height:1.8}.sample-format.svelte-16ur8w6.svelte-16ur8w6{background:#f9f9f9;border:1px solid #e0e0e0;border-radius:6px;padding:1rem;overflow-x:auto}.sample-format.svelte-16ur8w6 code.svelte-16ur8w6{font-family:'Courier New', monospace;font-size:0.875rem;color:#333;white-space:pre}.actions.svelte-16ur8w6.svelte-16ur8w6{display:flex;justify-content:flex-end;gap:1rem;margin-top:2rem}.btn-primary.svelte-16ur8w6.svelte-16ur8w6,.btn-secondary.svelte-16ur8w6.svelte-16ur8w6{padding:0.75rem 1.5rem;border:none;border-radius:6px;font-size:1rem;font-weight:500;cursor:pointer;transition:all 0.2s}.btn-primary.svelte-16ur8w6.svelte-16ur8w6{background:#10b981;color:white}.btn-primary.svelte-16ur8w6.svelte-16ur8w6:hover{background:#059669;transform:translateY(-1px);box-shadow:0 4px 12px rgba(16, 185, 129, 0.2)}.btn-secondary.svelte-16ur8w6.svelte-16ur8w6{background:#f3f4f6;color:#333;border:1px solid #e5e7eb}.btn-secondary.svelte-16ur8w6.svelte-16ur8w6:hover{background:#e5e7eb}.error-message.svelte-16ur8w6.svelte-16ur8w6{background:#fee;border:1px solid #fcc;border-radius:8px;padding:2rem;text-align:center;margin-top:2rem}.error-message.svelte-16ur8w6 h3.svelte-16ur8w6{font-size:1.25rem;color:#c00;margin:0 0 0.5rem 0}.error-message.svelte-16ur8w6 p.svelte-16ur8w6{color:#666;margin:0 0 1.5rem 0}@media(max-width: 768px){.upload-page.svelte-16ur8w6.svelte-16ur8w6{padding:1rem}.actions.svelte-16ur8w6.svelte-16ur8w6{flex-direction:column}.btn-primary.svelte-16ur8w6.svelte-16ur8w6,.btn-secondary.svelte-16ur8w6.svelte-16ur8w6{width:100%}}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script lang=\\"ts\\">\\"use strict\\";\\nimport { onMount } from \\"svelte\\";\\nimport { goto } from \\"$app/navigation\\";\\nimport { get } from \\"svelte/store\\";\\nimport { isAuthenticated } from \\"$lib/api/auth\\";\\nimport { uploadsApi } from \\"$lib/api/uploads\\";\\nimport { uploadStore } from \\"$lib/stores/upload\\";\\nimport FileUpload from \\"$lib/components/FileUpload.svelte\\";\\nimport UploadProgress from \\"$lib/components/UploadProgress.svelte\\";\\nimport ColumnMapper from \\"$lib/components/ColumnMapper.svelte\\";\\nimport DataPreview from \\"$lib/components/DataPreview.svelte\\";\\nimport ImportResults from \\"$lib/components/ImportResults.svelte\\";\\nimport { logger } from \\"$lib/utils/logger\\";\\nlet currentFile = null;\\nlet uploadId = null;\\nlet suggestedMapping = {};\\nlet columnMapping = {};\\nconst {\\n  stage,\\n  progress,\\n  message,\\n  uploadResponse,\\n  validationResult,\\n  importResult,\\n  error\\n} = uploadStore;\\nasync function handleFileUpload(event) {\\n  const file = event.detail.files[0];\\n  if (!file) return;\\n  currentFile = file;\\n  uploadStore.setFile(file);\\n  uploadStore.setStage(\\"uploading\\");\\n  uploadStore.setProgress(0);\\n  uploadStore.setMessage(\\"Uploading file...\\");\\n  try {\\n    const progressInterval = setInterval(() => {\\n      uploadStore.setProgress((prev) => Math.min(prev + 10, 90));\\n    }, 200);\\n    const response = await uploadsApi.uploadFile(file);\\n    clearInterval(progressInterval);\\n    uploadStore.setProgress(100);\\n    uploadStore.setUploadResponse(response);\\n    uploadId = response.upload_id;\\n    suggestedMapping = await uploadsApi.getSuggestedMappings(response.columns);\\n    columnMapping = suggestedMapping;\\n    uploadStore.setStage(\\"mapping\\");\\n    uploadStore.setMessage(\\"Configure column mappings...\\");\\n  } catch (err) {\\n    logger.error(\\"Upload failed:\\", err);\\n    uploadStore.setError(err.message || \\"Failed to upload file\\");\\n  }\\n}\\nasync function handleMappingChange(event) {\\n  columnMapping = event.detail.mapping;\\n}\\nasync function proceedToValidation() {\\n  if (!uploadId) return;\\n  uploadStore.setStage(\\"validating\\");\\n  uploadStore.setProgress(0);\\n  uploadStore.setMessage(\\"Validating data...\\");\\n  try {\\n    const result = await uploadsApi.validateData(uploadId, columnMapping);\\n    uploadStore.setValidationResult(result);\\n    uploadStore.setProgress(100);\\n    if (result.valid) {\\n      await proceedToImport();\\n    } else {\\n      uploadStore.setStage(\\"mapping\\");\\n      uploadStore.setMessage(\`Validation failed: \${result.errors.length} errors found\`);\\n    }\\n  } catch (err) {\\n    logger.error(\\"Validation failed:\\", err);\\n    uploadStore.setError(err.message || \\"Failed to validate data\\");\\n  }\\n}\\nasync function proceedToImport() {\\n  if (!uploadId) return;\\n  uploadStore.setStage(\\"importing\\");\\n  uploadStore.setProgress(0);\\n  uploadStore.setMessage(\\"Importing trades...\\");\\n  try {\\n    const progressInterval = setInterval(() => {\\n      uploadStore.setProgress((prev) => Math.min(prev + 5, 95));\\n    }, 500);\\n    const result = await uploadsApi.importTrades(uploadId, columnMapping);\\n    clearInterval(progressInterval);\\n    uploadStore.setProgress(100);\\n    uploadStore.setImportResult(result);\\n    uploadStore.setStage(\\"complete\\");\\n    uploadStore.setMessage(result.message);\\n  } catch (err) {\\n    logger.error(\\"Import failed:\\", err);\\n    uploadStore.setError(err.message || \\"Failed to import trades\\");\\n  }\\n}\\nfunction handleNewImport() {\\n  uploadStore.reset();\\n  currentFile = null;\\n  uploadId = null;\\n  suggestedMapping = {};\\n  columnMapping = {};\\n}\\nfunction handleRetryImport() {\\n  proceedToImport();\\n}\\nonMount(() => {\\n  if (!get(isAuthenticated)) {\\n    goto(\\"/login\\");\\n  }\\n  uploadStore.reset();\\n});\\n<\/script>\\n\\n<svelte:head>\\n\\t<title>Import Trades - TradeSense</title>\\n</svelte:head>\\n\\n<div class=\\"upload-page\\">\\n\\t<header class=\\"page-header\\">\\n\\t\\t<div>\\n\\t\\t\\t<h1>Import Trades</h1>\\n\\t\\t\\t<p>Upload your trade history from CSV, Excel, or JSON files</p>\\n\\t\\t</div>\\n\\t</header>\\n\\t\\n\\t{#if $stage === 'idle'}\\n\\t\\t<FileUpload\\n\\t\\t\\ton:upload={handleFileUpload}\\n\\t\\t\\taccept=\\".csv,.xlsx,.xls,.json\\"\\n\\t\\t\\tmaxSize={10485760}\\n\\t\\t/>\\n\\t\\t\\n\\t\\t<div class=\\"instructions\\">\\n\\t\\t\\t<h3>File Requirements</h3>\\n\\t\\t\\t<ul>\\n\\t\\t\\t\\t<li>Supported formats: CSV (.csv), Excel (.xlsx, .xls), JSON (.json)</li>\\n\\t\\t\\t\\t<li>Maximum file size: 10MB</li>\\n\\t\\t\\t\\t<li>Required columns: Symbol, Side, Entry Price, Exit Price, Quantity, Entry Date, Exit Date</li>\\n\\t\\t\\t\\t<li>Optional columns: P&L, Strategy, Notes</li>\\n\\t\\t\\t</ul>\\n\\t\\t\\t\\n\\t\\t\\t<h3>Sample File Format</h3>\\n\\t\\t\\t<div class=\\"sample-format\\">\\n\\t\\t\\t\\t<code>\\n\\t\\t\\t\\t\\tSymbol,Side,Entry Price,Exit Price,Quantity,Entry Date,Exit Date<br>\\n\\t\\t\\t\\t\\tAAPL,long,150.00,155.00,100,2024-01-01 09:30,2024-01-01 15:30<br>\\n\\t\\t\\t\\t\\tTSLA,short,240.50,238.00,50,2024-01-02 10:00,2024-01-02 14:00\\n\\t\\t\\t\\t</code>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t{/if}\\n\\t\\n\\t{#if $stage !== 'idle' && $stage !== 'complete'}\\n\\t\\t<UploadProgress\\n\\t\\t\\tstage={$stage}\\n\\t\\t\\tprogress={$progress}\\n\\t\\t\\tmessage={$message}\\n\\t\\t\\tfileName={currentFile?.name || ''}\\n\\t\\t\\ttotalRows={$uploadResponse?.rows || 0}\\n\\t\\t\\terrors={$validationResult?.errors.map(e => \`Row \${e.row}: \${e.message}\`) || []}\\n\\t\\t\\twarnings={$validationResult?.warnings.map(w => \`Row \${w.row}: \${w.message}\`) || []}\\n\\t\\t/>\\n\\t{/if}\\n\\t\\n\\t{#if $stage === 'mapping' && $uploadResponse}\\n\\t\\t<ColumnMapper\\n\\t\\t\\tfileColumns={$uploadResponse.columns}\\n\\t\\t\\tdataPreview={$uploadResponse.data_preview}\\n\\t\\t\\t{suggestedMapping}\\n\\t\\t\\tcurrentMapping={columnMapping}\\n\\t\\t\\ton:change={handleMappingChange}\\n\\t\\t/>\\n\\t\\t\\n\\t\\t<DataPreview\\n\\t\\t\\tdata={$uploadResponse.data_preview}\\n\\t\\t\\tcolumns={$uploadResponse.columns}\\n\\t\\t\\ttitle=\\"File Preview\\"\\n\\t\\t\\tmaxRows={5}\\n\\t\\t/>\\n\\t\\t\\n\\t\\t<div class=\\"actions\\">\\n\\t\\t\\t<button type=\\"button\\" class=\\"btn-secondary\\" on:click={handleNewImport}>\\n\\t\\t\\t\\tCancel\\n\\t\\t\\t</button>\\n\\t\\t\\t<button type=\\"button\\" class=\\"btn-primary\\" on:click={proceedToValidation}>\\n\\t\\t\\t\\tValidate & Import\\n\\t\\t\\t</button>\\n\\t\\t</div>\\n\\t{/if}\\n\\t\\n\\t{#if $stage === 'complete' && $importResult}\\n\\t\\t<ImportResults\\n\\t\\t\\tresult={$importResult}\\n\\t\\t\\tonRetry={handleRetryImport}\\n\\t\\t\\tonNewImport={handleNewImport}\\n\\t\\t/>\\n\\t{/if}\\n\\t\\n\\t{#if $error}\\n\\t\\t<div class=\\"error-message\\">\\n\\t\\t\\t<h3>Error</h3>\\n\\t\\t\\t<p>{$error}</p>\\n\\t\\t\\t<button type=\\"button\\" class=\\"btn-primary\\" on:click={handleNewImport}>\\n\\t\\t\\t\\tTry Again\\n\\t\\t\\t</button>\\n\\t\\t</div>\\n\\t{/if}\\n</div>\\n\\n<style>\\n\\t.upload-page {\\n\\t\\tmax-width: 1000px;\\n\\t\\tmargin: 0 auto;\\n\\t\\tpadding-bottom: 4rem;\\n\\t}\\n\\t\\n\\t.page-header {\\n\\t\\tmargin-bottom: 2rem;\\n\\t}\\n\\t\\n\\t.page-header h1 {\\n\\t\\tfont-size: 2rem;\\n\\t\\tmargin-bottom: 0.5rem;\\n\\t}\\n\\t\\n\\t.page-header p {\\n\\t\\tcolor: #666;\\n\\t\\tfont-size: 1.125rem;\\n\\t}\\n\\t\\n\\t.instructions {\\n\\t\\tmargin-top: 3rem;\\n\\t\\tdisplay: grid;\\n\\t\\tgap: 2rem;\\n\\t}\\n\\t\\n\\t.instructions h3 {\\n\\t\\tfont-size: 1.125rem;\\n\\t\\tfont-weight: 600;\\n\\t\\tmargin-bottom: 0.75rem;\\n\\t\\tcolor: #333;\\n\\t}\\n\\t\\n\\t.instructions ul {\\n\\t\\tmargin: 0;\\n\\t\\tpadding-left: 1.5rem;\\n\\t\\tcolor: #666;\\n\\t\\tline-height: 1.8;\\n\\t}\\n\\t\\n\\t.sample-format {\\n\\t\\tbackground: #f9f9f9;\\n\\t\\tborder: 1px solid #e0e0e0;\\n\\t\\tborder-radius: 6px;\\n\\t\\tpadding: 1rem;\\n\\t\\toverflow-x: auto;\\n\\t}\\n\\t\\n\\t.sample-format code {\\n\\t\\tfont-family: 'Courier New', monospace;\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tcolor: #333;\\n\\t\\twhite-space: pre;\\n\\t}\\n\\t\\n\\t.actions {\\n\\t\\tdisplay: flex;\\n\\t\\tjustify-content: flex-end;\\n\\t\\tgap: 1rem;\\n\\t\\tmargin-top: 2rem;\\n\\t}\\n\\t\\n\\t.btn-primary, .btn-secondary {\\n\\t\\tpadding: 0.75rem 1.5rem;\\n\\t\\tborder: none;\\n\\t\\tborder-radius: 6px;\\n\\t\\tfont-size: 1rem;\\n\\t\\tfont-weight: 500;\\n\\t\\tcursor: pointer;\\n\\t\\ttransition: all 0.2s;\\n\\t}\\n\\t\\n\\t.btn-primary {\\n\\t\\tbackground: #10b981;\\n\\t\\tcolor: white;\\n\\t}\\n\\t\\n\\t.btn-primary:hover {\\n\\t\\tbackground: #059669;\\n\\t\\ttransform: translateY(-1px);\\n\\t\\tbox-shadow: 0 4px 12px rgba(16, 185, 129, 0.2);\\n\\t}\\n\\t\\n\\t.btn-secondary {\\n\\t\\tbackground: #f3f4f6;\\n\\t\\tcolor: #333;\\n\\t\\tborder: 1px solid #e5e7eb;\\n\\t}\\n\\t\\n\\t.btn-secondary:hover {\\n\\t\\tbackground: #e5e7eb;\\n\\t}\\n\\t\\n\\t.error-message {\\n\\t\\tbackground: #fee;\\n\\t\\tborder: 1px solid #fcc;\\n\\t\\tborder-radius: 8px;\\n\\t\\tpadding: 2rem;\\n\\t\\ttext-align: center;\\n\\t\\tmargin-top: 2rem;\\n\\t}\\n\\t\\n\\t.error-message h3 {\\n\\t\\tfont-size: 1.25rem;\\n\\t\\tcolor: #c00;\\n\\t\\tmargin: 0 0 0.5rem 0;\\n\\t}\\n\\t\\n\\t.error-message p {\\n\\t\\tcolor: #666;\\n\\t\\tmargin: 0 0 1.5rem 0;\\n\\t}\\n\\t\\n\\t@media (max-width: 768px) {\\n\\t\\t.upload-page {\\n\\t\\t\\tpadding: 1rem;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.actions {\\n\\t\\t\\tflex-direction: column;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.btn-primary, .btn-secondary {\\n\\t\\t\\twidth: 100%;\\n\\t\\t}\\n\\t}\\n</style>"],"names":[],"mappings":"AAkNC,0CAAa,CACZ,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,cAAc,CAAE,IACjB,CAEA,0CAAa,CACZ,aAAa,CAAE,IAChB,CAEA,2BAAY,CAAC,iBAAG,CACf,SAAS,CAAE,IAAI,CACf,aAAa,CAAE,MAChB,CAEA,2BAAY,CAAC,gBAAE,CACd,KAAK,CAAE,IAAI,CACX,SAAS,CAAE,QACZ,CAEA,2CAAc,CACb,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IAAI,CACb,GAAG,CAAE,IACN,CAEA,4BAAa,CAAC,iBAAG,CAChB,SAAS,CAAE,QAAQ,CACnB,WAAW,CAAE,GAAG,CAChB,aAAa,CAAE,OAAO,CACtB,KAAK,CAAE,IACR,CAEA,4BAAa,CAAC,iBAAG,CAChB,MAAM,CAAE,CAAC,CACT,YAAY,CAAE,MAAM,CACpB,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,GACd,CAEA,4CAAe,CACd,UAAU,CAAE,OAAO,CACnB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,IACb,CAEA,6BAAc,CAAC,mBAAK,CACnB,WAAW,CAAE,aAAa,CAAC,CAAC,SAAS,CACrC,SAAS,CAAE,QAAQ,CACnB,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,GACd,CAEA,sCAAS,CACR,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,QAAQ,CACzB,GAAG,CAAE,IAAI,CACT,UAAU,CAAE,IACb,CAEA,0CAAY,CAAE,4CAAe,CAC5B,OAAO,CAAE,OAAO,CAAC,MAAM,CACvB,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,GAAG,CAChB,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,GAAG,CAAC,IACjB,CAEA,0CAAa,CACZ,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,KACR,CAEA,0CAAY,MAAO,CAClB,UAAU,CAAE,OAAO,CACnB,SAAS,CAAE,WAAW,IAAI,CAAC,CAC3B,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAC9C,CAEA,4CAAe,CACd,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OACnB,CAEA,4CAAc,MAAO,CACpB,UAAU,CAAE,OACb,CAEA,4CAAe,CACd,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,MAAM,CAClB,UAAU,CAAE,IACb,CAEA,6BAAc,CAAC,iBAAG,CACjB,SAAS,CAAE,OAAO,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CACpB,CAEA,6BAAc,CAAC,gBAAE,CAChB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CACpB,CAEA,MAAO,YAAY,KAAK,CAAE,CACzB,0CAAa,CACZ,OAAO,CAAE,IACV,CAEA,sCAAS,CACR,cAAc,CAAE,MACjB,CAEA,0CAAY,CAAE,4CAAe,CAC5B,KAAK,CAAE,IACR,CACD"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $stage, $$unsubscribe_stage;
  let $progress, $$unsubscribe_progress;
  let $message, $$unsubscribe_message;
  let $uploadResponse, $$unsubscribe_uploadResponse;
  let $validationResult, $$unsubscribe_validationResult;
  let $importResult, $$unsubscribe_importResult;
  let $error, $$unsubscribe_error;
  let currentFile = null;
  let uploadId = null;
  let suggestedMapping = {};
  let columnMapping = {};
  const { stage, progress, message, uploadResponse, validationResult, importResult, error } = uploadStore;
  $$unsubscribe_stage = subscribe(stage, (value) => $stage = value);
  $$unsubscribe_progress = subscribe(progress, (value) => $progress = value);
  $$unsubscribe_message = subscribe(message, (value) => $message = value);
  $$unsubscribe_uploadResponse = subscribe(uploadResponse, (value) => $uploadResponse = value);
  $$unsubscribe_validationResult = subscribe(validationResult, (value) => $validationResult = value);
  $$unsubscribe_importResult = subscribe(importResult, (value) => $importResult = value);
  $$unsubscribe_error = subscribe(error, (value) => $error = value);
  async function proceedToImport() {
    if (!uploadId) return;
    uploadStore.setStage("importing");
    uploadStore.setProgress(0);
    uploadStore.setMessage("Importing trades...");
    try {
      const progressInterval = setInterval(
        () => {
          uploadStore.setProgress((prev) => Math.min(prev + 5, 95));
        },
        500
      );
      const result = await uploadsApi.importTrades(uploadId, columnMapping);
      clearInterval(progressInterval);
      uploadStore.setProgress(100);
      uploadStore.setImportResult(result);
      uploadStore.setStage("complete");
      uploadStore.setMessage(result.message);
    } catch (err) {
      uploadStore.setError(err.message || "Failed to import trades");
    }
  }
  function handleNewImport() {
    uploadStore.reset();
    currentFile = null;
    uploadId = null;
    suggestedMapping = {};
    columnMapping = {};
  }
  function handleRetryImport() {
    proceedToImport();
  }
  $$result.css.add(css);
  $$unsubscribe_stage();
  $$unsubscribe_progress();
  $$unsubscribe_message();
  $$unsubscribe_uploadResponse();
  $$unsubscribe_validationResult();
  $$unsubscribe_importResult();
  $$unsubscribe_error();
  return `${$$result.head += `<!-- HEAD_svelte-q5i65t_START -->${$$result.title = `<title>Import Trades - TradeSense</title>`, ""}<!-- HEAD_svelte-q5i65t_END -->`, ""} <div class="upload-page svelte-16ur8w6"><header class="page-header svelte-16ur8w6" data-svelte-h="svelte-syphyz"><div><h1 class="svelte-16ur8w6">Import Trades</h1> <p class="svelte-16ur8w6">Upload your trade history from CSV, Excel, or JSON files</p></div></header> ${$stage === "idle" ? `${validate_component(FileUpload, "FileUpload").$$render(
    $$result,
    {
      accept: ".csv,.xlsx,.xls,.json",
      maxSize: 10485760
    },
    {},
    {}
  )} <div class="instructions svelte-16ur8w6" data-svelte-h="svelte-wco3mt"><h3 class="svelte-16ur8w6">File Requirements</h3> <ul class="svelte-16ur8w6"><li>Supported formats: CSV (.csv), Excel (.xlsx, .xls), JSON (.json)</li> <li>Maximum file size: 10MB</li> <li>Required columns: Symbol, Side, Entry Price, Exit Price, Quantity, Entry Date, Exit Date</li> <li>Optional columns: P&amp;L, Strategy, Notes</li></ul> <h3 class="svelte-16ur8w6">Sample File Format</h3> <div class="sample-format svelte-16ur8w6"><code class="svelte-16ur8w6">Symbol,Side,Entry Price,Exit Price,Quantity,Entry Date,Exit Date<br>
					AAPL,long,150.00,155.00,100,2024-01-01 09:30,2024-01-01 15:30<br>
					TSLA,short,240.50,238.00,50,2024-01-02 10:00,2024-01-02 14:00</code></div></div>` : ``} ${$stage !== "idle" && $stage !== "complete" ? `${validate_component(UploadProgress, "UploadProgress").$$render(
    $$result,
    {
      stage: $stage,
      progress: $progress,
      message: $message,
      fileName: currentFile?.name || "",
      totalRows: $uploadResponse?.rows || 0,
      errors: $validationResult?.errors.map((e) => `Row ${e.row}: ${e.message}`) || [],
      warnings: $validationResult?.warnings.map((w) => `Row ${w.row}: ${w.message}`) || []
    },
    {},
    {}
  )}` : ``} ${$stage === "mapping" && $uploadResponse ? `${validate_component(ColumnMapper, "ColumnMapper").$$render(
    $$result,
    {
      fileColumns: $uploadResponse.columns,
      dataPreview: $uploadResponse.data_preview,
      suggestedMapping,
      currentMapping: columnMapping
    },
    {},
    {}
  )} ${validate_component(DataPreview, "DataPreview").$$render(
    $$result,
    {
      data: $uploadResponse.data_preview,
      columns: $uploadResponse.columns,
      title: "File Preview",
      maxRows: 5
    },
    {},
    {}
  )} <div class="actions svelte-16ur8w6"><button type="button" class="btn-secondary svelte-16ur8w6" data-svelte-h="svelte-1dt5y2r">Cancel</button> <button type="button" class="btn-primary svelte-16ur8w6" data-svelte-h="svelte-9cbq5z">Validate &amp; Import</button></div>` : ``} ${$stage === "complete" && $importResult ? `${validate_component(ImportResults, "ImportResults").$$render(
    $$result,
    {
      result: $importResult,
      onRetry: handleRetryImport,
      onNewImport: handleNewImport
    },
    {},
    {}
  )}` : ``} ${$error ? `<div class="error-message svelte-16ur8w6"><h3 class="svelte-16ur8w6" data-svelte-h="svelte-1tfa5tk">Error</h3> <p class="svelte-16ur8w6">${escape($error)}</p> <button type="button" class="btn-primary svelte-16ur8w6" data-svelte-h="svelte-cf2jgw">Try Again</button></div>` : ``} </div>`;
});
export {
  Page as default
};
