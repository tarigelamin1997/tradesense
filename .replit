modules = ["nodejs-20", "python-3.11"]

[run]
command = "streamlit run app.py --server.port=5000 --server.address=0.0.0.0 --server.headless=true --server.enableWebsocketCompression=false"

[nix]
channel = "stable-24_05"
packages = ["cargo", "glibcLocales", "libiconv", "libxcrypt", "openssl", "pkg-config", "rustc"]

[deployment]
run = ["sh", "-c", "python3 -m streamlit run app.py --server.port=5000 --server.address=0.0.0.0 --server.headless=true --server.enableWebsocketCompression=false"]

[[ports]]
localPort = 3000
externalPort = 3000

[[ports]]
localPort = 5000
externalPort = 80

[env]
PYTHONUNBUFFERED = "1"
PYTHONPATH = "/home/runner/${REPL_SLUG}"
PIP_DISABLE_PIP_VERSION_CHECK = "1"
LC_ALL = "C"
LANG = "C"
REPLIT_KEEP_PACKAGE_DEV_DEPENDENCIES = "1"

[workflows]
runButton = "Full Stack Development"

[[workflows.workflow]]
name = "Complete App Recovery"
author = 43683701
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üßπ Phase 1: Complete Environment Cleanup...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf ~/.local/lib/python* ~/.cache/pip ~/.pythonlibs ~/.nix-profile/lib/python*"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üîÑ Phase 2: Force Nix Rebuild...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "nix-collect-garbage -d"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üêç Phase 3: Test Clean Python...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 --version && which python3"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üì¶ Phase 4: Install Core Dependencies...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --no-cache-dir --force-reinstall streamlit==1.29.0"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --no-cache-dir --force-reinstall pandas==2.0.3 numpy==1.24.4"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --no-cache-dir --force-reinstall plotly==5.17.0"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --no-cache-dir --force-reinstall python-dateutil==2.8.2"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --no-cache-dir --force-reinstall bcrypt==4.0.1"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --no-cache-dir --force-reinstall \"passlib[bcrypt]==4.0.1\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --no-cache-dir --force-reinstall cryptography==41.0.7"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --no-cache-dir --force-reinstall pyjwt==2.8.0"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --no-cache-dir --force-reinstall psutil==5.9.6"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --no-cache-dir --force-reinstall openpyxl==3.1.2"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --no-cache-dir --force-reinstall xlsxwriter==3.1.9"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --no-cache-dir --force-reinstall setuptools==68.2.2"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üîç Phase 5: Verify Installation...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -c \"import streamlit, pandas, numpy, plotly; print('‚úÖ All core modules imported successfully')\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üöÄ Phase 6: Launch TradeSense...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m streamlit run app.py --server.port=5000 --server.address=0.0.0.0 --server.headless=true --server.enableCORS=false"

[[workflows.workflow]]
name = "Robust App Recovery"
author = 43683701
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üîß Phase 1: Force Process Cleanup...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = 'pkill -f "streamlit\|python" || true'

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üßπ Phase 2: Safe Environment Cleanup...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf ~/.cache/pip ~/.pythonlibs || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üîÑ Phase 3: Gentle Nix Cleanup...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "nix-store --gc --print-roots | head -10 || true"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üêç Phase 4: Verify Python...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 --version && which python3"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üì¶ Phase 5: Install Dependencies...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --no-cache-dir streamlit==1.29.0 pandas==2.0.3 numpy==1.24.4 plotly==5.17.0"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --no-cache-dir python-dateutil==2.8.2 bcrypt==4.0.1 cryptography==41.0.7"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Phase 6: Test Installation...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -c \"import streamlit, pandas, numpy, plotly; print('All modules imported successfully')\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üöÄ Phase 7: Launch TradeSense...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m streamlit run app.py --server.port=5000 --server.address=0.0.0.0 --server.headless=true --server.enableCORS=false"

[[workflows.workflow]]
name = "Direct Package Install"
author = 43683701
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üì¶ Installing TradeSense Dependencies...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --no-cache-dir streamlit==1.29.0"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --no-cache-dir pandas==2.0.3"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --no-cache-dir numpy==1.24.4"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --no-cache-dir plotly==5.17.0"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --no-cache-dir python-dateutil==2.8.2"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --no-cache-dir bcrypt==4.0.1"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --no-cache-dir \"passlib[bcrypt]==4.0.1\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --no-cache-dir cryptography==41.0.7"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --no-cache-dir pyjwt==2.8.0"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --no-cache-dir psutil==5.9.6"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Verifying installation...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -c \"import streamlit, pandas, numpy, plotly; print('‚úÖ Core modules imported successfully')\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üöÄ Launching TradeSense...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m streamlit run app.py --server.port=5000 --server.address=0.0.0.0 --server.headless=true --server.enableCORS=false"

[[workflows.workflow]]
name = "Use Dependencies Tool"
author = 43683701
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üîß Using Replit's Dependencies Tool instead of pip...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Dependencies should be managed through the Dependencies panel\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üöÄ Attempting to run with existing packages...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m streamlit run app.py --server.port=5000 --server.address=0.0.0.0 --server.headless=true --server.enableCORS=false"

[[workflows.workflow]]
name = "Force User Install"
author = 43683701
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üîß Forcing user-space installation...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --break-system-packages --no-cache-dir streamlit==1.29.0"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --break-system-packages --no-cache-dir pandas==2.0.3"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --break-system-packages --no-cache-dir numpy==1.24.4"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --break-system-packages --no-cache-dir plotly==5.17.0"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --break-system-packages --no-cache-dir python-dateutil==2.8.2"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --break-system-packages --no-cache-dir bcrypt==4.0.1"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --break-system-packages --no-cache-dir \"passlib[bcrypt]==4.0.1\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --break-system-packages --no-cache-dir cryptography==41.0.7"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --break-system-packages --no-cache-dir pyjwt==2.8.0"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --break-system-packages --no-cache-dir psutil==5.9.6"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Testing installation...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -c \"import streamlit, pandas, numpy, plotly; print('‚úÖ Modules imported successfully')\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üöÄ Launching TradeSense...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m streamlit run app.py --server.port=5000 --server.address=0.0.0.0 --server.headless=true --server.enableCORS=false"

[[workflows.workflow]]
name = "Clean Install and Run"
author = 43683701
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üßπ Cleaning environment...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "rm -rf ~/.local/lib/python* ~/.cache/pip ~/.pythonlibs"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üì¶ Installing dependencies with Python 3.12...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m pip install --user --break-system-packages --no-cache-dir --force-reinstall -r requirements.txt"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"‚úÖ Testing imports...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -c \"import streamlit, pandas, numpy, plotly; print('‚úÖ All modules imported successfully')\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "echo \"üöÄ Starting TradeSense...\""

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m streamlit run app.py --server.port=5000 --server.address=0.0.0.0 --server.headless=true --server.enableCORS=false"

[[workflows.workflow]]
name = "Quick Start"
author = 43683701
mode = "sequential"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python3 -m streamlit run app.py --server.port=5000 --server.address=0.0.0.0 --server.headless=true --server.enableWebsocketCompression=false"

[[workflows.workflow]]
name = "Full Stack Development"
author = 43683701
mode = "parallel"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd backend && mkdir -p logs && python -m pip install --user --break-system-packages fastapi uvicorn python-multipart sqlalchemy psycopg2-binary && python main.py"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd frontend && npm install && npm run dev"
