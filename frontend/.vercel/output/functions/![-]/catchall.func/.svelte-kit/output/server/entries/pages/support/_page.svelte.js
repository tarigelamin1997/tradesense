import { c as create_ssr_component, b as escape, v as validate_component, e as each } from "../../../chunks/ssr.js";
import "../../../chunks/client.js";
import { a as api } from "../../../chunks/client2.js";
import { a as authStore } from "../../../chunks/auth2.js";
import { I as Icon } from "../../../chunks/Icon.js";
import { a as analytics } from "../../../chunks/analytics.js";
const css = {
  code: ".spinner.svelte-8edmuy{width:2rem;height:2rem;border-width:4px;border-color:#c7d2fe;border-top-color:#4f46e5;border-radius:9999px;animation:spin 1s linear infinite}.spinner-small.svelte-8edmuy{width:1.25rem;height:1.25rem;border-width:2px;border-style:solid;border-color:#c7d2fe;border-top-color:#4f46e5;border-radius:9999px;animation:spin 1s linear infinite}.form-input.svelte-8edmuy,.form-select.svelte-8edmuy,.form-textarea.svelte-8edmuy{width:100%;border-radius:0.375rem;border-color:#d1d5db;box-shadow:0 1px 2px 0 rgba(0, 0, 0, 0.05)}.form-input.svelte-8edmuy:focus,.form-select.svelte-8edmuy:focus,.form-textarea.svelte-8edmuy:focus{border-color:#6366f1;box-shadow:0 0 0 3px rgba(99, 102, 241, 0.1)}.btn.svelte-8edmuy{padding:0.5rem 1rem;border-radius:0.375rem;font-weight:500;transition:background-color 0.15s ease-in-out, color 0.15s ease-in-out}.btn-primary.svelte-8edmuy{background-color:#4f46e5;color:white}.btn-primary.svelte-8edmuy:hover{background-color:#4338ca}.btn-secondary.svelte-8edmuy{background-color:#e5e7eb;color:#1f2937}.btn-secondary.svelte-8edmuy:hover{background-color:#d1d5db}.alert.svelte-8edmuy{padding:1rem;border-radius:0.375rem}.alert-error.svelte-8edmuy{background-color:#fef2f2;color:#991b1b;border:1px solid #fecaca}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n    import { onMount } from 'svelte';\\n    import { goto } from '$app/navigation';\\n    import { api } from '$lib/api/client';\\n    import { authStore } from '$lib/stores/auth';\\n    import Icon from '$lib/components/Icon.svelte';\\n    import analytics from '$lib/analytics';\\n    \\n    let user = null;\\n    let activeTab = 'tickets';\\n    let tickets = [];\\n    let kbArticles = [];\\n    let categories = [];\\n    let searchQuery = '';\\n    let loading = true;\\n    let error = null;\\n    \\n    // New ticket form\\n    let showNewTicket = false;\\n    let ticketForm = {\\n        subject: '',\\n        description: '',\\n        category: 'technical'\\n    };\\n    \\n    // KB search results\\n    let searchResults = [];\\n    let searching = false;\\n    \\n    authStore.subscribe(value => {\\n        user = value.user;\\n    });\\n    \\n    async function loadSupportData() {\\n        try {\\n            loading = true;\\n            error = null;\\n            \\n            if (activeTab === 'tickets' && user) {\\n                // Load user's tickets\\n                const response = await api.get('/support/tickets?limit=20');\\n                tickets = response.tickets;\\n            } else {\\n                // Load KB data\\n                const [categoriesData, popularData] = await Promise.all([\\n                    api.get('/support/kb/categories'),\\n                    api.get('/support/kb/articles/popular?limit=10')\\n                ]);\\n                \\n                categories = categoriesData.categories;\\n                kbArticles = popularData.articles;\\n            }\\n            \\n            analytics.trackPageView('/support');\\n            \\n        } catch (err) {\\n            error = err.message || 'Failed to load support data';\\n        } finally {\\n            loading = false;\\n        }\\n    }\\n    \\n    async function searchKnowledgeBase() {\\n        if (!searchQuery.trim() || searchQuery.length < 2) {\\n            searchResults = [];\\n            return;\\n        }\\n        \\n        try {\\n            searching = true;\\n            const response = await api.get(\`/support/kb/search?q=\${encodeURIComponent(searchQuery)}\`);\\n            searchResults = response.results;\\n            \\n            analytics.trackAction('search_kb', 'support', { query: searchQuery });\\n            \\n        } catch (err) {\\n            console.error('Search failed:', err);\\n        } finally {\\n            searching = false;\\n        }\\n    }\\n    \\n    async function createTicket() {\\n        if (!ticketForm.subject || !ticketForm.description) {\\n            error = 'Please fill in all required fields';\\n            return;\\n        }\\n        \\n        try {\\n            const response = await api.post('/support/tickets', {\\n                subject: ticketForm.subject,\\n                description: ticketForm.description,\\n                category: ticketForm.category\\n            });\\n            \\n            analytics.trackAction('create_ticket', 'support', { category: ticketForm.category });\\n            \\n            // Show suggested articles if any\\n            if (response.suggested_articles && response.suggested_articles.length > 0) {\\n                // Could show a modal with suggestions\\n                console.log('Suggested articles:', response.suggested_articles);\\n            }\\n            \\n            // Redirect to ticket details\\n            goto(\`/support/tickets/\${response.ticket.ticket_id}\`);\\n            \\n        } catch (err) {\\n            error = err.message || 'Failed to create ticket';\\n        }\\n    }\\n    \\n    function getStatusColor(status) {\\n        const colors = {\\n            open: 'bg-blue-100 text-blue-800',\\n            in_progress: 'bg-yellow-100 text-yellow-800',\\n            waiting_customer: 'bg-purple-100 text-purple-800',\\n            resolved: 'bg-green-100 text-green-800',\\n            closed: 'bg-gray-100 text-gray-800'\\n        };\\n        return colors[status] || 'bg-gray-100 text-gray-800';\\n    }\\n    \\n    function getPriorityIcon(priority) {\\n        const icons = {\\n            urgent: { name: 'alert-circle', class: 'text-red-500' },\\n            high: { name: 'arrow-up', class: 'text-orange-500' },\\n            medium: { name: 'minus', class: 'text-yellow-500' },\\n            low: { name: 'arrow-down', class: 'text-gray-500' }\\n        };\\n        return icons[priority] || icons.medium;\\n    }\\n    \\n    function formatDate(dateString) {\\n        return new Date(dateString).toLocaleDateString('en-US', {\\n            year: 'numeric',\\n            month: 'short',\\n            day: 'numeric',\\n            hour: '2-digit',\\n            minute: '2-digit'\\n        });\\n    }\\n    \\n    let searchTimeout;\\n    function debounceSearch() {\\n        clearTimeout(searchTimeout);\\n        searchTimeout = setTimeout(searchKnowledgeBase, 300);\\n    }\\n    \\n    onMount(() => {\\n        loadSupportData();\\n    });\\n    \\n    $: if (activeTab) loadSupportData();\\n<\/script>\\n\\n<div class=\\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\\">\\n    <div class=\\"mb-8\\">\\n        <h1 class=\\"text-3xl font-bold text-gray-900\\">Support Center</h1>\\n        <p class=\\"mt-2 text-gray-600\\">Get help with TradeSense</p>\\n    </div>\\n    \\n    <!-- Tab Navigation -->\\n    <div class=\\"border-b border-gray-200 mb-6\\">\\n        <nav class=\\"-mb-px flex space-x-8\\">\\n            <button\\n                on:click={() => activeTab = 'tickets'}\\n                class=\\"py-2 px-1 border-b-2 font-medium text-sm transition-colors\\n                       {activeTab === 'tickets' \\n                        ? 'border-indigo-500 text-indigo-600' \\n                        : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\\"\\n            >\\n                My Tickets\\n            </button>\\n            <button\\n                on:click={() => activeTab = 'knowledge'}\\n                class=\\"py-2 px-1 border-b-2 font-medium text-sm transition-colors\\n                       {activeTab === 'knowledge' \\n                        ? 'border-indigo-500 text-indigo-600' \\n                        : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}\\"\\n            >\\n                Knowledge Base\\n            </button>\\n        </nav>\\n    </div>\\n    \\n    {#if loading}\\n        <div class=\\"flex justify-center py-12\\">\\n            <div class=\\"spinner\\"></div>\\n        </div>\\n    {:else if error}\\n        <div class=\\"alert alert-error mb-6\\">{error}</div>\\n    {:else}\\n        {#if activeTab === 'tickets'}\\n            <!-- Tickets Tab -->\\n            {#if user}\\n                <div class=\\"mb-6 flex justify-between items-center\\">\\n                    <h2 class=\\"text-xl font-semibold text-gray-900\\">Support Tickets</h2>\\n                    <button\\n                        on:click={() => showNewTicket = true}\\n                        class=\\"btn btn-primary\\"\\n                    >\\n                        <Icon name=\\"plus\\" class=\\"w-5 h-5 mr-2\\" />\\n                        New Ticket\\n                    </button>\\n                </div>\\n                \\n                {#if tickets.length === 0}\\n                    <div class=\\"bg-white rounded-lg shadow-sm border border-gray-200 p-8 text-center\\">\\n                        <Icon name=\\"inbox\\" class=\\"w-12 h-12 text-gray-400 mx-auto mb-4\\" />\\n                        <p class=\\"text-gray-600\\">No support tickets yet</p>\\n                        <p class=\\"text-sm text-gray-500 mt-2\\">\\n                            Need help? Create a ticket and we'll assist you.\\n                        </p>\\n                    </div>\\n                {:else}\\n                    <div class=\\"bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden\\">\\n                        <table class=\\"min-w-full divide-y divide-gray-200\\">\\n                            <thead class=\\"bg-gray-50\\">\\n                                <tr>\\n                                    <th class=\\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\\">\\n                                        Subject\\n                                    </th>\\n                                    <th class=\\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\\">\\n                                        Status\\n                                    </th>\\n                                    <th class=\\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\\">\\n                                        Priority\\n                                    </th>\\n                                    <th class=\\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\\">\\n                                        Created\\n                                    </th>\\n                                    <th class=\\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\\">\\n                                        Last Update\\n                                    </th>\\n                                </tr>\\n                            </thead>\\n                            <tbody class=\\"bg-white divide-y divide-gray-200\\">\\n                                {#each tickets as ticket}\\n                                    <tr class=\\"hover:bg-gray-50 cursor-pointer\\"\\n                                        on:click={() => goto(\`/support/tickets/\${ticket.id}\`)}>\\n                                        <td class=\\"px-6 py-4\\">\\n                                            <div>\\n                                                <p class=\\"text-sm font-medium text-gray-900\\">\\n                                                    {ticket.subject}\\n                                                </p>\\n                                                <p class=\\"text-sm text-gray-500\\">\\n                                                    #{ticket.id.slice(0, 8)}\\n                                                </p>\\n                                            </div>\\n                                        </td>\\n                                        <td class=\\"px-6 py-4\\">\\n                                            <span class=\\"inline-flex px-2 py-1 text-xs font-medium rounded-full\\n                                                       {getStatusColor(ticket.status)}\\">\\n                                                {ticket.status.replace('_', ' ')}\\n                                            </span>\\n                                        </td>\\n                                        <td class=\\"px-6 py-4\\">\\n                                            <div class=\\"flex items-center\\">\\n                                                <Icon \\n                                                    name={getPriorityIcon(ticket.priority).name}\\n                                                    class=\\"w-4 h-4 mr-1 {getPriorityIcon(ticket.priority).class}\\"\\n                                                />\\n                                                <span class=\\"text-sm text-gray-900 capitalize\\">\\n                                                    {ticket.priority}\\n                                                </span>\\n                                            </div>\\n                                        </td>\\n                                        <td class=\\"px-6 py-4 text-sm text-gray-500\\">\\n                                            {formatDate(ticket.created_at)}\\n                                        </td>\\n                                        <td class=\\"px-6 py-4 text-sm text-gray-500\\">\\n                                            {formatDate(ticket.last_message_at || ticket.updated_at)}\\n                                        </td>\\n                                    </tr>\\n                                {/each}\\n                            </tbody>\\n                        </table>\\n                    </div>\\n                {/if}\\n            {:else}\\n                <div class=\\"bg-blue-50 border border-blue-200 rounded-md p-4\\">\\n                    <p class=\\"text-sm text-blue-800\\">\\n                        <a href=\\"/login\\" class=\\"font-medium underline\\">Sign in</a> to view and create support tickets.\\n                    </p>\\n                </div>\\n            {/if}\\n            \\n        {:else}\\n            <!-- Knowledge Base Tab -->\\n            <div class=\\"mb-8\\">\\n                <!-- Search Box -->\\n                <div class=\\"relative max-w-2xl mx-auto\\">\\n                    <input\\n                        type=\\"text\\"\\n                        bind:value={searchQuery}\\n                        on:input={debounceSearch}\\n                        placeholder=\\"Search for help articles...\\"\\n                        class=\\"w-full px-4 py-3 pl-12 border border-gray-300 rounded-lg\\n                               focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\\"\\n                    />\\n                    <Icon name=\\"search\\" class=\\"absolute left-4 top-3.5 w-5 h-5 text-gray-400\\" />\\n                    {#if searching}\\n                        <div class=\\"absolute right-4 top-3.5\\">\\n                            <div class=\\"spinner-small\\"></div>\\n                        </div>\\n                    {/if}\\n                </div>\\n                \\n                <!-- Search Results -->\\n                {#if searchResults.length > 0}\\n                    <div class=\\"mt-6 max-w-2xl mx-auto\\">\\n                        <h3 class=\\"text-lg font-medium text-gray-900 mb-4\\">\\n                            Search Results ({searchResults.length})\\n                        </h3>\\n                        <div class=\\"space-y-4\\">\\n                            {#each searchResults as result}\\n                                {#if result.type === 'quick_answer'}\\n                                    <div class=\\"bg-indigo-50 rounded-lg p-4\\">\\n                                        <h4 class=\\"font-medium text-indigo-900\\">{result.question}</h4>\\n                                        <p class=\\"mt-2 text-sm text-indigo-800\\">{result.answer}</p>\\n                                        <a \\n                                            href=\\"/support/kb/{result.article_id}\\"\\n                                            class=\\"inline-block mt-2 text-sm text-indigo-600 hover:text-indigo-700 font-medium\\"\\n                                        >\\n                                            Read full article →\\n                                        </a>\\n                                    </div>\\n                                {:else}\\n                                    <a \\n                                        href=\\"/support/kb/{result.slug || result.id}\\"\\n                                        class=\\"block bg-white rounded-lg shadow-sm border border-gray-200 p-4 hover:shadow-md transition-shadow\\"\\n                                    >\\n                                        <h4 class=\\"font-medium text-gray-900\\">{result.title}</h4>\\n                                        <p class=\\"mt-1 text-sm text-gray-600\\">{result.summary}</p>\\n                                        <div class=\\"mt-2 flex items-center text-xs text-gray-500\\">\\n                                            <span class=\\"capitalize\\">{result.category}</span>\\n                                            <span class=\\"mx-2\\">•</span>\\n                                            <span>{result.view_count} views</span>\\n                                            {#if result.helpful_rate > 0}\\n                                                <span class=\\"mx-2\\">•</span>\\n                                                <span>{Math.round(result.helpful_rate)}% helpful</span>\\n                                            {/if}\\n                                        </div>\\n                                    </a>\\n                                {/if}\\n                            {/each}\\n                        </div>\\n                    </div>\\n                {:else if searchQuery.length >= 2 && !searching}\\n                    <div class=\\"mt-6 text-center text-gray-600\\">\\n                        No articles found for \\"{searchQuery}\\"\\n                    </div>\\n                {/if}\\n            </div>\\n            \\n            <!-- Categories Grid -->\\n            {#if !searchQuery}\\n                <div class=\\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\\">\\n                    {#each categories as category}\\n                        <a \\n                            href=\\"/support/kb/category/{category.id}\\"\\n                            class=\\"bg-white rounded-lg shadow-sm border border-gray-200 p-6 hover:shadow-md transition-shadow\\"\\n                        >\\n                            <div class=\\"flex items-center mb-4\\">\\n                                <div class=\\"w-12 h-12 bg-indigo-100 rounded-lg flex items-center justify-center\\">\\n                                    <Icon name={category.icon} class=\\"w-6 h-6 text-indigo-600\\" />\\n                                </div>\\n                                <h3 class=\\"ml-4 text-lg font-medium text-gray-900\\">{category.name}</h3>\\n                            </div>\\n                            <p class=\\"text-sm text-gray-600 mb-4\\">{category.description}</p>\\n                            <div class=\\"flex items-center text-sm text-gray-500\\">\\n                                <span>{category.article_count} articles</span>\\n                                <span class=\\"mx-2\\">•</span>\\n                                <span>{category.total_views.toLocaleString()} views</span>\\n                            </div>\\n                        </a>\\n                    {/each}\\n                </div>\\n                \\n                <!-- Popular Articles -->\\n                <div class=\\"mt-12\\">\\n                    <h3 class=\\"text-xl font-semibold text-gray-900 mb-6\\">Popular Articles</h3>\\n                    <div class=\\"bg-white rounded-lg shadow-sm border border-gray-200 divide-y divide-gray-200\\">\\n                        {#each kbArticles as article, index}\\n                            <a \\n                                href=\\"/support/kb/{article.slug || article.id}\\"\\n                                class=\\"block px-6 py-4 hover:bg-gray-50 transition-colors\\"\\n                            >\\n                                <div class=\\"flex items-start justify-between\\">\\n                                    <div class=\\"flex-1\\">\\n                                        <h4 class=\\"text-sm font-medium text-gray-900\\">\\n                                            {index + 1}. {article.title}\\n                                        </h4>\\n                                        <p class=\\"mt-1 text-sm text-gray-600\\">{article.summary}</p>\\n                                    </div>\\n                                    <div class=\\"ml-4 text-right\\">\\n                                        <p class=\\"text-sm text-gray-500\\">{article.view_count} views</p>\\n                                        {#if article.helpful_rate > 0}\\n                                            <p class=\\"text-xs text-green-600\\">\\n                                                {Math.round(article.helpful_rate)}% helpful\\n                                            </p>\\n                                        {/if}\\n                                    </div>\\n                                </div>\\n                            </a>\\n                        {/each}\\n                    </div>\\n                </div>\\n            {/if}\\n        {/if}\\n    {/if}\\n</div>\\n\\n<!-- New Ticket Modal -->\\n{#if showNewTicket}\\n    <div class=\\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\\">\\n        <div class=\\"bg-white rounded-lg shadow-xl max-w-2xl w-full mx-4 p-6\\">\\n            <h3 class=\\"text-xl font-semibold text-gray-900 mb-4\\">Create Support Ticket</h3>\\n            \\n            <form on:submit|preventDefault={createTicket} class=\\"space-y-4\\">\\n                <div>\\n                    <label class=\\"block text-sm font-medium text-gray-700 mb-1\\">\\n                        Subject *\\n                    </label>\\n                    <input\\n                        type=\\"text\\"\\n                        bind:value={ticketForm.subject}\\n                        class=\\"form-input\\"\\n                        placeholder=\\"Brief description of your issue\\"\\n                        required\\n                    />\\n                </div>\\n                \\n                <div>\\n                    <label class=\\"block text-sm font-medium text-gray-700 mb-1\\">\\n                        Category\\n                    </label>\\n                    <select bind:value={ticketForm.category} class=\\"form-select\\">\\n                        <option value=\\"billing\\">Billing & Subscriptions</option>\\n                        <option value=\\"technical\\">Technical Issue</option>\\n                        <option value=\\"account\\">Account Management</option>\\n                        <option value=\\"feature_request\\">Feature Request</option>\\n                        <option value=\\"bug_report\\">Bug Report</option>\\n                        <option value=\\"other\\">Other</option>\\n                    </select>\\n                </div>\\n                \\n                <div>\\n                    <label class=\\"block text-sm font-medium text-gray-700 mb-1\\">\\n                        Description *\\n                    </label>\\n                    <textarea\\n                        bind:value={ticketForm.description}\\n                        rows=\\"6\\"\\n                        class=\\"form-textarea\\"\\n                        placeholder=\\"Please provide detailed information about your issue...\\"\\n                        required\\n                    ></textarea>\\n                    <p class=\\"mt-1 text-xs text-gray-500\\">\\n                        Include steps to reproduce, error messages, and what you expected to happen.\\n                    </p>\\n                </div>\\n                \\n                <div class=\\"mt-6 flex justify-end space-x-3\\">\\n                    <button\\n                        type=\\"button\\"\\n                        on:click={() => showNewTicket = false}\\n                        class=\\"btn btn-secondary\\"\\n                    >\\n                        Cancel\\n                    </button>\\n                    <button\\n                        type=\\"submit\\"\\n                        class=\\"btn btn-primary\\"\\n                    >\\n                        Create Ticket\\n                    </button>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n{/if}\\n\\n<style>\\n    .spinner {\\n        width: 2rem; height: 2rem; border-width: 4px; border-color: #c7d2fe; border-top-color: #4f46e5; border-radius: 9999px; animation: spin 1s linear infinite;\\n    }\\n    \\n    .spinner-small {\\n        width: 1.25rem;\\n        height: 1.25rem;\\n        border-width: 2px;\\n        border-style: solid;\\n        border-color: #c7d2fe;\\n        border-top-color: #4f46e5;\\n        border-radius: 9999px;\\n        animation: spin 1s linear infinite;\\n    }\\n    \\n    .form-input, .form-select, .form-textarea {\\n        width: 100%;\\n        border-radius: 0.375rem;\\n        border-color: #d1d5db;\\n        box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\\n    }\\n    \\n    .form-input:focus, .form-select:focus, .form-textarea:focus {\\n        border-color: #6366f1;\\n        box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);\\n    }\\n    \\n    .btn {\\n        padding: 0.5rem 1rem;\\n        border-radius: 0.375rem;\\n        font-weight: 500;\\n        transition: background-color 0.15s ease-in-out, color 0.15s ease-in-out;\\n    }\\n    \\n    .btn-primary {\\n        background-color: #4f46e5;\\n        color: white;\\n    }\\n    \\n    .btn-primary:hover {\\n        background-color: #4338ca;\\n    }\\n    \\n    .btn-secondary {\\n        background-color: #e5e7eb;\\n        color: #1f2937;\\n    }\\n    \\n    .btn-secondary:hover {\\n        background-color: #d1d5db;\\n    }\\n    \\n    .alert {\\n        padding: 1rem; border-radius: 0.375rem;\\n    }\\n    \\n    .alert-error {\\n        background-color: #fef2f2;\\n        color: #991b1b;\\n        border: 1px solid #fecaca;\\n    }\\n</style>"],"names":[],"mappings":"AAoeI,sBAAS,CACL,KAAK,CAAE,IAAI,CAAE,MAAM,CAAE,IAAI,CAAE,YAAY,CAAE,GAAG,CAAE,YAAY,CAAE,OAAO,CAAE,gBAAgB,CAAE,OAAO,CAAE,aAAa,CAAE,MAAM,CAAE,SAAS,CAAE,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,QACrJ,CAEA,4BAAe,CACX,KAAK,CAAE,OAAO,CACd,MAAM,CAAE,OAAO,CACf,YAAY,CAAE,GAAG,CACjB,YAAY,CAAE,KAAK,CACnB,YAAY,CAAE,OAAO,CACrB,gBAAgB,CAAE,OAAO,CACzB,aAAa,CAAE,MAAM,CACrB,SAAS,CAAE,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,QAC9B,CAEA,yBAAW,CAAE,0BAAY,CAAE,4BAAe,CACtC,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,QAAQ,CACvB,YAAY,CAAE,OAAO,CACrB,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAC9C,CAEA,yBAAW,MAAM,CAAE,0BAAY,MAAM,CAAE,4BAAc,MAAO,CACxD,YAAY,CAAE,OAAO,CACrB,UAAU,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAChD,CAEA,kBAAK,CACD,OAAO,CAAE,MAAM,CAAC,IAAI,CACpB,aAAa,CAAE,QAAQ,CACvB,WAAW,CAAE,GAAG,CAChB,UAAU,CAAE,gBAAgB,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,WAChE,CAEA,0BAAa,CACT,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,KACX,CAEA,0BAAY,MAAO,CACf,gBAAgB,CAAE,OACtB,CAEA,4BAAe,CACX,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,OACX,CAEA,4BAAc,MAAO,CACjB,gBAAgB,CAAE,OACtB,CAEA,oBAAO,CACH,OAAO,CAAE,IAAI,CAAE,aAAa,CAAE,QAClC,CAEA,0BAAa,CACT,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,OAAO,CACd,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OACtB"}`
};
function getStatusColor(status) {
  const colors = {
    open: "bg-blue-100 text-blue-800",
    in_progress: "bg-yellow-100 text-yellow-800",
    waiting_customer: "bg-purple-100 text-purple-800",
    resolved: "bg-green-100 text-green-800",
    closed: "bg-gray-100 text-gray-800"
  };
  return colors[status] || "bg-gray-100 text-gray-800";
}
function getPriorityIcon(priority) {
  const icons = {
    urgent: {
      name: "alert-circle",
      class: "text-red-500"
    },
    high: {
      name: "arrow-up",
      class: "text-orange-500"
    },
    medium: { name: "minus", class: "text-yellow-500" },
    low: {
      name: "arrow-down",
      class: "text-gray-500"
    }
  };
  return icons[priority] || icons.medium;
}
function formatDate(dateString) {
  return new Date(dateString).toLocaleDateString("en-US", {
    year: "numeric",
    month: "short",
    day: "numeric",
    hour: "2-digit",
    minute: "2-digit"
  });
}
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let user = null;
  let activeTab = "tickets";
  let tickets = [];
  let kbArticles = [];
  let categories = [];
  let loading = true;
  let error = null;
  authStore.subscribe((value) => {
    user = value.user;
  });
  async function loadSupportData() {
    try {
      loading = true;
      error = null;
      if (activeTab === "tickets" && user) {
        const response = await api.get("/support/tickets?limit=20");
        tickets = response.tickets;
      } else {
        const [categoriesData, popularData] = await Promise.all([
          api.get("/support/kb/categories"),
          api.get("/support/kb/articles/popular?limit=10")
        ]);
        categories = categoriesData.categories;
        kbArticles = popularData.articles;
      }
      analytics.trackPageView("/support");
    } catch (err) {
      error = err.message || "Failed to load support data";
    } finally {
      loading = false;
    }
  }
  $$result.css.add(css);
  {
    loadSupportData();
  }
  return `<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8"><div class="mb-8" data-svelte-h="svelte-1x6m9bd"><h1 class="text-3xl font-bold text-gray-900">Support Center</h1> <p class="mt-2 text-gray-600">Get help with TradeSense</p></div>  <div class="border-b border-gray-200 mb-6"><nav class="-mb-px flex space-x-8"><button class="${"py-2 px-1 border-b-2 font-medium text-sm transition-colors " + escape(
    "border-indigo-500 text-indigo-600",
    true
  )}">My Tickets</button> <button class="${"py-2 px-1 border-b-2 font-medium text-sm transition-colors " + escape(
    "border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300",
    true
  )}">Knowledge Base</button></nav></div> ${loading ? `<div class="flex justify-center py-12" data-svelte-h="svelte-em5o00"><div class="spinner svelte-8edmuy"></div></div>` : `${error ? `<div class="alert alert-error mb-6 svelte-8edmuy">${escape(error)}</div>` : `${` ${user ? `<div class="mb-6 flex justify-between items-center"><h2 class="text-xl font-semibold text-gray-900" data-svelte-h="svelte-1dpcgcb">Support Tickets</h2> <button class="btn btn-primary svelte-8edmuy">${validate_component(Icon, "Icon").$$render($$result, { name: "plus", class: "w-5 h-5 mr-2" }, {}, {})}
                        New Ticket</button></div> ${tickets.length === 0 ? `<div class="bg-white rounded-lg shadow-sm border border-gray-200 p-8 text-center">${validate_component(Icon, "Icon").$$render(
    $$result,
    {
      name: "inbox",
      class: "w-12 h-12 text-gray-400 mx-auto mb-4"
    },
    {},
    {}
  )} <p class="text-gray-600" data-svelte-h="svelte-10el21y">No support tickets yet</p> <p class="text-sm text-gray-500 mt-2" data-svelte-h="svelte-1ty11kp">Need help? Create a ticket and we&#39;ll assist you.</p></div>` : `<div class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden"><table class="min-w-full divide-y divide-gray-200"><thead class="bg-gray-50" data-svelte-h="svelte-10bh0p7"><tr><th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Subject</th> <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th> <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Priority</th> <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Created</th> <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Last Update</th></tr></thead> <tbody class="bg-white divide-y divide-gray-200">${each(tickets, (ticket) => {
    return `<tr class="hover:bg-gray-50 cursor-pointer"><td class="px-6 py-4"><div><p class="text-sm font-medium text-gray-900">${escape(ticket.subject)}</p> <p class="text-sm text-gray-500">#${escape(ticket.id.slice(0, 8))}</p> </div></td> <td class="px-6 py-4"><span class="${"inline-flex px-2 py-1 text-xs font-medium rounded-full " + escape(getStatusColor(ticket.status), true) + " svelte-8edmuy"}">${escape(ticket.status.replace("_", " "))} </span></td> <td class="px-6 py-4"><div class="flex items-center">${validate_component(Icon, "Icon").$$render(
      $$result,
      {
        name: getPriorityIcon(ticket.priority).name,
        class: "w-4 h-4 mr-1 " + getPriorityIcon(ticket.priority).class
      },
      {},
      {}
    )} <span class="text-sm text-gray-900 capitalize">${escape(ticket.priority)}</span> </div></td> <td class="px-6 py-4 text-sm text-gray-500">${escape(formatDate(ticket.created_at))}</td> <td class="px-6 py-4 text-sm text-gray-500">${escape(formatDate(ticket.last_message_at || ticket.updated_at))}</td> </tr>`;
  })}</tbody></table></div>`}` : `<div class="bg-blue-50 border border-blue-200 rounded-md p-4" data-svelte-h="svelte-uwgil0"><p class="text-sm text-blue-800"><a href="/login" class="font-medium underline">Sign in</a> to view and create support tickets.</p></div>`}`}`}`}</div>  ${``}`;
});
export {
  Page as default
};
