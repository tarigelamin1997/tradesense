import { c as create_ssr_component, v as validate_component, e as each } from "../../../chunks/ssr.js";
import "../../../chunks/client.js";
/* empty css                                                       */
import "lightweight-charts";
/* empty css                                                      */
import "../../../chunks/websocket.js";
/* empty css                                                        */
import "../../../chunks/ssr-safe.js";
import "../../../chunks/TradeInsights.svelte_svelte_type_style_lang.js";
import "../../../chunks/auth.js";
import { L as LoadingSkeleton } from "../../../chunks/LoadingSkeleton.js";
const css = {
  code: ".dashboard.svelte-4lelu5.svelte-4lelu5{max-width:1200px;margin:0 auto}.dashboard-skeleton.svelte-4lelu5.svelte-4lelu5{max-width:1200px;margin:0 auto}.dashboard-skeleton.svelte-4lelu5 .page-header.svelte-4lelu5{margin-bottom:2rem}.dashboard-skeleton.svelte-4lelu5 .metrics-grid.svelte-4lelu5,.metrics-grid.svelte-4lelu5.svelte-4lelu5{display:grid;grid-template-columns:repeat(auto-fit, minmax(250px, 1fr));gap:1.5rem;margin-bottom:2rem}.dashboard-skeleton.svelte-4lelu5 .charts-grid.svelte-4lelu5,.charts-grid.svelte-4lelu5.svelte-4lelu5{display:grid;grid-template-columns:repeat(auto-fit, minmax(400px, 1fr));gap:1.5rem;margin-bottom:2rem}.chart-wrapper.svelte-4lelu5.svelte-4lelu5{background:white;border-radius:8px;overflow:hidden}.recent-trades-skeleton.svelte-4lelu5.svelte-4lelu5{margin-top:2rem}.dashboard-header.svelte-4lelu5.svelte-4lelu5{margin-bottom:2rem}.dashboard-header.svelte-4lelu5 h1.svelte-4lelu5{font-size:2rem;margin-bottom:0.5rem}.dashboard-header.svelte-4lelu5 p.svelte-4lelu5{color:#666}.demo-banner.svelte-4lelu5.svelte-4lelu5{background:#fef3c7;border:1px solid #f59e0b;color:#92400e;padding:1rem;border-radius:8px;margin-bottom:2rem;text-align:center;font-size:0.875rem}.demo-banner.svelte-4lelu5 a.svelte-4lelu5{color:#dc2626;text-decoration:underline;margin:0 0.25rem}h2.svelte-4lelu5.svelte-4lelu5{font-size:1.25rem;margin-bottom:1rem;color:#333}.controls.svelte-4lelu5.svelte-4lelu5{display:flex;gap:1rem;margin-bottom:2rem}.date-range-select.svelte-4lelu5.svelte-4lelu5{padding:0.5rem 1rem;border:1px solid #e0e0e0;border-radius:6px;background:white;font-size:0.875rem}.refresh-button.svelte-4lelu5.svelte-4lelu5{padding:0.5rem 1rem;background:#10b981;color:white;border:none;border-radius:6px;font-size:0.875rem;cursor:pointer;transition:background 0.2s}.refresh-button.svelte-4lelu5.svelte-4lelu5:hover:not(:disabled){background:#059669}.refresh-button.svelte-4lelu5.svelte-4lelu5:disabled{opacity:0.6;cursor:not-allowed}.welcome-container.svelte-4lelu5.svelte-4lelu5{text-align:center;padding:4rem 2rem;max-width:600px;margin:0 auto}.welcome-container.svelte-4lelu5 h1.svelte-4lelu5{font-size:2.5rem;margin-bottom:1rem;color:#1a1a1a}.welcome-container.svelte-4lelu5 p.svelte-4lelu5{font-size:1.25rem;color:#666;margin-bottom:2rem}.welcome-actions.svelte-4lelu5.svelte-4lelu5{display:flex;gap:1rem;justify-content:center;flex-wrap:wrap}.primary-button.svelte-4lelu5.svelte-4lelu5,.secondary-button.svelte-4lelu5.svelte-4lelu5{padding:1rem 2rem;border-radius:8px;font-size:1.125rem;text-decoration:none;display:inline-block;transition:all 0.2s;cursor:pointer;border:none}.primary-button.svelte-4lelu5.svelte-4lelu5{background:#10b981;color:white}.primary-button.svelte-4lelu5.svelte-4lelu5:hover{background:#059669;transform:translateY(-1px);box-shadow:0 4px 12px rgba(16, 185, 129, 0.2)}.secondary-button.svelte-4lelu5.svelte-4lelu5{background:#f3f4f6;color:#1a1a1a;border:2px solid #e5e7eb}.secondary-button.svelte-4lelu5.svelte-4lelu5:hover{background:#e5e7eb;transform:translateY(-1px)}.ticker-section.svelte-4lelu5.svelte-4lelu5{margin:-2rem -2rem 2rem -2rem}@media(max-width: 768px){.dashboard.svelte-4lelu5.svelte-4lelu5{padding:0 1rem}.dashboard-header.svelte-4lelu5 h1.svelte-4lelu5{font-size:1.5rem}.grid-cols-2.svelte-4lelu5.svelte-4lelu5{grid-template-columns:1fr}.card.svelte-4lelu5.svelte-4lelu5{margin-bottom:1rem}.controls.svelte-4lelu5.svelte-4lelu5{flex-direction:column}.date-range-select.svelte-4lelu5.svelte-4lelu5,.refresh-button.svelte-4lelu5.svelte-4lelu5{width:100%}.ticker-section.svelte-4lelu5.svelte-4lelu5{margin:-1rem -1rem 1rem -1rem}}@media(max-width: 640px){.dashboard-header.svelte-4lelu5.svelte-4lelu5{text-align:center;margin-bottom:1.5rem}.dashboard-header.svelte-4lelu5 h1.svelte-4lelu5{font-size:1.25rem}.dashboard-header.svelte-4lelu5 p.svelte-4lelu5{font-size:0.875rem}h2.svelte-4lelu5.svelte-4lelu5{font-size:1rem;margin-bottom:0.75rem}.welcome-container.svelte-4lelu5 h1.svelte-4lelu5{font-size:2rem}.welcome-container.svelte-4lelu5 p.svelte-4lelu5{font-size:1rem}.welcome-actions.svelte-4lelu5.svelte-4lelu5{flex-direction:column}.primary-button.svelte-4lelu5.svelte-4lelu5,.secondary-button.svelte-4lelu5.svelte-4lelu5{width:100%;padding:0.875rem 1.5rem;font-size:1rem}.controls.svelte-4lelu5.svelte-4lelu5{gap:0.5rem;margin-bottom:1.5rem}.date-range-select.svelte-4lelu5.svelte-4lelu5,.refresh-button.svelte-4lelu5.svelte-4lelu5{padding:0.625rem 1rem}}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { onMount } from \\"svelte\\";\\nimport { goto } from \\"$app/navigation\\";\\nimport { browser } from \\"$app/environment\\";\\nimport MetricCard from \\"$lib/components/MetricCard.svelte\\";\\nimport EquityChart from \\"$lib/components/EquityChart.svelte\\";\\nimport PnLChart from \\"$lib/components/PnLChart.svelte\\";\\nimport TradeList from \\"$lib/components/TradeList.svelte\\";\\nimport PriceTicker from \\"$lib/components/PriceTicker.svelte\\";\\nimport TradeInsights from \\"$lib/components/TradeInsights.svelte\\";\\nimport { tradeStore } from \\"$lib/stores/trades\\";\\nimport { analyticsApi } from \\"$lib/api/analytics\\";\\nimport { tradesApi } from \\"$lib/api/trades\\";\\nimport { billingApi } from \\"$lib/api/billing\\";\\nimport { isAuthenticated } from \\"$lib/api/auth\\";\\nimport { get } from \\"svelte/store\\";\\nimport { logger } from \\"$lib/utils/logger\\";\\nimport LoadingSkeleton from \\"$lib/components/LoadingSkeleton.svelte\\";\\nlet loading = true;\\nlet error = \\"\\";\\nlet usingSampleData = false;\\nlet dateRange = \\"30d\\";\\nlet userPlan = \\"free\\";\\nlet isNewUser = false;\\nlet stats = {\\n  totalPnl: 0,\\n  totalPnlPercent: 0,\\n  winRate: 0,\\n  winRateChange: 0,\\n  totalTrades: 0,\\n  currentStreak: { type: \\"win\\", count: 0 }\\n};\\nlet equityData = [];\\nlet pnlData = [];\\nlet recentTrades = [];\\nfunction generateSampleData() {\\n  const sampleStats = {\\n    totalPnl: 15176.89,\\n    totalPnlPercent: 51.8,\\n    winRate: 64.8,\\n    winRateChange: 0.2,\\n    totalTrades: 245,\\n    currentStreak: { type: \\"win\\", count: 5 }\\n  };\\n  const sampleEquityData = Array.from({ length: 30 }, (_, i) => {\\n    const date = /* @__PURE__ */ new Date();\\n    date.setDate(date.getDate() - 30 + i);\\n    return {\\n      date: date.toISOString().split(\\"T\\")[0],\\n      value: 1e4 + Math.random() * 5e3 + i * 100\\n    };\\n  });\\n  const samplePnlData = Array.from({ length: 14 }, (_, i) => {\\n    const date = /* @__PURE__ */ new Date();\\n    date.setDate(date.getDate() - 14 + i);\\n    return {\\n      date: date.toISOString().split(\\"T\\")[0],\\n      pnl: (Math.random() - 0.45) * 500\\n    };\\n  });\\n  const sampleTrades = [\\n    {\\n      id: 1,\\n      symbol: \\"AAPL\\",\\n      side: \\"long\\",\\n      entryPrice: 185.5,\\n      exitPrice: 187.25,\\n      quantity: 100,\\n      pnl: 175,\\n      entryDate: \\"2024-01-14 09:30\\",\\n      exitDate: \\"2024-01-14 14:45\\"\\n    },\\n    {\\n      id: 2,\\n      symbol: \\"TSLA\\",\\n      side: \\"short\\",\\n      entryPrice: 242.8,\\n      exitPrice: 244.5,\\n      quantity: 50,\\n      pnl: -85,\\n      entryDate: \\"2024-01-14 10:15\\",\\n      exitDate: \\"2024-01-14 15:30\\"\\n    }\\n  ];\\n  return { sampleStats, sampleEquityData, samplePnlData, sampleTrades };\\n}\\nasync function fetchData() {\\n  try {\\n    loading = true;\\n    error = \\"\\";\\n    if (!get(isAuthenticated)) {\\n      logger.log(\\"Not authenticated, redirecting to login\\");\\n      if (browser) {\\n        goto(\\"/login\\");\\n      }\\n      return;\\n    }\\n    logger.log(\\"Fetching analytics data...\\");\\n    try {\\n      const [summaryData, subscription] = await Promise.all([\\n        analyticsApi.getSummary({ period: dateRange }),\\n        billingApi.getSubscription()\\n      ]);\\n      logger.log(\\"Summary data:\\", summaryData);\\n      if (subscription) {\\n        if (subscription.plan_id.includes(\\"enterprise\\")) userPlan = \\"enterprise\\";\\n        else if (subscription.plan_id.includes(\\"pro\\")) userPlan = \\"pro\\";\\n        else userPlan = \\"free\\";\\n      }\\n      stats = {\\n        totalPnl: summaryData.total_pnl || 0,\\n        totalPnlPercent: 0,\\n        // Calculate if needed\\n        winRate: summaryData.overall_win_rate || 0,\\n        winRateChange: 0,\\n        totalTrades: summaryData.total_trades || 0,\\n        currentStreak: { type: \\"win\\", count: 0 }\\n      };\\n      equityData = [];\\n      pnlData = [];\\n    } catch (summaryError) {\\n      logger.error(\\"Failed to fetch summary:\\", summaryError);\\n      throw summaryError;\\n    }\\n    try {\\n      const trades = await tradesApi.getTrades({ limit: 10 });\\n      recentTrades = trades.map((trade) => ({\\n        id: trade.id,\\n        symbol: trade.symbol,\\n        side: trade.side,\\n        entryPrice: trade.entry_price,\\n        exitPrice: trade.exit_price,\\n        quantity: trade.quantity,\\n        pnl: trade.pnl || 0,\\n        entryDate: trade.entry_date,\\n        exitDate: trade.exit_date\\n      }));\\n      tradeStore.setTrades(recentTrades);\\n      usingSampleData = false;\\n    } catch (tradesError) {\\n      logger.error(\\"Failed to fetch trades:\\", tradesError);\\n      recentTrades = [];\\n    }\\n  } catch (err) {\\n    logger.error(\\"Failed to fetch data:\\", err);\\n    if (err.status === 401 && browser) {\\n      goto(\\"/login\\");\\n    } else {\\n      error = \\"Failed to load data. Please try again or check your connection.\\";\\n    }\\n  } finally {\\n    loading = false;\\n  }\\n}\\nonMount(() => {\\n  fetchData();\\n});\\n$: if (dateRange && browser) {\\n  fetchData();\\n}\\n<\/script>\\n\\n<svelte:head>\\n\\t<title>Dashboard - TradeSense</title>\\n</svelte:head>\\n\\n{#if loading}\\n\\t<div class=\\"dashboard-skeleton\\">\\n\\t\\t<div class=\\"page-header\\">\\n\\t\\t\\t<LoadingSkeleton type=\\"text\\" lines={2} width=\\"200px\\" />\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<!-- Metrics Skeleton -->\\n\\t\\t<div class=\\"metrics-grid\\">\\n\\t\\t\\t{#each Array(4) as _}\\n\\t\\t\\t\\t<LoadingSkeleton type=\\"stat\\" />\\n\\t\\t\\t{/each}\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<!-- Charts Skeleton -->\\n\\t\\t<div class=\\"charts-grid\\">\\n\\t\\t\\t<div class=\\"chart-wrapper\\">\\n\\t\\t\\t\\t<LoadingSkeleton type=\\"chart\\" height=\\"300px\\" />\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\"chart-wrapper\\">\\n\\t\\t\\t\\t<LoadingSkeleton type=\\"chart\\" height=\\"300px\\" />\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<!-- Recent Trades Skeleton -->\\n\\t\\t<div class=\\"recent-trades-skeleton\\">\\n\\t\\t\\t<LoadingSkeleton type=\\"text\\" lines={1} width=\\"150px\\" />\\n\\t\\t\\t<div style=\\"margin-top: 1rem\\">\\n\\t\\t\\t\\t<LoadingSkeleton type=\\"card\\" height=\\"80px\\" />\\n\\t\\t\\t\\t<LoadingSkeleton type=\\"card\\" height=\\"80px\\" />\\n\\t\\t\\t\\t<LoadingSkeleton type=\\"card\\" height=\\"80px\\" />\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n{:else if error}\\n\\t<div class=\\"error\\">{error}</div>\\n{:else if stats.totalTrades === 0 && !usingSampleData}\\n\\t<!-- Welcome message for new users -->\\n\\t<div class=\\"dashboard\\">\\n\\t\\t<div class=\\"welcome-container\\">\\n\\t\\t\\t<h1>Welcome to TradeSense! 🎉</h1>\\n\\t\\t\\t<p>Start tracking your trades to see analytics and insights.</p>\\n\\t\\t\\t<div class=\\"welcome-actions\\">\\n\\t\\t\\t\\t<a href=\\"/tradelog\\" class=\\"primary-button\\">Add Your First Trade</a>\\n\\t\\t\\t\\t<button on:click={() => {\\n\\t\\t\\t\\t\\tconst { sampleStats, sampleEquityData, samplePnlData, sampleTrades } = generateSampleData();\\n\\t\\t\\t\\t\\tstats = sampleStats;\\n\\t\\t\\t\\t\\tequityData = sampleEquityData;\\n\\t\\t\\t\\t\\tpnlData = samplePnlData;\\n\\t\\t\\t\\t\\trecentTrades = sampleTrades;\\n\\t\\t\\t\\t\\ttradeStore.setTrades(sampleTrades);\\n\\t\\t\\t\\t\\tisNewUser = true;\\n\\t\\t\\t\\t\\tusingSampleData = true;\\n\\t\\t\\t\\t}} class=\\"secondary-button\\">View Demo Dashboard</button>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n{:else}\\n\\t<div class=\\"dashboard\\">\\n\\t\\t<!-- Price Ticker -->\\n\\t\\t<div class=\\"ticker-section\\">\\n\\t\\t\\t<PriceTicker />\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<header class=\\"dashboard-header\\">\\n\\t\\t\\t<h1>Trading Dashboard</h1>\\n\\t\\t\\t<p>{usingSampleData ? '🎭 Demo Data' : \`Last \${dateRange}\`}</p>\\n\\t\\t</header>\\n\\t\\t\\n\\t\\t{#if usingSampleData}\\n\\t\\t\\t<div class=\\"demo-banner\\">\\n\\t\\t\\t\\t<strong>⚠️ Demo Mode:</strong> You're viewing sample data. \\n\\t\\t\\t\\t<a href=\\"/tradelog\\">Add real trades</a> or <a href=\\"/upload\\">import from CSV</a> to see your actual performance.\\n\\t\\t\\t</div>\\n\\t\\t{/if}\\n\\t\\t\\n\\t\\t<!-- Date Range Selector -->\\n\\t\\t<div class=\\"controls\\">\\n\\t\\t\\t<select bind:value={dateRange} class=\\"date-range-select\\">\\n\\t\\t\\t\\t<option value=\\"7d\\">Last 7 days</option>\\n\\t\\t\\t\\t<option value=\\"30d\\">Last 30 days</option>\\n\\t\\t\\t\\t<option value=\\"90d\\">Last 90 days</option>\\n\\t\\t\\t\\t<option value=\\"1y\\">Last year</option>\\n\\t\\t\\t</select>\\n\\t\\t\\t<button on:click={fetchData} class=\\"refresh-button\\" disabled={loading}>\\n\\t\\t\\t\\t{loading ? 'Loading...' : 'Refresh'}\\n\\t\\t\\t</button>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<!-- Metrics Grid -->\\n\\t\\t<div class=\\"grid grid-cols-4\\">\\n\\t\\t\\t<MetricCard \\n\\t\\t\\t\\ttitle=\\"Total P&L\\" \\n\\t\\t\\t\\tvalue={stats.totalPnl} \\n\\t\\t\\t\\tformat=\\"currency\\"\\n\\t\\t\\t\\ttrend={stats.totalPnlPercent}\\n\\t\\t\\t/>\\n\\t\\t\\t<MetricCard \\n\\t\\t\\t\\ttitle=\\"Win Rate\\" \\n\\t\\t\\t\\tvalue={stats.winRate} \\n\\t\\t\\t\\tformat=\\"percent\\"\\n\\t\\t\\t\\ttrend={stats.winRateChange}\\n\\t\\t\\t/>\\n\\t\\t\\t<MetricCard \\n\\t\\t\\t\\ttitle=\\"Total Trades\\" \\n\\t\\t\\t\\tvalue={stats.totalTrades} \\n\\t\\t\\t\\tformat=\\"number\\"\\n\\t\\t\\t/>\\n\\t\\t\\t<MetricCard \\n\\t\\t\\t\\ttitle=\\"Current Streak\\" \\n\\t\\t\\t\\tvalue={stats.currentStreak.count} \\n\\t\\t\\t\\tformat=\\"streak\\"\\n\\t\\t\\t\\tstreakType={stats.currentStreak.type}\\n\\t\\t\\t/>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<!-- Charts Grid -->\\n\\t\\t<div class=\\"grid grid-cols-2\\">\\n\\t\\t\\t<div class=\\"card\\">\\n\\t\\t\\t\\t<h2>Equity Curve</h2>\\n\\t\\t\\t\\t<EquityChart data={equityData} />\\n\\t\\t\\t</div>\\n\\t\\t\\t<div class=\\"card\\">\\n\\t\\t\\t\\t<h2>Daily P&L</h2>\\n\\t\\t\\t\\t<PnLChart data={pnlData} />\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t\\n\\t\\t<!-- AI Insights -->\\n\\t\\t<TradeInsights trades={recentTrades} {userPlan} />\\n\\t\\t\\n\\t\\t<!-- Recent Trades -->\\n\\t\\t<div class=\\"card\\">\\n\\t\\t\\t<h2>Recent Trades</h2>\\n\\t\\t\\t<TradeList trades={recentTrades} />\\n\\t\\t</div>\\n\\t</div>\\n{/if}\\n\\n<style>\\n\\t.dashboard {\\n\\t\\tmax-width: 1200px;\\n\\t\\tmargin: 0 auto;\\n\\t}\\n\\t\\n\\t.dashboard-skeleton {\\n\\t\\tmax-width: 1200px;\\n\\t\\tmargin: 0 auto;\\n\\t}\\n\\t\\n\\t.dashboard-skeleton .page-header {\\n\\t\\tmargin-bottom: 2rem;\\n\\t}\\n\\t\\n\\t.dashboard-skeleton .metrics-grid,\\n\\t.metrics-grid {\\n\\t\\tdisplay: grid;\\n\\t\\tgrid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\\n\\t\\tgap: 1.5rem;\\n\\t\\tmargin-bottom: 2rem;\\n\\t}\\n\\t\\n\\t.dashboard-skeleton .charts-grid,\\n\\t.charts-grid {\\n\\t\\tdisplay: grid;\\n\\t\\tgrid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\\n\\t\\tgap: 1.5rem;\\n\\t\\tmargin-bottom: 2rem;\\n\\t}\\n\\t\\n\\t.chart-wrapper {\\n\\t\\tbackground: white;\\n\\t\\tborder-radius: 8px;\\n\\t\\toverflow: hidden;\\n\\t}\\n\\t\\n\\t.recent-trades-skeleton {\\n\\t\\tmargin-top: 2rem;\\n\\t}\\n\\t\\n\\t.dashboard-header {\\n\\t\\tmargin-bottom: 2rem;\\n\\t}\\n\\t\\n\\t.dashboard-header h1 {\\n\\t\\tfont-size: 2rem;\\n\\t\\tmargin-bottom: 0.5rem;\\n\\t}\\n\\t\\n\\t.dashboard-header p {\\n\\t\\tcolor: #666;\\n\\t}\\n\\t\\n\\t.demo-banner {\\n\\t\\tbackground: #fef3c7;\\n\\t\\tborder: 1px solid #f59e0b;\\n\\t\\tcolor: #92400e;\\n\\t\\tpadding: 1rem;\\n\\t\\tborder-radius: 8px;\\n\\t\\tmargin-bottom: 2rem;\\n\\t\\ttext-align: center;\\n\\t\\tfont-size: 0.875rem;\\n\\t}\\n\\t\\n\\t.demo-banner a {\\n\\t\\tcolor: #dc2626;\\n\\t\\ttext-decoration: underline;\\n\\t\\tmargin: 0 0.25rem;\\n\\t}\\n\\t\\n\\th2 {\\n\\t\\tfont-size: 1.25rem;\\n\\t\\tmargin-bottom: 1rem;\\n\\t\\tcolor: #333;\\n\\t}\\n\\t\\n\\t.controls {\\n\\t\\tdisplay: flex;\\n\\t\\tgap: 1rem;\\n\\t\\tmargin-bottom: 2rem;\\n\\t}\\n\\t\\n\\t.date-range-select {\\n\\t\\tpadding: 0.5rem 1rem;\\n\\t\\tborder: 1px solid #e0e0e0;\\n\\t\\tborder-radius: 6px;\\n\\t\\tbackground: white;\\n\\t\\tfont-size: 0.875rem;\\n\\t}\\n\\t\\n\\t.refresh-button {\\n\\t\\tpadding: 0.5rem 1rem;\\n\\t\\tbackground: #10b981;\\n\\t\\tcolor: white;\\n\\t\\tborder: none;\\n\\t\\tborder-radius: 6px;\\n\\t\\tfont-size: 0.875rem;\\n\\t\\tcursor: pointer;\\n\\t\\ttransition: background 0.2s;\\n\\t}\\n\\t\\n\\t.refresh-button:hover:not(:disabled) {\\n\\t\\tbackground: #059669;\\n\\t}\\n\\t\\n\\t.refresh-button:disabled {\\n\\t\\topacity: 0.6;\\n\\t\\tcursor: not-allowed;\\n\\t}\\n\\t\\n\\t.welcome-container {\\n\\t\\ttext-align: center;\\n\\t\\tpadding: 4rem 2rem;\\n\\t\\tmax-width: 600px;\\n\\t\\tmargin: 0 auto;\\n\\t}\\n\\t\\n\\t.welcome-container h1 {\\n\\t\\tfont-size: 2.5rem;\\n\\t\\tmargin-bottom: 1rem;\\n\\t\\tcolor: #1a1a1a;\\n\\t}\\n\\t\\n\\t.welcome-container p {\\n\\t\\tfont-size: 1.25rem;\\n\\t\\tcolor: #666;\\n\\t\\tmargin-bottom: 2rem;\\n\\t}\\n\\t\\n\\t.welcome-actions {\\n\\t\\tdisplay: flex;\\n\\t\\tgap: 1rem;\\n\\t\\tjustify-content: center;\\n\\t\\tflex-wrap: wrap;\\n\\t}\\n\\t\\n\\t.primary-button, .secondary-button {\\n\\t\\tpadding: 1rem 2rem;\\n\\t\\tborder-radius: 8px;\\n\\t\\tfont-size: 1.125rem;\\n\\t\\ttext-decoration: none;\\n\\t\\tdisplay: inline-block;\\n\\t\\ttransition: all 0.2s;\\n\\t\\tcursor: pointer;\\n\\t\\tborder: none;\\n\\t}\\n\\t\\n\\t.primary-button {\\n\\t\\tbackground: #10b981;\\n\\t\\tcolor: white;\\n\\t}\\n\\t\\n\\t.primary-button:hover {\\n\\t\\tbackground: #059669;\\n\\t\\ttransform: translateY(-1px);\\n\\t\\tbox-shadow: 0 4px 12px rgba(16, 185, 129, 0.2);\\n\\t}\\n\\t\\n\\t.secondary-button {\\n\\t\\tbackground: #f3f4f6;\\n\\t\\tcolor: #1a1a1a;\\n\\t\\tborder: 2px solid #e5e7eb;\\n\\t}\\n\\t\\n\\t.secondary-button:hover {\\n\\t\\tbackground: #e5e7eb;\\n\\t\\ttransform: translateY(-1px);\\n\\t}\\n\\t\\n\\t.ticker-section {\\n\\t\\tmargin: -2rem -2rem 2rem -2rem;\\n\\t}\\n\\t\\n\\t/* Mobile Styles */\\n\\t@media (max-width: 768px) {\\n\\t\\t.dashboard {\\n\\t\\t\\tpadding: 0 1rem;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.dashboard-header h1 {\\n\\t\\t\\tfont-size: 1.5rem;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.grid-cols-2 {\\n\\t\\t\\tgrid-template-columns: 1fr;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.card {\\n\\t\\t\\tmargin-bottom: 1rem;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.controls {\\n\\t\\t\\tflex-direction: column;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.date-range-select,\\n\\t\\t.refresh-button {\\n\\t\\t\\twidth: 100%;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.ticker-section {\\n\\t\\t\\tmargin: -1rem -1rem 1rem -1rem;\\n\\t\\t}\\n\\t}\\n\\t\\n\\t@media (max-width: 640px) {\\n\\t\\t.dashboard-header {\\n\\t\\t\\ttext-align: center;\\n\\t\\t\\tmargin-bottom: 1.5rem;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.dashboard-header h1 {\\n\\t\\t\\tfont-size: 1.25rem;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.dashboard-header p {\\n\\t\\t\\tfont-size: 0.875rem;\\n\\t\\t}\\n\\t\\t\\n\\t\\th2 {\\n\\t\\t\\tfont-size: 1rem;\\n\\t\\t\\tmargin-bottom: 0.75rem;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.welcome-container h1 {\\n\\t\\t\\tfont-size: 2rem;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.welcome-container p {\\n\\t\\t\\tfont-size: 1rem;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.welcome-actions {\\n\\t\\t\\tflex-direction: column;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.primary-button,\\n\\t\\t.secondary-button {\\n\\t\\t\\twidth: 100%;\\n\\t\\t\\tpadding: 0.875rem 1.5rem;\\n\\t\\t\\tfont-size: 1rem;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.controls {\\n\\t\\t\\tgap: 0.5rem;\\n\\t\\t\\tmargin-bottom: 1.5rem;\\n\\t\\t}\\n\\t\\t\\n\\t\\t.date-range-select,\\n\\t\\t.refresh-button {\\n\\t\\t\\tpadding: 0.625rem 1rem;\\n\\t\\t}\\n\\t}\\n</style>"],"names":[],"mappings":"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"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css);
  return `${$$result.head += `<!-- HEAD_svelte-12ut74h_START -->${$$result.title = `<title>Dashboard - TradeSense</title>`, ""}<!-- HEAD_svelte-12ut74h_END -->`, ""} ${`<div class="dashboard-skeleton svelte-4lelu5"><div class="page-header svelte-4lelu5">${validate_component(LoadingSkeleton, "LoadingSkeleton").$$render($$result, { type: "text", lines: 2, width: "200px" }, {}, {})}</div>  <div class="metrics-grid svelte-4lelu5">${each(Array(4), (_) => {
    return `${validate_component(LoadingSkeleton, "LoadingSkeleton").$$render($$result, { type: "stat" }, {}, {})}`;
  })}</div>  <div class="charts-grid svelte-4lelu5"><div class="chart-wrapper svelte-4lelu5">${validate_component(LoadingSkeleton, "LoadingSkeleton").$$render($$result, { type: "chart", height: "300px" }, {}, {})}</div> <div class="chart-wrapper svelte-4lelu5">${validate_component(LoadingSkeleton, "LoadingSkeleton").$$render($$result, { type: "chart", height: "300px" }, {}, {})}</div></div>  <div class="recent-trades-skeleton svelte-4lelu5">${validate_component(LoadingSkeleton, "LoadingSkeleton").$$render($$result, { type: "text", lines: 1, width: "150px" }, {}, {})} <div style="margin-top: 1rem">${validate_component(LoadingSkeleton, "LoadingSkeleton").$$render($$result, { type: "card", height: "80px" }, {}, {})} ${validate_component(LoadingSkeleton, "LoadingSkeleton").$$render($$result, { type: "card", height: "80px" }, {}, {})} ${validate_component(LoadingSkeleton, "LoadingSkeleton").$$render($$result, { type: "card", height: "80px" }, {}, {})}</div></div></div>`}`;
});
export {
  Page as default
};
