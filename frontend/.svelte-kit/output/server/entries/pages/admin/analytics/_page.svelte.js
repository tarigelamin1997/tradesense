import { c as create_ssr_component, e as each, b as escape, v as validate_component } from "../../../../chunks/ssr.js";
import { D as Download } from "../../../../chunks/download.js";
const css = {
  code: "@keyframes svelte-y511no-pulse{0%,100%{opacity:1}50%{opacity:0.5}}.animate-pulse.svelte-y511no{animation:svelte-y511no-pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite}",
  map: `{"version":3,"file":"SkeletonLoader.svelte","sources":["SkeletonLoader.svelte"],"sourcesContent":["<script lang=\\"ts\\">\\"use strict\\";\\nexport let type = \\"text\\";\\nexport let lines = 3;\\nexport let width = \\"100%\\";\\nexport let height = \\"auto\\";\\nexport let rounded = true;\\n<\/script>\\n\\n{#if type === 'text'}\\n\\t<div class=\\"space-y-2\\" style=\\"width: {width}\\">\\n\\t\\t{#each Array(lines) as _, i}\\n\\t\\t\\t<div\\n\\t\\t\\t\\tclass=\\"h-4 bg-gray-200 dark:bg-gray-700 animate-pulse {rounded ? 'rounded' : ''}\\"\\n\\t\\t\\t\\tstyle=\\"width: {i === lines - 1 ? '60%' : '100%'}\\"\\n\\t\\t\\t/>\\n\\t\\t{/each}\\n\\t</div>\\n{:else if type === 'title'}\\n\\t<div class=\\"space-y-2\\" style=\\"width: {width}\\">\\n\\t\\t<div class=\\"h-8 bg-gray-200 dark:bg-gray-700 animate-pulse {rounded ? 'rounded' : ''} w-3/4\\" />\\n\\t\\t<div class=\\"h-4 bg-gray-200 dark:bg-gray-700 animate-pulse {rounded ? 'rounded' : ''} w-1/2\\" />\\n\\t</div>\\n{:else if type === 'card'}\\n\\t<div\\n\\t\\tclass=\\"bg-white dark:bg-gray-800 {rounded ? 'rounded-lg' : ''} p-6 shadow-sm border border-gray-200 dark:border-gray-700\\"\\n\\t\\tstyle=\\"width: {width}; height: {height}\\"\\n\\t>\\n\\t\\t<div class=\\"space-y-4\\">\\n\\t\\t\\t<div class=\\"h-6 bg-gray-200 dark:bg-gray-700 animate-pulse rounded w-3/4\\" />\\n\\t\\t\\t<div class=\\"space-y-2\\">\\n\\t\\t\\t\\t<div class=\\"h-4 bg-gray-200 dark:bg-gray-700 animate-pulse rounded\\" />\\n\\t\\t\\t\\t<div class=\\"h-4 bg-gray-200 dark:bg-gray-700 animate-pulse rounded\\" />\\n\\t\\t\\t\\t<div class=\\"h-4 bg-gray-200 dark:bg-gray-700 animate-pulse rounded w-5/6\\" />\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n{:else if type === 'table'}\\n\\t<div class=\\"overflow-hidden {rounded ? 'rounded-lg' : ''}\\" style=\\"width: {width}\\">\\n\\t\\t<div class=\\"bg-gray-100 dark:bg-gray-800 p-4\\">\\n\\t\\t\\t<div class=\\"grid grid-cols-4 gap-4\\">\\n\\t\\t\\t\\t{#each Array(4) as _}\\n\\t\\t\\t\\t\\t<div class=\\"h-4 bg-gray-200 dark:bg-gray-700 animate-pulse rounded\\" />\\n\\t\\t\\t\\t{/each}\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\"bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700\\">\\n\\t\\t\\t{#each Array(lines) as _}\\n\\t\\t\\t\\t<div class=\\"p-4\\">\\n\\t\\t\\t\\t\\t<div class=\\"grid grid-cols-4 gap-4\\">\\n\\t\\t\\t\\t\\t\\t{#each Array(4) as _}\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\"h-4 bg-gray-200 dark:bg-gray-700 animate-pulse rounded\\" />\\n\\t\\t\\t\\t\\t\\t{/each}\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t{/each}\\n\\t\\t</div>\\n\\t</div>\\n{:else if type === 'chart'}\\n\\t<div\\n\\t\\tclass=\\"bg-white dark:bg-gray-800 {rounded ? 'rounded-lg' : ''} p-6\\"\\n\\t\\tstyle=\\"width: {width}; height: {height || '300px'}\\"\\n\\t>\\n\\t\\t<div class=\\"h-6 bg-gray-200 dark:bg-gray-700 animate-pulse rounded w-1/3 mb-4\\" />\\n\\t\\t<div class=\\"relative h-full\\">\\n\\t\\t\\t<div class=\\"absolute bottom-0 left-0 right-0 flex items-end justify-between h-4/5 gap-2\\">\\n\\t\\t\\t\\t{#each Array(12) as _}\\n\\t\\t\\t\\t\\t<div\\n\\t\\t\\t\\t\\t\\tclass=\\"bg-gray-200 dark:bg-gray-700 animate-pulse rounded-t flex-1\\"\\n\\t\\t\\t\\t\\t\\tstyle=\\"height: {Math.random() * 80 + 20}%\\"\\n\\t\\t\\t\\t\\t/>\\n\\t\\t\\t\\t{/each}\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t</div>\\n{:else if type === 'custom'}\\n\\t<div\\n\\t\\tclass=\\"bg-gray-200 dark:bg-gray-700 animate-pulse {rounded ? 'rounded' : ''}\\"\\n\\t\\tstyle=\\"width: {width}; height: {height}\\"\\n\\t/>\\n{/if}\\n\\n<style>\\n\\t@keyframes pulse {\\n\\t\\t0%, 100% {\\n\\t\\t\\topacity: 1;\\n\\t\\t}\\n\\t\\t50% {\\n\\t\\t\\topacity: 0.5;\\n\\t\\t}\\n\\t}\\n\\n\\t.animate-pulse {\\n\\t\\tanimation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;\\n\\t}\\n</style>"],"names":[],"mappings":"AAkFC,WAAW,mBAAM,CAChB,EAAE,CAAE,IAAK,CACR,OAAO,CAAE,CACV,CACA,GAAI,CACH,OAAO,CAAE,GACV,CACD,CAEA,4BAAe,CACd,SAAS,CAAE,mBAAK,CAAC,EAAE,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,QAClD"}`
};
const SkeletonLoader = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { type = "text" } = $$props;
  let { lines = 3 } = $$props;
  let { width = "100%" } = $$props;
  let { height = "auto" } = $$props;
  let { rounded = true } = $$props;
  if ($$props.type === void 0 && $$bindings.type && type !== void 0) $$bindings.type(type);
  if ($$props.lines === void 0 && $$bindings.lines && lines !== void 0) $$bindings.lines(lines);
  if ($$props.width === void 0 && $$bindings.width && width !== void 0) $$bindings.width(width);
  if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
  if ($$props.rounded === void 0 && $$bindings.rounded && rounded !== void 0) $$bindings.rounded(rounded);
  $$result.css.add(css);
  return `${type === "text" ? `<div class="space-y-2" style="${"width: " + escape(width, true)}">${each(Array(lines), (_, i) => {
    return `<div class="${"h-4 bg-gray-200 dark:bg-gray-700 animate-pulse " + escape(rounded ? "rounded" : "", true) + " svelte-y511no"}" style="${"width: " + escape(i === lines - 1 ? "60%" : "100%", true)}"></div>`;
  })}</div>` : `${type === "title" ? `<div class="space-y-2" style="${"width: " + escape(width, true)}"><div class="${"h-8 bg-gray-200 dark:bg-gray-700 animate-pulse " + escape(rounded ? "rounded" : "", true) + " w-3/4 svelte-y511no"}"></div> <div class="${"h-4 bg-gray-200 dark:bg-gray-700 animate-pulse " + escape(rounded ? "rounded" : "", true) + " w-1/2 svelte-y511no"}"></div></div>` : `${type === "card" ? `<div class="${"bg-white dark:bg-gray-800 " + escape(rounded ? "rounded-lg" : "", true) + " p-6 shadow-sm border border-gray-200 dark:border-gray-700"}" style="${"width: " + escape(width, true) + "; height: " + escape(height, true)}"><div class="space-y-4" data-svelte-h="svelte-9237hm"><div class="h-6 bg-gray-200 dark:bg-gray-700 animate-pulse rounded w-3/4 svelte-y511no"></div> <div class="space-y-2"><div class="h-4 bg-gray-200 dark:bg-gray-700 animate-pulse rounded svelte-y511no"></div> <div class="h-4 bg-gray-200 dark:bg-gray-700 animate-pulse rounded svelte-y511no"></div> <div class="h-4 bg-gray-200 dark:bg-gray-700 animate-pulse rounded w-5/6 svelte-y511no"></div></div></div></div>` : `${type === "table" ? `<div class="${"overflow-hidden " + escape(rounded ? "rounded-lg" : "", true)}" style="${"width: " + escape(width, true)}"><div class="bg-gray-100 dark:bg-gray-800 p-4"><div class="grid grid-cols-4 gap-4">${each(Array(4), (_) => {
    return `<div class="h-4 bg-gray-200 dark:bg-gray-700 animate-pulse rounded svelte-y511no"></div>`;
  })}</div></div> <div class="bg-white dark:bg-gray-900 divide-y divide-gray-200 dark:divide-gray-700">${each(Array(lines), (_) => {
    return `<div class="p-4"><div class="grid grid-cols-4 gap-4">${each(Array(4), (_2) => {
      return `<div class="h-4 bg-gray-200 dark:bg-gray-700 animate-pulse rounded svelte-y511no"></div>`;
    })}</div> </div>`;
  })}</div></div>` : `${type === "chart" ? `<div class="${"bg-white dark:bg-gray-800 " + escape(rounded ? "rounded-lg" : "", true) + " p-6"}" style="${"width: " + escape(width, true) + "; height: " + escape(height || "300px", true)}"><div class="h-6 bg-gray-200 dark:bg-gray-700 animate-pulse rounded w-1/3 mb-4 svelte-y511no"></div> <div class="relative h-full"><div class="absolute bottom-0 left-0 right-0 flex items-end justify-between h-4/5 gap-2">${each(Array(12), (_) => {
    return `<div class="bg-gray-200 dark:bg-gray-700 animate-pulse rounded-t flex-1 svelte-y511no" style="${"height: " + escape(Math.random() * 80 + 20, true) + "%"}"></div>`;
  })}</div></div></div>` : `${type === "custom" ? `<div class="${"bg-gray-200 dark:bg-gray-700 animate-pulse " + escape(rounded ? "rounded" : "", true) + " svelte-y511no"}" style="${"width: " + escape(width, true) + "; height: " + escape(height, true)}"></div>` : ``}`}`}`}`}`}`;
});
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${$$result.head += `<!-- HEAD_svelte-67d7lg_START -->${$$result.title = `<title>Analytics - Admin Dashboard</title>`, ""}<!-- HEAD_svelte-67d7lg_END -->`, ""} <div class="min-h-screen bg-gray-50 dark:bg-gray-900"> <div class="bg-white dark:bg-gray-800 shadow-sm"><div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6"><div class="flex items-center justify-between"><div data-svelte-h="svelte-1q8bred"><h1 class="text-2xl font-bold text-gray-900 dark:text-white">Platform Analytics</h1> <p class="text-gray-600 dark:text-gray-400 mt-1">Monitor platform performance and user metrics</p></div> <div class="flex items-center gap-4"><select class="px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-800 text-gray-900 dark:text-white"><option value="24h" data-svelte-h="svelte-31fr4n">Last 24 hours</option><option value="7d" data-svelte-h="svelte-vz7f6l">Last 7 days</option><option value="30d" data-svelte-h="svelte-1q74rhz">Last 30 days</option><option value="90d" data-svelte-h="svelte-11iy2bn">Last 90 days</option></select> <button class="flex items-center gap-2 px-4 py-2 bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors">${validate_component(Download, "Download").$$render($$result, { class: "h-4 w-4" }, {}, {})}
						Export</button></div></div></div></div>  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">${` <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">${each(Array(4), (_) => {
    return `${validate_component(SkeletonLoader, "SkeletonLoader").$$render($$result, { type: "card", height: "140px" }, {}, {})}`;
  })}</div> <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">${validate_component(SkeletonLoader, "SkeletonLoader").$$render($$result, { type: "chart", height: "400px" }, {}, {})} ${validate_component(SkeletonLoader, "SkeletonLoader").$$render($$result, { type: "chart", height: "400px" }, {}, {})}</div>`}</div></div>`;
});
export {
  Page as default
};
