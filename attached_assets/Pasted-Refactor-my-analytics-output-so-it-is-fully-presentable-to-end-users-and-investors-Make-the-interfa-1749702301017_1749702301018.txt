Refactor my analytics output so it is fully presentable to end users and investors. Make the interface clean, professional, and user-friendly, while keeping technical logs for developer review only.

Detailed Requirements:

1. User Interface Presentation

Display only final, human-friendly KPIs in the app dashboard.

Use Streamlit KPI cards, metric widgets, or a summary table.

Format numbers with two decimals and thousand separators where relevant (e.g. $1,915.00).

All percentages should show “%” and be rounded to one decimal (e.g. 80.0%).

Currency metrics should show a dollar sign (or parameterized currency).

2. Hide Debug and Development Logs

Do not show dtype, shape, sample data, or any developer-only prints in the main UI.

Only end-user metrics, with friendly labels and professional formatting, should appear on screen.

3. Logging for Developers

Redirect all detailed diagnostic logs (dtypes, shapes, row samples, intermediate calculations, tracebacks) to a dedicated logfile (analytics.log).

Use Python’s logging library, set to INFO or DEBUG level, to capture these logs.

Do not display these logs in Streamlit or user-facing output.

4. App Code Organization

Separate all UI display code from backend analytics and logging.

The backend should only return the cleaned, formatted KPIs for UI display.

The UI layer should handle all user-facing rendering and formatting.

5. Example UI Output (as cards or a table):

KPI	Value
Total Trades	10
Win Rate	80.0%
Avg. Risk/Reward	0.82
Net PnL (after fees)	$1,915.00
Gross PnL	$1,950.00
Total Commission	$35.00
Max Win	$750.00
Max Loss	-$500.00

Or as Streamlit metric cards (one per KPI).

6. Output Formatting Details

Round all float numbers to two decimals.

Use commas for thousands (e.g., 2,350.50).

Prepend currency symbols as appropriate.

Show percent signs for win rate and similar metrics.

7. Validation and Error Handling

If any metric cannot be calculated (e.g., no data), display a clear message or a “–” symbol, not an error or a traceback.

Do not crash if a value is missing—always present a stable, user-ready UI.

Deliverables:

Clean, user-ready KPI output in the dashboard (cards/table), with no dev logs in UI.

Developer logs written to analytics.log (not displayed in Streamlit).

Code separated between analytics (backend), UI, and logging.
