server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Docker containers logs
  - job_name: containers
    static_configs:
      - targets:
          - localhost
        labels:
          job: containers
          __path__: /var/lib/docker/containers/*/*log

    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            attrs:
      - json:
          expressions:
            tag:
          source: attrs
      - regex:
          expression: '^(?P<container_name>/?(?:[^/]+/)?)(?P<image_name>(?:[^:]+))?(?::(?P<image_tag>[^:]+))?$'
          source: tag
      - timestamp:
          format: RFC3339Nano
          source: time
      - labels:
          stream:
          container_name:
          image_name:
          image_tag:
      - output:
          source: output

  # Application logs
  - job_name: tradesense
    static_configs:
      - targets:
          - localhost
        labels:
          job: tradesense
          __path__: /var/log/tradesense/*.log
    
    pipeline_stages:
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2}'
          max_wait_time: 3s
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}) - (?P<level>\w+) - (?P<module>[\w.]+) - (?P<message>.*)'
      - labels:
          level:
          module:
      - timestamp:
          format: '2006-01-02 15:04:05,000'
          source: timestamp

  # Nginx access logs
  - job_name: nginx
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx_access
          __path__: /var/log/nginx/access.log
    
    pipeline_stages:
      - regex:
          expression: '^(?P<remote_addr>[\w.]+) - (?P<remote_user>[\w-]+) \[(?P<time_local>[^\]]+)\] "(?P<request>[^"]+)" (?P<status>\d+) (?P<body_bytes_sent>\d+) "(?P<http_referer>[^"]+)" "(?P<http_user_agent>[^"]+)"'
      - labels:
          status:
      - metrics:
          http_nginx_response_bytes_total:
            type: Counter
            description: "Total bytes sent"
            source: body_bytes_sent
            config:
              action: add
          http_nginx_request_duration_seconds:
            type: Histogram
            description: "Request duration"
            source: request_time
            config:
              buckets: [0.001, 0.01, 0.1, 0.5, 1.0, 5.0, 10.0]

  # PostgreSQL logs
  - job_name: postgres
    static_configs:
      - targets:
          - localhost
        labels:
          job: postgres
          __path__: /var/log/postgresql/*.log
    
    pipeline_stages:
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2}'
          max_wait_time: 3s
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3} \w+) \[(?P<process_id>\d+)\] (?P<level>\w+):  (?P<message>.*)'
      - labels:
          level:
      - timestamp:
          format: '2006-01-02 15:04:05.000 MST'
          source: timestamp

  # System logs
  - job_name: system
    static_configs:
      - targets:
          - localhost
        labels:
          job: varlogs
          __path__: /var/log/*.log
    
    pipeline_stages:
      - match:
          selector: '{filename="/var/log/auth.log"}'
          stages:
            - regex:
                expression: '^(?P<timestamp>\w+ \d+ \d{2}:\d{2}:\d{2}) (?P<hostname>\S+) (?P<service>\S+?)(\[(?P<pid>\d+)\])?: (?P<message>.*)'
            - labels:
                service:
                hostname:

  # Journal logs
  - job_name: journal
    journal:
      max_age: 12h
      labels:
        job: systemd-journal
    relabel_configs:
      - source_labels: ['__journal__systemd_unit']
        target_label: 'unit'
      - source_labels: ['__journal__hostname']
        target_label: 'hostname'