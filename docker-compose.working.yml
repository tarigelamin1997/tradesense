version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: tradesense
      POSTGRES_PASSWORD: tradesense
      POSTGRES_DB: tradesense
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tradesense"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data

  backend:
    build:
      context: ./src/backend
      dockerfile: |
        FROM python:3.11-slim
        WORKDIR /app
        RUN apt-get update && apt-get install -y build-essential && rm -rf /var/lib/apt/lists/*
        COPY requirements.txt .
        RUN pip install --no-cache-dir -r requirements.txt
        RUN pip install --no-cache-dir uvicorn fastapi sqlalchemy psycopg2-binary python-jose passlib python-multipart pydantic-settings scikit-learn
        COPY . .
        CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    environment:
      DATABASE_URL: postgresql://tradesense:tradesense@postgres:5432/tradesense
      REDIS_URL: redis://redis:6379
      SECRET_KEY: your-secret-key-here
      DEBUG: "true"
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./src/backend:/app

  frontend:
    image: node:18-alpine
    working_dir: /app
    environment:
      PUBLIC_API_URL: http://localhost:8000
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data: