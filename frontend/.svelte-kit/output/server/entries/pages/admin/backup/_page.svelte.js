import { c as create_ssr_component, v as validate_component } from "../../../../chunks/ssr.js";
import "../../../../chunks/client.js";
import { I as Icon } from "../../../../chunks/Icon.js";
const css = {
  code: ".spinner.svelte-tinobq{width:2rem;height:2rem;border-width:4px;border-color:#c7d2fe;border-top-color:#4f46e5;border-radius:9999px;animation:svelte-tinobq-spin 1s linear infinite}@keyframes svelte-tinobq-spin{from{transform:rotate(0deg)}to{transform:rotate(360deg)}}.btn.svelte-tinobq{padding:0.5rem 1rem;border-radius:0.375rem;font-weight:500;transition:background-color 0.2s, color 0.2s;display:inline-flex;align-items:center;justify-content:center}.btn-primary.svelte-tinobq{background-color:#4f46e5;color:white}.btn-primary.svelte-tinobq:hover{background-color:#4338ca}.btn-secondary.svelte-tinobq{background-color:#e5e7eb;color:#1f2937}.btn-secondary.svelte-tinobq:hover{background-color:#d1d5db}.btn-sm.svelte-tinobq{padding:0.375rem 0.75rem;font-size:0.875rem}.alert.svelte-tinobq{padding:1rem;border-radius:0.375rem}.alert-error.svelte-tinobq{background-color:#fef2f2;color:#991b1b;border:1px solid #fecaca}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n    import { onMount } from 'svelte';\\n    import { api } from '$lib/api/client-safe';\\n    import Icon from '$lib/components/Icon.svelte';\\n    import BackupScheduleModal from '$lib/components/admin/BackupScheduleModal.svelte';\\n    import RestoreModal from '$lib/components/admin/RestoreModal.svelte';\\n    \\n    let backups = [];\\n    let schedules = [];\\n    let stats = [];\\n    let dashboard = { recent_backups: [], upcoming_backups: [] };\\n    let loading = true;\\n    let error = null;\\n    let activeTab = 'backups';\\n    let showScheduleModal = false;\\n    let showRestoreModal = false;\\n    let selectedBackup = null;\\n    \\n    const statusColors = {\\n        pending: 'yellow',\\n        running: 'blue',\\n        completed: 'green',\\n        failed: 'red',\\n        cancelled: 'gray'\\n    };\\n    \\n    const backupTypes = {\\n        database: { icon: 'database', color: 'blue' },\\n        files: { icon: 'folder', color: 'green' },\\n        full: { icon: 'package', color: 'purple' }\\n    };\\n    \\n    async function loadData() {\\n        try {\\n            loading = true;\\n            error = null;\\n            \\n            // Load based on active tab\\n            if (activeTab === 'backups') {\\n                backups = await api.get('/backup/list');\\n            } else if (activeTab === 'schedules') {\\n                schedules = await api.get('/backup/schedules/list');\\n            } else if (activeTab === 'stats') {\\n                stats = await api.get('/backup/stats/overview');\\n                dashboard = await api.get('/backup/status/dashboard');\\n            }\\n            \\n        } catch (err) {\\n            error = err.message || 'Failed to load backup data';\\n        } finally {\\n            loading = false;\\n        }\\n    }\\n    \\n    async function createBackup(type) {\\n        if (!confirm(\`Create a \${type} backup now?\`)) return;\\n        \\n        try {\\n            const result = await api.post('/backup/create', {\\n                backup_type: type,\\n                destination: 'local',\\n                compress: true\\n            });\\n            \\n            alert(result.message);\\n            await loadData();\\n            \\n        } catch (err) {\\n            alert(err.message || 'Failed to create backup');\\n        }\\n    }\\n    \\n    async function verifyBackup(backupId) {\\n        try {\\n            const result = await api.post(\`/backup/\${backupId}/verify\`);\\n            \\n            if (result.status === 'passed') {\\n                alert('Backup verification passed!');\\n            } else {\\n                alert(\`Backup verification failed: \${JSON.stringify(result.checks)}\`);\\n            }\\n            \\n        } catch (err) {\\n            alert(err.message || 'Failed to verify backup');\\n        }\\n    }\\n    \\n    async function cleanupBackups() {\\n        if (!confirm('Clean up old backups according to retention policy?')) return;\\n        \\n        try {\\n            const result = await api.delete('/backup/cleanup');\\n            alert(\`Cleanup completed. Deleted \${result.deleted.local} local and \${result.deleted.remote} remote backups.\`);\\n            await loadData();\\n            \\n        } catch (err) {\\n            alert(err.message || 'Failed to cleanup backups');\\n        }\\n    }\\n    \\n    async function createSchedule(schedule) {\\n        try {\\n            await api.post('/backup/schedules/create', schedule);\\n            showScheduleModal = false;\\n            await loadData();\\n        } catch (err) {\\n            throw new Error(err.message || 'Failed to create schedule');\\n        }\\n    }\\n    \\n    async function toggleSchedule(scheduleId, isActive) {\\n        try {\\n            await api.put(\`/backup/schedules/\${scheduleId}\`, {\\n                is_active: !isActive\\n            });\\n            await loadData();\\n        } catch (err) {\\n            alert(err.message || 'Failed to update schedule');\\n        }\\n    }\\n    \\n    async function deleteSchedule(scheduleId) {\\n        if (!confirm('Delete this backup schedule?')) return;\\n        \\n        try {\\n            await api.delete(\`/backup/schedules/\${scheduleId}\`);\\n            await loadData();\\n        } catch (err) {\\n            alert(err.message || 'Failed to delete schedule');\\n        }\\n    }\\n    \\n    function formatBytes(bytes) {\\n        if (!bytes) return '0 B';\\n        const k = 1024;\\n        const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\\n    }\\n    \\n    function formatDuration(seconds) {\\n        if (!seconds) return '0s';\\n        if (seconds < 60) return \`\${Math.round(seconds)}s\`;\\n        if (seconds < 3600) return \`\${Math.round(seconds / 60)}m\`;\\n        return \`\${(seconds / 3600).toFixed(1)}h\`;\\n    }\\n    \\n    onMount(() => {\\n        loadData();\\n        \\n        // Refresh every 30 seconds\\n        const interval = setInterval(loadData, 30000);\\n        return () => clearInterval(interval);\\n    });\\n<\/script>\\n\\n<div class=\\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\\">\\n    <!-- Header -->\\n    <div class=\\"mb-8\\">\\n        <div class=\\"flex justify-between items-center\\">\\n            <div>\\n                <h1 class=\\"text-3xl font-bold text-gray-900\\">Backup Management</h1>\\n                <p class=\\"mt-2 text-gray-600\\">Manage system backups and recovery</p>\\n            </div>\\n            <div class=\\"flex space-x-2\\">\\n                <button\\n                    on:click={() => createBackup('database')}\\n                    class=\\"btn btn-secondary\\"\\n                >\\n                    <Icon name=\\"database\\" class=\\"w-5 h-5 mr-2\\" />\\n                    Backup Database\\n                </button>\\n                <button\\n                    on:click={() => createBackup('full')}\\n                    class=\\"btn btn-primary\\"\\n                >\\n                    <Icon name=\\"package\\" class=\\"w-5 h-5 mr-2\\" />\\n                    Full Backup\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n    \\n    <!-- Tabs -->\\n    <div class=\\"mb-6\\">\\n        <div class=\\"border-b border-gray-200\\">\\n            <nav class=\\"-mb-px flex space-x-8\\">\\n                <button\\n                    on:click={() => { activeTab = 'backups'; loadData(); }}\\n                    class=\\"py-2 px-1 border-b-2 font-medium text-sm\\"\\n                    class:border-indigo-500={activeTab === 'backups'}\\n                    class:text-indigo-600={activeTab === 'backups'}\\n                    class:border-transparent={activeTab !== 'backups'}\\n                    class:text-gray-500={activeTab !== 'backups'}\\n                >\\n                    Backups\\n                </button>\\n                <button\\n                    on:click={() => { activeTab = 'schedules'; loadData(); }}\\n                    class=\\"py-2 px-1 border-b-2 font-medium text-sm\\"\\n                    class:border-indigo-500={activeTab === 'schedules'}\\n                    class:text-indigo-600={activeTab === 'schedules'}\\n                    class:border-transparent={activeTab !== 'schedules'}\\n                    class:text-gray-500={activeTab !== 'schedules'}\\n                >\\n                    Schedules\\n                </button>\\n                <button\\n                    on:click={() => { activeTab = 'stats'; loadData(); }}\\n                    class=\\"py-2 px-1 border-b-2 font-medium text-sm\\"\\n                    class:border-indigo-500={activeTab === 'stats'}\\n                    class:text-indigo-600={activeTab === 'stats'}\\n                    class:border-transparent={activeTab !== 'stats'}\\n                    class:text-gray-500={activeTab !== 'stats'}\\n                >\\n                    Statistics\\n                </button>\\n            </nav>\\n        </div>\\n    </div>\\n    \\n    {#if loading}\\n        <div class=\\"flex justify-center py-12\\">\\n            <div class=\\"spinner\\"></div>\\n        </div>\\n    {:else if error}\\n        <div class=\\"alert alert-error\\">{error}</div>\\n    {:else}\\n        <!-- Backups Tab -->\\n        {#if activeTab === 'backups'}\\n            <div class=\\"bg-white rounded-lg shadow-sm border border-gray-200\\">\\n                <div class=\\"p-6 border-b border-gray-200\\">\\n                    <div class=\\"flex justify-between items-center\\">\\n                        <h2 class=\\"text-lg font-semibold text-gray-900\\">Recent Backups</h2>\\n                        <button\\n                            on:click={cleanupBackups}\\n                            class=\\"btn btn-sm btn-secondary\\"\\n                        >\\n                            <Icon name=\\"trash-2\\" class=\\"w-4 h-4 mr-1\\" />\\n                            Cleanup Old\\n                        </button>\\n                    </div>\\n                </div>\\n                \\n                <div class=\\"overflow-x-auto\\">\\n                    <table class=\\"min-w-full divide-y divide-gray-200\\">\\n                        <thead class=\\"bg-gray-50\\">\\n                            <tr>\\n                                <th class=\\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\\">\\n                                    Backup\\n                                </th>\\n                                <th class=\\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\\">\\n                                    Type\\n                                </th>\\n                                <th class=\\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\\">\\n                                    Status\\n                                </th>\\n                                <th class=\\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\\">\\n                                    Size\\n                                </th>\\n                                <th class=\\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\\">\\n                                    Created\\n                                </th>\\n                                <th class=\\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\\">\\n                                    Actions\\n                                </th>\\n                            </tr>\\n                        </thead>\\n                        <tbody class=\\"bg-white divide-y divide-gray-200\\">\\n                            {#each backups as backup}\\n                                <tr>\\n                                    <td class=\\"px-6 py-4 whitespace-nowrap\\">\\n                                        <div class=\\"text-sm font-medium text-gray-900\\">\\n                                            {backup.backup_name}\\n                                        </div>\\n                                        {#if backup.remote_path}\\n                                            <div class=\\"text-xs text-gray-500\\">\\n                                                <Icon name=\\"cloud\\" class=\\"w-3 h-3 inline\\" />\\n                                                Remote backup available\\n                                            </div>\\n                                        {/if}\\n                                    </td>\\n                                    <td class=\\"px-6 py-4 whitespace-nowrap\\">\\n                                        <div class=\\"flex items-center\\">\\n                                            <Icon \\n                                                name={backupTypes[backup.backup_type].icon} \\n                                                class=\\"w-5 h-5 text-{backupTypes[backup.backup_type].color}-500 mr-2\\" \\n                                            />\\n                                            <span class=\\"text-sm text-gray-900 capitalize\\">\\n                                                {backup.backup_type}\\n                                            </span>\\n                                        </div>\\n                                    </td>\\n                                    <td class=\\"px-6 py-4 whitespace-nowrap\\">\\n                                        <span class=\\"px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-{statusColors[backup.status]}-100 text-{statusColors[backup.status]}-800\\">\\n                                            {backup.status}\\n                                        </span>\\n                                    </td>\\n                                    <td class=\\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\\">\\n                                        {formatBytes(backup.file_size)}\\n                                    </td>\\n                                    <td class=\\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\\">\\n                                        {new Date(backup.created_at).toLocaleString()}\\n                                    </td>\\n                                    <td class=\\"px-6 py-4 whitespace-nowrap text-sm font-medium\\">\\n                                        <div class=\\"flex space-x-2\\">\\n                                            {#if backup.status === 'completed'}\\n                                                <button\\n                                                    on:click={() => verifyBackup(backup.id)}\\n                                                    class=\\"text-indigo-600 hover:text-indigo-900\\"\\n                                                    title=\\"Verify backup\\"\\n                                                >\\n                                                    <Icon name=\\"check-circle\\" class=\\"w-5 h-5\\" />\\n                                                </button>\\n                                                <button\\n                                                    on:click={() => { selectedBackup = backup; showRestoreModal = true; }}\\n                                                    class=\\"text-green-600 hover:text-green-900\\"\\n                                                    title=\\"Restore from backup\\"\\n                                                >\\n                                                    <Icon name=\\"rotate-ccw\\" class=\\"w-5 h-5\\" />\\n                                                </button>\\n                                            {/if}\\n                                            {#if backup.error_message}\\n                                                <span class=\\"text-red-600\\" title={backup.error_message}>\\n                                                    <Icon name=\\"alert-circle\\" class=\\"w-5 h-5\\" />\\n                                                </span>\\n                                            {/if}\\n                                        </div>\\n                                    </td>\\n                                </tr>\\n                            {/each}\\n                        </tbody>\\n                    </table>\\n                </div>\\n            </div>\\n        {/if}\\n        \\n        <!-- Schedules Tab -->\\n        {#if activeTab === 'schedules'}\\n            <div class=\\"bg-white rounded-lg shadow-sm border border-gray-200\\">\\n                <div class=\\"p-6 border-b border-gray-200\\">\\n                    <div class=\\"flex justify-between items-center\\">\\n                        <h2 class=\\"text-lg font-semibold text-gray-900\\">Backup Schedules</h2>\\n                        <button\\n                            on:click={() => showScheduleModal = true}\\n                            class=\\"btn btn-sm btn-primary\\"\\n                        >\\n                            <Icon name=\\"plus\\" class=\\"w-4 h-4 mr-1\\" />\\n                            Add Schedule\\n                        </button>\\n                    </div>\\n                </div>\\n                \\n                <div class=\\"p-6\\">\\n                    <div class=\\"space-y-4\\">\\n                        {#each schedules as schedule}\\n                            <div class=\\"border border-gray-200 rounded-lg p-4\\">\\n                                <div class=\\"flex justify-between items-start\\">\\n                                    <div class=\\"flex-1\\">\\n                                        <div class=\\"flex items-center\\">\\n                                            <h3 class=\\"text-lg font-medium text-gray-900\\">\\n                                                {schedule.name}\\n                                            </h3>\\n                                            <span class=\\"ml-2 px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-{schedule.is_active ? 'green' : 'gray'}-100 text-{schedule.is_active ? 'green' : 'gray'}-800\\">\\n                                                {schedule.is_active ? 'Active' : 'Inactive'}\\n                                            </span>\\n                                        </div>\\n                                        <div class=\\"mt-2 text-sm text-gray-600\\">\\n                                            <p>Type: {schedule.backup_type}</p>\\n                                            <p>Destination: {schedule.destination}</p>\\n                                            <p>Schedule: {JSON.stringify(schedule.schedule_config)}</p>\\n                                            {#if schedule.last_run_at}\\n                                                <p>Last run: {new Date(schedule.last_run_at).toLocaleString()}</p>\\n                                            {/if}\\n                                            {#if schedule.next_run_at}\\n                                                <p>Next run: {new Date(schedule.next_run_at).toLocaleString()}</p>\\n                                            {/if}\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\"flex space-x-2\\">\\n                                        <button\\n                                            on:click={() => toggleSchedule(schedule.id, schedule.is_active)}\\n                                            class=\\"text-indigo-600 hover:text-indigo-900\\"\\n                                        >\\n                                            <Icon name={schedule.is_active ? 'pause' : 'play'} class=\\"w-5 h-5\\" />\\n                                        </button>\\n                                        <button\\n                                            on:click={() => deleteSchedule(schedule.id)}\\n                                            class=\\"text-red-600 hover:text-red-900\\"\\n                                        >\\n                                            <Icon name=\\"trash-2\\" class=\\"w-5 h-5\\" />\\n                                        </button>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        {/each}\\n                    </div>\\n                </div>\\n            </div>\\n        {/if}\\n        \\n        <!-- Statistics Tab -->\\n        {#if activeTab === 'stats'}\\n            <!-- Stats Overview -->\\n            <div class=\\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-6\\">\\n                {#each stats as stat}\\n                    <div class=\\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\\">\\n                        <h3 class=\\"text-lg font-semibold text-gray-900 mb-4 capitalize\\">\\n                            {stat.backup_type} Backups\\n                        </h3>\\n                        <div class=\\"space-y-2 text-sm\\">\\n                            <div class=\\"flex justify-between\\">\\n                                <span class=\\"text-gray-600\\">Total:</span>\\n                                <span class=\\"font-medium\\">{stat.total_count}</span>\\n                            </div>\\n                            <div class=\\"flex justify-between\\">\\n                                <span class=\\"text-gray-600\\">Success:</span>\\n                                <span class=\\"font-medium text-green-600\\">{stat.success_count}</span>\\n                            </div>\\n                            <div class=\\"flex justify-between\\">\\n                                <span class=\\"text-gray-600\\">Failed:</span>\\n                                <span class=\\"font-medium text-red-600\\">{stat.failed_count}</span>\\n                            </div>\\n                            <div class=\\"flex justify-between\\">\\n                                <span class=\\"text-gray-600\\">Success Rate:</span>\\n                                <span class=\\"font-medium\\">{stat.success_rate}%</span>\\n                            </div>\\n                            <div class=\\"flex justify-between\\">\\n                                <span class=\\"text-gray-600\\">Total Size:</span>\\n                                <span class=\\"font-medium\\">{stat.total_size_gb} GB</span>\\n                            </div>\\n                            <div class=\\"flex justify-between\\">\\n                                <span class=\\"text-gray-600\\">Avg Duration:</span>\\n                                <span class=\\"font-medium\\">{stat.avg_duration_minutes} min</span>\\n                            </div>\\n                        </div>\\n                    </div>\\n                {/each}\\n            </div>\\n            \\n            <!-- Dashboard -->\\n            <div class=\\"grid grid-cols-1 lg:grid-cols-2 gap-6\\">\\n                <!-- Recent Status -->\\n                <div class=\\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\\">\\n                    <h3 class=\\"text-lg font-semibold text-gray-900 mb-4\\">Recent Backup Status</h3>\\n                    <div class=\\"space-y-3\\">\\n                        {#each dashboard.recent_backups as backup}\\n                            <div class=\\"flex items-center justify-between\\">\\n                                <div class=\\"flex items-center\\">\\n                                    <Icon \\n                                        name={backupTypes[backup.backup_type].icon} \\n                                        class=\\"w-5 h-5 text-{backupTypes[backup.backup_type].color}-500 mr-2\\" \\n                                    />\\n                                    <span class=\\"text-sm text-gray-900\\">\\n                                        {backup.backup_type}\\n                                    </span>\\n                                    <span class=\\"ml-2 px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-{statusColors[backup.status]}-100 text-{statusColors[backup.status]}-800\\">\\n                                        {backup.status}\\n                                    </span>\\n                                </div>\\n                                <div class=\\"text-sm text-gray-500\\">\\n                                    {backup.count} backups\\n                                </div>\\n                            </div>\\n                        {/each}\\n                    </div>\\n                </div>\\n                \\n                <!-- Upcoming Backups -->\\n                <div class=\\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\\">\\n                    <h3 class=\\"text-lg font-semibold text-gray-900 mb-4\\">Upcoming Backups</h3>\\n                    <div class=\\"space-y-3\\">\\n                        {#each dashboard.upcoming_backups as backup}\\n                            <div class=\\"flex items-center justify-between\\">\\n                                <div>\\n                                    <p class=\\"text-sm font-medium text-gray-900\\">\\n                                        {backup.name}\\n                                    </p>\\n                                    <p class=\\"text-xs text-gray-500\\">\\n                                        {backup.backup_type} → {backup.destination}\\n                                    </p>\\n                                </div>\\n                                <div class=\\"text-sm text-gray-600\\">\\n                                    {backup.hours_until_next.toFixed(1)}h\\n                                </div>\\n                            </div>\\n                        {/each}\\n                    </div>\\n                </div>\\n            </div>\\n        {/if}\\n    {/if}\\n</div>\\n\\n<!-- Schedule Modal -->\\n{#if showScheduleModal}\\n    <BackupScheduleModal\\n        on:create={e => createSchedule(e.detail)}\\n        on:close={() => showScheduleModal = false}\\n    />\\n{/if}\\n\\n<!-- Restore Modal -->\\n{#if showRestoreModal && selectedBackup}\\n    <RestoreModal\\n        backup={selectedBackup}\\n        on:close={() => { showRestoreModal = false; selectedBackup = null; }}\\n    />\\n{/if}\\n\\n<style>\\n    .spinner {\\n        width: 2rem;\\n        height: 2rem;\\n        border-width: 4px;\\n        border-color: #c7d2fe;\\n        border-top-color: #4f46e5;\\n        border-radius: 9999px;\\n        animation: spin 1s linear infinite;\\n    }\\n    \\n    @keyframes spin {\\n        from { transform: rotate(0deg); }\\n        to { transform: rotate(360deg); }\\n    }\\n    \\n    .btn {\\n        padding: 0.5rem 1rem;\\n        border-radius: 0.375rem;\\n        font-weight: 500;\\n        transition: background-color 0.2s, color 0.2s;\\n        display: inline-flex;\\n        align-items: center;\\n        justify-content: center;\\n    }\\n    \\n    .btn-primary {\\n        background-color: #4f46e5;\\n        color: white;\\n    }\\n    \\n    .btn-primary:hover {\\n        background-color: #4338ca;\\n    }\\n    \\n    .btn-secondary {\\n        background-color: #e5e7eb;\\n        color: #1f2937;\\n    }\\n    \\n    .btn-secondary:hover {\\n        background-color: #d1d5db;\\n    }\\n    \\n    .btn-sm {\\n        padding: 0.375rem 0.75rem;\\n        font-size: 0.875rem;\\n    }\\n    \\n    .alert {\\n        padding: 1rem;\\n        border-radius: 0.375rem;\\n    }\\n    \\n    .alert-error {\\n        background-color: #fef2f2;\\n        color: #991b1b;\\n        border: 1px solid #fecaca;\\n    }\\n</style>"],"names":[],"mappings":"AA+fI,sBAAS,CACL,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,YAAY,CAAE,GAAG,CACjB,YAAY,CAAE,OAAO,CACrB,gBAAgB,CAAE,OAAO,CACzB,aAAa,CAAE,MAAM,CACrB,SAAS,CAAE,kBAAI,CAAC,EAAE,CAAC,MAAM,CAAC,QAC9B,CAEA,WAAW,kBAAK,CACZ,IAAK,CAAE,SAAS,CAAE,OAAO,IAAI,CAAG,CAChC,EAAG,CAAE,SAAS,CAAE,OAAO,MAAM,CAAG,CACpC,CAEA,kBAAK,CACD,OAAO,CAAE,MAAM,CAAC,IAAI,CACpB,aAAa,CAAE,QAAQ,CACvB,WAAW,CAAE,GAAG,CAChB,UAAU,CAAE,gBAAgB,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,CAC7C,OAAO,CAAE,WAAW,CACpB,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MACrB,CAEA,0BAAa,CACT,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,KACX,CAEA,0BAAY,MAAO,CACf,gBAAgB,CAAE,OACtB,CAEA,4BAAe,CACX,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,OACX,CAEA,4BAAc,MAAO,CACjB,gBAAgB,CAAE,OACtB,CAEA,qBAAQ,CACJ,OAAO,CAAE,QAAQ,CAAC,OAAO,CACzB,SAAS,CAAE,QACf,CAEA,oBAAO,CACH,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,QACnB,CAEA,0BAAa,CACT,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,OAAO,CACd,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OACtB"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css);
  return `<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8"> <div class="mb-8"><div class="flex justify-between items-center"><div data-svelte-h="svelte-eqnamb"><h1 class="text-3xl font-bold text-gray-900">Backup Management</h1> <p class="mt-2 text-gray-600">Manage system backups and recovery</p></div> <div class="flex space-x-2"><button class="btn btn-secondary svelte-tinobq">${validate_component(Icon, "Icon").$$render($$result, { name: "database", class: "w-5 h-5 mr-2" }, {}, {})}
                    Backup Database</button> <button class="btn btn-primary svelte-tinobq">${validate_component(Icon, "Icon").$$render($$result, { name: "package", class: "w-5 h-5 mr-2" }, {}, {})}
                    Full Backup</button></div></div></div>  <div class="mb-6"><div class="border-b border-gray-200"><nav class="-mb-px flex space-x-8"><button class="${[
    "py-2 px-1 border-b-2 font-medium text-sm",
    "border-indigo-500 text-indigo-600  "
  ].join(" ").trim()}" data-svelte-h="svelte-y08b91">Backups</button> <button class="${[
    "py-2 px-1 border-b-2 font-medium text-sm",
    "  border-transparent text-gray-500"
  ].join(" ").trim()}" data-svelte-h="svelte-wb7m1z">Schedules</button> <button class="${[
    "py-2 px-1 border-b-2 font-medium text-sm",
    "  border-transparent text-gray-500"
  ].join(" ").trim()}" data-svelte-h="svelte-jc0a3z">Statistics</button></nav></div></div> ${`<div class="flex justify-center py-12" data-svelte-h="svelte-em5o00"><div class="spinner svelte-tinobq"></div></div>`}</div>  ${``}  ${``}`;
});
export {
  Page as default
};
