import{d as i,w as m}from"./_pMazo4M.js";import{b as W}from"./Bt-Xh7oU.js";function y(){const{subscribe:n,set:r,update:s}=m({status:"disconnected",lastMessage:null,error:null});let e=null,l=null,a=0;const u=5,b=3e3;function p(){const c="ws://localhost:8000/ws";try{s(t=>({...t,status:"connecting",error:null})),e=new WebSocket(c),e.onopen=()=>{console.log("WebSocket connected"),a=0,s(o=>({...o,status:"connected"}));const t=W?localStorage.getItem("authToken"):null;t&&e&&e.send(JSON.stringify({type:"auth",token:t}))},e.onmessage=t=>{try{const o=JSON.parse(t.data);s(f=>({...f,lastMessage:o})),S(o)}catch(o){console.error("Failed to parse WebSocket message:",o)}},e.onerror=t=>{console.error("WebSocket error:",t),s(o=>({...o,status:"error",error:"WebSocket connection error"}))},e.onclose=()=>{console.log("WebSocket disconnected"),s(t=>({...t,status:"disconnected"})),a<u?(a++,console.log(`Reconnecting... (attempt ${a}/${u})`),l=setTimeout(()=>{p()},b*a)):s(t=>({...t,error:"Failed to reconnect after multiple attempts"}))}}catch(t){console.error("Failed to create WebSocket connection:",t),s(o=>({...o,status:"error",error:"Failed to create WebSocket connection"}))}}function k(){l&&(clearTimeout(l),l=null),e&&e.readyState===WebSocket.OPEN&&e.close(),e=null,a=0}function g(c){e&&e.readyState===WebSocket.OPEN?e.send(JSON.stringify(c)):console.error("WebSocket is not connected")}function S(c){switch(c.type){case"trade_update":console.log("Trade update:",c.data);break;case"price_update":console.log("Price update:",c.data);break;case"notification":console.log("Notification:",c.data);break;case"market_status":console.log("Market status:",c.data);break}}return{subscribe:n,connect:p,disconnect:k,send:g}}const d=y(),h=i(d,n=>n.status==="connected");i(d,n=>{var r;return((r=n.lastMessage)==null?void 0:r.type)==="trade_update"?n.lastMessage.data:null});const N=i(d,n=>{var r;return((r=n.lastMessage)==null?void 0:r.type)==="price_update"?n.lastMessage.data:null});export{h as a,N as p,d as w};
