import { c as create_ssr_component, a as subscribe, o as onDestroy, v as validate_component, e as each, d as escape } from "../../../../chunks/ssr.js";
import { p as page } from "../../../../chunks/stores.js";
import "../../../../chunks/client.js";
import { L as LoadingSkeleton } from "../../../../chunks/LoadingSkeleton.js";
/* empty css                                                          */
import "lightweight-charts";
/* empty css                                                         */
import "chart.js/auto";
import "chartjs-adapter-date-fns";
import "marked";
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
var FEATURE_FLAG_NAMES = Object.freeze({
  // This flag exists as a workaround for issue 454 (basically a browser bug) - seems like these rect values take time to update when in grid layout. Setting it to true can cause strange behaviour in the REPL for non-grid zones, see issue 470
  USE_COMPUTED_STYLE_INSTEAD_OF_BOUNDING_RECT: "USE_COMPUTED_STYLE_INSTEAD_OF_BOUNDING_RECT"
});
_defineProperty({}, FEATURE_FLAG_NAMES.USE_COMPUTED_STYLE_INSTEAD_OF_BOUNDING_RECT, false);
var _ID_TO_INSTRUCTION;
var INSTRUCTION_IDs$1 = {
  DND_ZONE_ACTIVE: "dnd-zone-active",
  DND_ZONE_DRAG_DISABLED: "dnd-zone-drag-disabled"
};
_ID_TO_INSTRUCTION = {}, _defineProperty(_ID_TO_INSTRUCTION, INSTRUCTION_IDs$1.DND_ZONE_ACTIVE, "Tab to one the items and press space-bar or enter to start dragging it"), _defineProperty(_ID_TO_INSTRUCTION, INSTRUCTION_IDs$1.DND_ZONE_DRAG_DISABLED, "This is a disabled drag and drop list"), _ID_TO_INSTRUCTION;
const css = {
  code: ".dashboard-builder.svelte-9o8nns.svelte-9o8nns{height:100vh;display:flex;flex-direction:column;background:#f9fafb}.loading-container.svelte-9o8nns.svelte-9o8nns,.error-container.svelte-9o8nns.svelte-9o8nns{padding:2rem;text-align:center}.skeleton-grid.svelte-9o8nns.svelte-9o8nns{display:grid;grid-template-columns:repeat(auto-fit, minmax(300px, 1fr));gap:1.5rem;margin-top:2rem}.builder-header.svelte-9o8nns.svelte-9o8nns{background:white;border-bottom:1px solid #e5e7eb;padding:1rem 2rem;display:flex;justify-content:space-between;align-items:center}.header-left.svelte-9o8nns h1.svelte-9o8nns{font-size:1.5rem;margin:0}.header-left.svelte-9o8nns p.svelte-9o8nns{color:#6b7280;margin:0.25rem 0 0 0;font-size:0.875rem}.header-actions.svelte-9o8nns.svelte-9o8nns{display:flex;gap:0.5rem;align-items:center}.icon-button.svelte-9o8nns.svelte-9o8nns{padding:0.5rem;background:white;border:1px solid #e5e7eb;border-radius:6px;cursor:pointer;transition:all 0.2s;display:flex;align-items:center;justify-content:center}.icon-button.svelte-9o8nns.svelte-9o8nns:hover{background:#f3f4f6;border-color:#d1d5db}.icon-button.svelte-9o8nns.svelte-9o8nns:disabled{opacity:0.5;cursor:not-allowed}.widget-panel.svelte-9o8nns.svelte-9o8nns{background:white;border-bottom:1px solid #e5e7eb;padding:1.5rem 2rem}.widget-panel.svelte-9o8nns h3.svelte-9o8nns{margin:0 0 0.5rem 0}.widget-limit.svelte-9o8nns.svelte-9o8nns{color:#6b7280;font-size:0.875rem;margin-bottom:1rem}.widget-types.svelte-9o8nns.svelte-9o8nns{display:flex;gap:1rem;flex-wrap:wrap}.widget-type-button.svelte-9o8nns.svelte-9o8nns{display:flex;flex-direction:column;align-items:center;gap:0.5rem;padding:1rem;background:white;border:2px solid #e5e7eb;border-radius:8px;cursor:pointer;transition:all 0.2s;min-width:100px}.widget-type-button.svelte-9o8nns.svelte-9o8nns:hover:not(:disabled){border-color:#10b981;background:#f0fdf4}.widget-type-button.svelte-9o8nns.svelte-9o8nns:disabled{opacity:0.5;cursor:not-allowed}.widget-type-button.svelte-9o8nns span.svelte-9o8nns{font-size:0.875rem;color:#374151}.dashboard-grid.svelte-9o8nns.svelte-9o8nns{flex:1;padding:2rem;overflow:auto;position:relative;display:grid;grid-template-columns:repeat(var(--grid-cols), 1fr);grid-auto-rows:var(--row-height);gap:var(--margin)}.dnd-container.svelte-9o8nns.svelte-9o8nns{display:contents}.grid-overlay.svelte-9o8nns.svelte-9o8nns{position:absolute;top:0;left:0;right:0;bottom:0;display:grid;grid-template-columns:repeat(var(--grid-cols), 1fr);grid-auto-rows:var(--row-height);gap:var(--margin);pointer-events:none;z-index:0}.grid-cell.svelte-9o8nns.svelte-9o8nns{border:1px dashed #e5e7eb;border-radius:4px}.widget-container.svelte-9o8nns.svelte-9o8nns{position:relative;z-index:1}.widget.svelte-9o8nns.svelte-9o8nns{background:white;border:1px solid #e5e7eb;border-radius:8px;height:100%;display:flex;flex-direction:column;overflow:hidden;transition:all 0.2s;position:relative}.edit-mode.svelte-9o8nns .widget.svelte-9o8nns:hover{box-shadow:0 4px 12px rgba(0, 0, 0, 0.1)}.dashboard-grid.resizing.svelte-9o8nns .widget.svelte-9o8nns{transition:none}.dashboard-grid.resizing.svelte-9o8nns .grid-overlay.svelte-9o8nns{z-index:2}.dashboard-grid.resizing.svelte-9o8nns .grid-cell.svelte-9o8nns{border-color:#9ca3af}.widget-header.svelte-9o8nns.svelte-9o8nns{padding:1rem;border-bottom:1px solid #e5e7eb;display:flex;justify-content:space-between;align-items:center}.widget-header.svelte-9o8nns h4.svelte-9o8nns{margin:0;font-size:1rem}.widget-actions.svelte-9o8nns.svelte-9o8nns{display:flex;gap:0.25rem}.widget-action.svelte-9o8nns.svelte-9o8nns{padding:0.25rem;background:transparent;border:none;cursor:pointer;color:#6b7280;transition:all 0.2s}.widget-action.svelte-9o8nns.svelte-9o8nns:hover{color:#374151;background:#f3f4f6;border-radius:4px}.drag-handle.svelte-9o8nns.svelte-9o8nns{cursor:move}.widget-content.svelte-9o8nns.svelte-9o8nns{flex:1;padding:1rem;overflow:auto}.widget-placeholder.svelte-9o8nns.svelte-9o8nns{display:flex;flex-direction:column;align-items:center;justify-content:center;height:100%;color:#9ca3af;text-align:center}.widget-placeholder.svelte-9o8nns p.svelte-9o8nns{margin-top:1rem;font-size:0.875rem}.modal-overlay.svelte-9o8nns.svelte-9o8nns{position:fixed;top:0;left:0;right:0;bottom:0;background:rgba(0, 0, 0, 0.5);display:flex;align-items:center;justify-content:center;z-index:1000}.modal.svelte-9o8nns.svelte-9o8nns{background:white;border-radius:12px;padding:2rem;max-width:500px;width:90%}.modal.svelte-9o8nns h3.svelte-9o8nns{margin:0 0 1.5rem 0}.form-group.svelte-9o8nns.svelte-9o8nns{margin-bottom:1.5rem}.form-group.svelte-9o8nns label.svelte-9o8nns{display:block;margin-bottom:0.5rem;font-weight:500;color:#374151}.form-group.svelte-9o8nns input.svelte-9o8nns,.form-group.svelte-9o8nns select.svelte-9o8nns{width:100%;padding:0.75rem;border:1px solid #e5e7eb;border-radius:6px;font-size:1rem}.form-group.svelte-9o8nns small.svelte-9o8nns{display:block;margin-top:0.25rem;color:#6b7280;font-size:0.875rem}.modal-actions.svelte-9o8nns.svelte-9o8nns{display:flex;gap:1rem;justify-content:flex-end;margin-top:2rem}.primary-button.svelte-9o8nns.svelte-9o8nns,.secondary-button.svelte-9o8nns.svelte-9o8nns{padding:0.75rem 1.5rem;border-radius:6px;font-size:1rem;cursor:pointer;transition:all 0.2s;border:none}.primary-button.svelte-9o8nns.svelte-9o8nns{background:#10b981;color:white}.primary-button.svelte-9o8nns.svelte-9o8nns:hover{background:#059669}.secondary-button.svelte-9o8nns.svelte-9o8nns{background:#f3f4f6;color:#374151}.secondary-button.svelte-9o8nns.svelte-9o8nns:hover{background:#e5e7eb}.error.svelte-9o8nns.svelte-9o8nns{background:#fee;color:#dc2626;padding:1rem;border-radius:6px;margin:1rem 2rem}.resize-handles.svelte-9o8nns.svelte-9o8nns{position:absolute;top:0;left:0;right:0;bottom:0;pointer-events:none}.resize-handle.svelte-9o8nns.svelte-9o8nns{position:absolute;background:#10b981;opacity:0;transition:opacity 0.2s;pointer-events:all}.widget.svelte-9o8nns:hover .resize-handle.svelte-9o8nns{opacity:0.7}.resize-handle.svelte-9o8nns.svelte-9o8nns:hover{opacity:1 !important}.resize-handle-se.svelte-9o8nns.svelte-9o8nns{bottom:0;right:0;width:20px;height:20px;cursor:nwse-resize;border-radius:0 0 8px 0;display:flex;align-items:center;justify-content:center;color:white}.resize-handle-e.svelte-9o8nns.svelte-9o8nns{top:50%;right:0;width:8px;height:40px;transform:translateY(-50%);cursor:ew-resize;border-radius:0 4px 4px 0}.resize-handle-s.svelte-9o8nns.svelte-9o8nns{left:50%;bottom:0;width:40px;height:8px;transform:translateX(-50%);cursor:ns-resize;border-radius:0 0 4px 4px}.export-dropdown.svelte-9o8nns.svelte-9o8nns{position:relative}.export-menu.svelte-9o8nns.svelte-9o8nns{position:absolute;top:100%;right:0;margin-top:0.5rem;background:white;border:1px solid #e5e7eb;border-radius:8px;box-shadow:0 10px 25px rgba(0, 0, 0, 0.1);min-width:180px;z-index:100}.export-option.svelte-9o8nns.svelte-9o8nns{display:flex;align-items:center;gap:0.75rem;width:100%;padding:0.75rem 1rem;background:none;border:none;cursor:pointer;color:#374151;font-size:0.875rem;transition:all 0.2s;text-align:left}.export-option.svelte-9o8nns.svelte-9o8nns:hover{background:#f3f4f6;color:#10b981}.export-option.svelte-9o8nns.svelte-9o8nns:first-child{border-radius:8px 8px 0 0}.export-option.svelte-9o8nns.svelte-9o8nns:last-child{border-radius:0 0 8px 8px}.export-overlay.svelte-9o8nns.svelte-9o8nns{position:fixed;top:0;left:0;right:0;bottom:0;background:rgba(0, 0, 0, 0.6);display:flex;align-items:center;justify-content:center;z-index:2000}.export-spinner.svelte-9o8nns.svelte-9o8nns{background:white;padding:2rem;border-radius:12px;text-align:center;box-shadow:0 20px 40px rgba(0, 0, 0, 0.2)}.spinner.svelte-9o8nns.svelte-9o8nns{width:50px;height:50px;border:3px solid #e5e7eb;border-top-color:#10b981;border-radius:50%;margin:0 auto 1rem;animation:svelte-9o8nns-spin 1s linear infinite}@keyframes svelte-9o8nns-spin{to{transform:rotate(360deg)}}.export-spinner.svelte-9o8nns p.svelte-9o8nns{margin:0;color:#374151;font-weight:500}@media(max-width: 768px){.dashboard-grid.svelte-9o8nns.svelte-9o8nns{padding:1rem}.widget-panel.svelte-9o8nns.svelte-9o8nns{padding:1rem}.widget-types.svelte-9o8nns.svelte-9o8nns{gap:0.5rem}.widget-type-button.svelte-9o8nns.svelte-9o8nns{min-width:80px;padding:0.75rem;font-size:0.75rem}.resize-handle.svelte-9o8nns.svelte-9o8nns{display:none}}",
  map: '{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { onMount, onDestroy } from \\"svelte\\";\\nimport { page } from \\"$app/stores\\";\\nimport { goto } from \\"$app/navigation\\";\\nimport { dndzone } from \\"svelte-dnd-action\\";\\nimport { flip } from \\"svelte/animate\\";\\nimport {\\n  Plus,\\n  Save,\\n  Eye,\\n  EyeOff,\\n  Settings,\\n  X,\\n  Move,\\n  Maximize2,\\n  BarChart2,\\n  PieChart,\\n  TrendingUp,\\n  Table,\\n  Activity,\\n  DollarSign,\\n  Calendar,\\n  FileText,\\n  Download,\\n  FileImage,\\n  File\\n} from \\"lucide-svelte\\";\\nimport {\\n  dashboardsApi\\n} from \\"$lib/api/dashboards\\";\\nimport { billingApi } from \\"$lib/api/billing\\";\\nimport LoadingSkeleton from \\"$lib/components/LoadingSkeleton.svelte\\";\\nimport { widgetComponents, sampleDataGenerators, defaultWidgetSizes } from \\"$lib/components/dashboard/widgets\\";\\nlet dashboard = null;\\nlet loading = true;\\nlet saving = false;\\nlet error = \\"\\";\\nlet editMode = true;\\nlet showWidgetPanel = false;\\nlet selectedWidget = null;\\nlet userPlan = \\"free\\";\\nlet widgetTypes = [];\\nlet dataSources = [];\\nlet eventSource = null;\\nlet widgetData = {};\\nlet resizing = false;\\nlet resizeWidget = null;\\nlet resizeDirection = \\"se\\";\\nlet resizeStartPos = { x: 0, y: 0 };\\nlet resizeStartSize = { width: 0, height: 0 };\\nlet showExportMenu = false;\\nlet exporting = false;\\nconst dashboardId = $page.params.id;\\nconst GRID_COLS = 12;\\nconst ROW_HEIGHT = 80;\\nconst MARGIN = 10;\\nconst planLimits = {\\n  free: { widgets: 4 },\\n  pro: { widgets: 10 },\\n  enterprise: { widgets: 999 }\\n};\\nconst widgetIcons = {\\n  line_chart: TrendingUp,\\n  bar_chart: BarChart2,\\n  pie_chart: PieChart,\\n  table: Table,\\n  metric_card: DollarSign,\\n  gauge: Activity,\\n  pnl_calendar: Calendar,\\n  text_markdown: FileText,\\n  candlestick: BarChart2,\\n  heatmap: Activity,\\n  drawdown_chart: TrendingUp,\\n  live_market: Activity\\n};\\nasync function loadDashboard() {\\n  try {\\n    loading = true;\\n    error = \\"\\";\\n    try {\\n      const subscription = await billingApi.getSubscription();\\n      if (subscription?.plan_id.includes(\\"enterprise\\")) userPlan = \\"enterprise\\";\\n      else if (subscription?.plan_id.includes(\\"pro\\")) userPlan = \\"pro\\";\\n    } catch (e) {\\n    }\\n    const [dashboardData, typesData, sourcesData] = await Promise.all([\\n      dashboardsApi.get(dashboardId),\\n      dashboardsApi.getWidgetTypes(),\\n      dashboardsApi.getDataSources()\\n    ]);\\n    dashboard = dashboardData;\\n    widgetTypes = typesData;\\n    dataSources = sourcesData;\\n    await loadAllWidgetData();\\n    if (!editMode) {\\n      setupRealtimeUpdates();\\n    }\\n  } catch (err) {\\n    error = err.message || \\"Failed to load dashboard\\";\\n    console.error(\\"Error loading dashboard:\\", err);\\n  } finally {\\n    loading = false;\\n  }\\n}\\nasync function loadAllWidgetData() {\\n  if (!dashboard) return;\\n  try {\\n    const data = await dashboardsApi.getDashboardData(dashboardId);\\n    widgetData = data.widget_data;\\n  } catch (err) {\\n    console.error(\\"Error loading widget data:\\", err);\\n  }\\n}\\nasync function saveDashboard() {\\n  if (!dashboard) return;\\n  try {\\n    saving = true;\\n    await dashboardsApi.update(dashboardId, {\\n      name: dashboard.name,\\n      description: dashboard.description,\\n      layout: dashboard.layout,\\n      tags: dashboard.tags,\\n      is_public: dashboard.is_public\\n    });\\n    const positions = dashboard.widgets.map((w) => ({\\n      widget_id: w.id,\\n      position: w.position\\n    }));\\n    await dashboardsApi.reorderWidgets(dashboardId, positions);\\n  } catch (err) {\\n    error = err.message || \\"Failed to save dashboard\\";\\n  } finally {\\n    saving = false;\\n  }\\n}\\nasync function addWidget(type) {\\n  if (!dashboard) return;\\n  if (dashboard.widgets.length >= planLimits[userPlan].widgets) {\\n    error = `Widget limit reached. Upgrade to ${userPlan === \\"free\\" ? \\"Pro\\" : \\"Enterprise\\"} for more widgets.`;\\n    return;\\n  }\\n  const newWidget = {\\n    type,\\n    title: `New ${type.replace(/_/g, \\" \\").replace(/\\\\b\\\\w/g, (l) => l.toUpperCase())}`,\\n    position: findEmptyPosition(type),\\n    data_source: \\"trades\\",\\n    data_config: {},\\n    refresh_interval: 300,\\n    interactive: true,\\n    exportable: true,\\n    linked_widgets: [],\\n    custom_styles: {}\\n  };\\n  try {\\n    dashboard = await dashboardsApi.addWidget(dashboardId, newWidget);\\n    showWidgetPanel = false;\\n  } catch (err) {\\n    error = err.message || \\"Failed to add widget\\";\\n  }\\n}\\nasync function removeWidget(widgetId) {\\n  if (!dashboard || !confirm(\\"Remove this widget?\\")) return;\\n  try {\\n    dashboard = await dashboardsApi.removeWidget(dashboardId, widgetId);\\n  } catch (err) {\\n    error = err.message || \\"Failed to remove widget\\";\\n  }\\n}\\nasync function updateWidget(widgetId, updates) {\\n  if (!dashboard) return;\\n  try {\\n    dashboard = await dashboardsApi.updateWidget(dashboardId, widgetId, updates);\\n    const data = await dashboardsApi.getWidgetData(dashboardId, widgetId);\\n    widgetData[widgetId] = data;\\n  } catch (err) {\\n    error = err.message || \\"Failed to update widget\\";\\n  }\\n}\\nfunction findEmptyPosition(widgetType) {\\n  if (!dashboard) return { x: 0, y: 0, width: 4, height: 3 };\\n  const defaultSize = defaultWidgetSizes[widgetType] || { width: 4, height: 3 };\\n  let y = 0;\\n  while (true) {\\n    for (let x = 0; x <= GRID_COLS - defaultSize.width; x++) {\\n      const position = { x, y, ...defaultSize };\\n      if (!isPositionOccupied(position)) {\\n        return position;\\n      }\\n    }\\n    y++;\\n  }\\n}\\nfunction isPositionOccupied(newPos) {\\n  if (!dashboard) return false;\\n  return dashboard.widgets.some((widget) => {\\n    const pos = widget.position;\\n    return !(newPos.x + newPos.width <= pos.x || newPos.x >= pos.x + pos.width || newPos.y + newPos.height <= pos.y || newPos.y >= pos.y + pos.height);\\n  });\\n}\\nfunction handleDndConsider(e) {\\n  if (!dashboard) return;\\n  dashboard.widgets = e.detail.items;\\n}\\nfunction handleDndFinalize(e) {\\n  if (!dashboard) return;\\n  dashboard.widgets = e.detail.items;\\n  saveDashboard();\\n}\\nfunction toggleEditMode() {\\n  editMode = !editMode;\\n  if (editMode) {\\n    if (eventSource) {\\n      eventSource.close();\\n      eventSource = null;\\n    }\\n  } else {\\n    setupRealtimeUpdates();\\n    loadAllWidgetData();\\n  }\\n}\\nfunction setupRealtimeUpdates() {\\n  if (eventSource) return;\\n  eventSource = dashboardsApi.streamDashboardData(dashboardId);\\n  eventSource.onmessage = (event) => {\\n    try {\\n      const data = JSON.parse(event.data);\\n      if (data.widget_data) {\\n        widgetData = { ...widgetData, ...data.widget_data };\\n      }\\n    } catch (err) {\\n      console.error(\\"Error parsing SSE data:\\", err);\\n    }\\n  };\\n  eventSource.onerror = (err) => {\\n    console.error(\\"SSE error:\\", err);\\n    eventSource?.close();\\n    eventSource = null;\\n    setTimeout(setupRealtimeUpdates, 5e3);\\n  };\\n}\\nfunction renderWidget(widget) {\\n  return widgetComponents[widget.type] || null;\\n}\\nfunction getWidgetData(widget) {\\n  const data = widgetData[widget.id];\\n  if (data) return data;\\n  const generator = sampleDataGenerators[widget.type];\\n  return generator ? generator() : null;\\n}\\nfunction handleClickOutside(event) {\\n  const exportDropdown = document.querySelector(\\".export-dropdown\\");\\n  if (exportDropdown && !exportDropdown.contains(event.target)) {\\n    showExportMenu = false;\\n  }\\n}\\nonMount(() => {\\n  loadDashboard();\\n  document.addEventListener(\\"click\\", handleClickOutside);\\n  return () => {\\n    document.removeEventListener(\\"click\\", handleClickOutside);\\n  };\\n});\\nfunction startResize(e, widget, direction) {\\n  e.preventDefault();\\n  e.stopPropagation();\\n  resizing = true;\\n  resizeWidget = widget;\\n  resizeDirection = direction;\\n  resizeStartPos = { x: e.clientX, y: e.clientY };\\n  resizeStartSize = { width: widget.position.width, height: widget.position.height };\\n  document.addEventListener(\\"mousemove\\", handleResize);\\n  document.addEventListener(\\"mouseup\\", stopResize);\\n  document.body.style.cursor = direction === \\"e\\" ? \\"ew-resize\\" : direction === \\"s\\" ? \\"ns-resize\\" : \\"nwse-resize\\";\\n}\\nfunction handleResize(e) {\\n  if (!resizing || !resizeWidget) return;\\n  const deltaX = Math.round((e.clientX - resizeStartPos.x) / (window.innerWidth / GRID_COLS));\\n  const deltaY = Math.round((e.clientY - resizeStartPos.y) / ROW_HEIGHT);\\n  let newWidth = resizeStartSize.width;\\n  let newHeight = resizeStartSize.height;\\n  if (resizeDirection === \\"e\\" || resizeDirection === \\"se\\") {\\n    newWidth = Math.max(2, Math.min(GRID_COLS - resizeWidget.position.x, resizeStartSize.width + deltaX));\\n  }\\n  if (resizeDirection === \\"s\\" || resizeDirection === \\"se\\") {\\n    newHeight = Math.max(2, resizeStartSize.height + deltaY);\\n  }\\n  const testPosition = {\\n    ...resizeWidget.position,\\n    width: newWidth,\\n    height: newHeight\\n  };\\n  const wouldOverlap = dashboard.widgets.some((w) => {\\n    if (w.id === resizeWidget.id) return false;\\n    const pos = w.position;\\n    return !(testPosition.x + testPosition.width <= pos.x || testPosition.x >= pos.x + pos.width || testPosition.y + testPosition.height <= pos.y || testPosition.y >= pos.y + pos.height);\\n  });\\n  if (!wouldOverlap) {\\n    resizeWidget.position.width = newWidth;\\n    resizeWidget.position.height = newHeight;\\n    dashboard = dashboard;\\n  }\\n}\\nfunction stopResize() {\\n  if (!resizing || !resizeWidget) return;\\n  resizing = false;\\n  document.removeEventListener(\\"mousemove\\", handleResize);\\n  document.removeEventListener(\\"mouseup\\", stopResize);\\n  document.body.style.cursor = \\"\\";\\n  updateWidget(resizeWidget.id, {\\n    position: resizeWidget.position\\n  });\\n  resizeWidget = null;\\n}\\nasync function exportDashboard(format) {\\n  try {\\n    exporting = true;\\n    showExportMenu = false;\\n    const [html2canvas, { jsPDF }] = await Promise.all([\\n      import(\\"html2canvas\\"),\\n      import(\\"jspdf\\")\\n    ]);\\n    const element = document.querySelector(\\".dashboard-grid\\");\\n    if (!element) throw new Error(\\"Dashboard grid not found\\");\\n    const wasEditMode = editMode;\\n    if (editMode) {\\n      editMode = false;\\n      await new Promise((resolve) => setTimeout(resolve, 100));\\n    }\\n    const canvas = await html2canvas.default(element, {\\n      scale: 2,\\n      // Higher quality\\n      useCORS: true,\\n      logging: false,\\n      backgroundColor: \\"#ffffff\\",\\n      windowWidth: element.scrollWidth,\\n      windowHeight: element.scrollHeight\\n    });\\n    if (wasEditMode) {\\n      editMode = true;\\n    }\\n    const timestamp = (/* @__PURE__ */ new Date()).toISOString().split(\\"T\\")[0];\\n    const filename = `${dashboard?.name || \\"dashboard\\"}_${timestamp}`;\\n    if (format === \\"pdf\\") {\\n      const imgWidth = 210;\\n      const imgHeight = canvas.height * imgWidth / canvas.width;\\n      const pdf = new jsPDF.default({\\n        orientation: imgHeight > imgWidth ? \\"portrait\\" : \\"landscape\\",\\n        unit: \\"mm\\"\\n      });\\n      const pageHeight = pdf.internal.pageSize.height;\\n      let heightLeft = imgHeight;\\n      let position = 0;\\n      pdf.addImage(\\n        canvas.toDataURL(\\"image/png\\"),\\n        \\"PNG\\",\\n        0,\\n        position,\\n        imgWidth,\\n        imgHeight\\n      );\\n      heightLeft -= pageHeight;\\n      while (heightLeft > 0) {\\n        position = heightLeft - imgHeight;\\n        pdf.addPage();\\n        pdf.addImage(\\n          canvas.toDataURL(\\"image/png\\"),\\n          \\"PNG\\",\\n          0,\\n          position,\\n          imgWidth,\\n          imgHeight\\n        );\\n        heightLeft -= pageHeight;\\n      }\\n      pdf.setProperties({\\n        title: dashboard?.name || \\"TradeSense Dashboard\\",\\n        subject: \\"Trading Dashboard Export\\",\\n        author: \\"TradeSense\\",\\n        keywords: \\"trading, dashboard, analytics\\",\\n        creator: \\"TradeSense\\"\\n      });\\n      pdf.save(`${filename}.pdf`);\\n    } else {\\n      const link = document.createElement(\\"a\\");\\n      link.download = `${filename}.${format}`;\\n      link.href = canvas.toDataURL(`image/${format}`, 0.95);\\n      link.click();\\n    }\\n    error = \\"\\";\\n  } catch (err) {\\n    error = `Export failed: ${err.message}`;\\n    console.error(\\"Export error:\\", err);\\n  } finally {\\n    exporting = false;\\n  }\\n}\\nonDestroy(() => {\\n  if (eventSource) {\\n    eventSource.close();\\n  }\\n  document.removeEventListener(\\"mousemove\\", handleResize);\\n  document.removeEventListener(\\"mouseup\\", stopResize);\\n});\\n<\/script>\\n\\n<svelte:head>\\n  <title>{dashboard?.name || \'Dashboard\'} - TradeSense</title>\\n</svelte:head>\\n\\n{#if loading}\\n  <div class=\\"loading-container\\">\\n    <LoadingSkeleton type=\\"text\\" lines={2} width=\\"300px\\" />\\n    <div class=\\"skeleton-grid\\">\\n      {#each Array(4) as _}\\n        <LoadingSkeleton type=\\"card\\" height=\\"200px\\" />\\n      {/each}\\n    </div>\\n  </div>\\n{:else if error && !dashboard}\\n  <div class=\\"error-container\\">\\n    <p>{error}</p>\\n    <a href=\\"/dashboards\\">← Back to Dashboards</a>\\n  </div>\\n{:else if dashboard}\\n  <div class=\\"dashboard-builder\\">\\n    <!-- Header -->\\n    <header class=\\"builder-header\\">\\n      <div class=\\"header-left\\">\\n        <h1>{dashboard.name}</h1>\\n        {#if dashboard.description}\\n          <p>{dashboard.description}</p>\\n        {/if}\\n      </div>\\n      <div class=\\"header-actions\\">\\n        {#if editMode}\\n          <button class=\\"icon-button\\" on:click={() => showWidgetPanel = !showWidgetPanel} title=\\"Add Widget\\">\\n            <Plus size={20} />\\n          </button>\\n          <button class=\\"icon-button\\" on:click={saveDashboard} disabled={saving} title=\\"Save\\">\\n            <Save size={20} />\\n          </button>\\n        {/if}\\n        <button class=\\"icon-button\\" on:click={toggleEditMode} title=\\"{editMode ? \'Preview\' : \'Edit\'} Mode\\">\\n          {#if editMode}\\n            <Eye size={20} />\\n          {:else}\\n            <EyeOff size={20} />\\n          {/if}\\n        </button>\\n        <div class=\\"export-dropdown\\">\\n          <button \\n            class=\\"icon-button\\" \\n            on:click={() => showExportMenu = !showExportMenu}\\n            disabled={exporting}\\n            title=\\"Export Dashboard\\"\\n          >\\n            <Download size={20} />\\n          </button>\\n          {#if showExportMenu}\\n            <div class=\\"export-menu\\">\\n              <button class=\\"export-option\\" on:click={() => exportDashboard(\'pdf\')}>\\n                <File size={16} />\\n                <span>Export as PDF</span>\\n              </button>\\n              <button class=\\"export-option\\" on:click={() => exportDashboard(\'png\')}>\\n                <FileImage size={16} />\\n                <span>Export as PNG</span>\\n              </button>\\n              <button class=\\"export-option\\" on:click={() => exportDashboard(\'jpg\')}>\\n                <FileImage size={16} />\\n                <span>Export as JPG</span>\\n              </button>\\n            </div>\\n          {/if}\\n        </div>\\n      </div>\\n    </header>\\n\\n    {#if error}\\n      <div class=\\"error\\">{error}</div>\\n    {/if}\\n\\n    {#if exporting}\\n      <div class=\\"export-overlay\\">\\n        <div class=\\"export-spinner\\">\\n          <div class=\\"spinner\\"></div>\\n          <p>Generating export...</p>\\n        </div>\\n      </div>\\n    {/if}\\n\\n    <!-- Widget Panel -->\\n    {#if showWidgetPanel && editMode}\\n      <div class=\\"widget-panel\\">\\n        <h3>Add Widget</h3>\\n        <p class=\\"widget-limit\\">\\n          {dashboard.widgets.length} / {planLimits[userPlan].widgets} widgets used\\n        </p>\\n        <div class=\\"widget-types\\">\\n          {#each widgetTypes as widgetType}\\n            <button \\n              class=\\"widget-type-button\\"\\n              on:click={() => addWidget(widgetType.id)}\\n              disabled={dashboard.widgets.length >= planLimits[userPlan].widgets}\\n            >\\n              <svelte:component this={widgetIcons[widgetType.id] || BarChart2} size={24} />\\n              <span>{widgetType.name}</span>\\n            </button>\\n          {/each}\\n        </div>\\n      </div>\\n    {/if}\\n\\n    <!-- Dashboard Grid -->\\n    <div \\n      class=\\"dashboard-grid\\"\\n      class:edit-mode={editMode}\\n      class:resizing={resizing}\\n      style=\\"--grid-cols: {GRID_COLS}; --row-height: {ROW_HEIGHT}px; --margin: {MARGIN}px;\\"\\n    >\\n      {#if editMode}\\n        <div\\n          use:dndzone={{\\n            items: dashboard.widgets,\\n            flipDurationMs: 200,\\n            dropTargetStyle: {}\\n          }}\\n          on:consider={handleDndConsider}\\n          on:finalize={handleDndFinalize}\\n          class=\\"dnd-container\\"\\n        >\\n          {#each dashboard.widgets as widget (widget.id)}\\n            {@const widgetComponent = renderWidget(widget)}\\n            {@const data = getWidgetData(widget)}\\n            <div \\n              class=\\"widget-container\\"\\n              animate:flip={{ duration: 200 }}\\n              style=\\"\\n                grid-column: {widget.position.x + 1} / span {widget.position.width};\\n                grid-row: {widget.position.y + 1} / span {widget.position.height};\\n              \\"\\n            >\\n              <div class=\\"widget\\">\\n                <div class=\\"widget-header\\">\\n                  <h4>{widget.title}</h4>\\n                  <div class=\\"widget-actions\\">\\n                    <button class=\\"widget-action\\" on:click={() => selectedWidget = widget}>\\n                      <Settings size={16} />\\n                    </button>\\n                    <button class=\\"widget-action drag-handle\\">\\n                      <Move size={16} />\\n                    </button>\\n                    <button class=\\"widget-action\\" on:click={() => removeWidget(widget.id)}>\\n                      <X size={16} />\\n                    </button>\\n                  </div>\\n                </div>\\n                <div class=\\"widget-content\\">\\n                  {#if widgetComponent && data}\\n                    <svelte:component \\n                      this={widgetComponent} \\n                      {...data}\\n                    />\\n                  {:else if widgetComponent}\\n                    <div class=\\"widget-placeholder\\">\\n                      <svelte:component this={widgetIcons[widget.type] || BarChart2} size={48} />\\n                      <p>Configure widget settings</p>\\n                    </div>\\n                  {/if}\\n                </div>\\n                {#if editMode}\\n                  <div class=\\"resize-handles\\">\\n                    <div \\n                      class=\\"resize-handle resize-handle-se\\"\\n                      on:mousedown={(e) => startResize(e, widget, \'se\')}\\n                      title=\\"Resize\\"\\n                    >\\n                      <svg width=\\"12\\" height=\\"12\\" viewBox=\\"0 0 12 12\\">\\n                        <path d=\\"M1 11 L11 1 M6 11 L11 6\\" stroke=\\"currentColor\\" stroke-width=\\"1.5\\" fill=\\"none\\"/>\\n                      </svg>\\n                    </div>\\n                    <div \\n                      class=\\"resize-handle resize-handle-e\\"\\n                      on:mousedown={(e) => startResize(e, widget, \'e\')}\\n                      title=\\"Resize horizontally\\"\\n                    ></div>\\n                    <div \\n                      class=\\"resize-handle resize-handle-s\\"\\n                      on:mousedown={(e) => startResize(e, widget, \'s\')}\\n                      title=\\"Resize vertically\\"\\n                    ></div>\\n                  </div>\\n                {/if}\\n              </div>\\n            </div>\\n          {/each}\\n        </div>\\n      {:else}\\n        <!-- View Mode - No drag and drop -->\\n        {#each dashboard.widgets as widget}\\n          {@const widgetComponent = renderWidget(widget)}\\n          {@const data = getWidgetData(widget)}\\n          <div \\n            class=\\"widget-container\\"\\n            style=\\"\\n              grid-column: {widget.position.x + 1} / span {widget.position.width};\\n              grid-row: {widget.position.y + 1} / span {widget.position.height};\\n            \\"\\n          >\\n            <div class=\\"widget\\">\\n              <div class=\\"widget-header\\">\\n                <h4>{widget.title}</h4>\\n              </div>\\n              <div class=\\"widget-content\\">\\n                {#if widgetComponent && data}\\n                  <svelte:component \\n                    this={widgetComponent} \\n                    {...data}\\n                  />\\n                {:else if widgetComponent}\\n                  <LoadingSkeleton type=\\"chart\\" height=\\"100%\\" />\\n                {/if}\\n              </div>\\n            </div>\\n          </div>\\n        {/each}\\n      {/if}\\n\\n      <!-- Grid lines in edit mode -->\\n      {#if editMode}\\n        <div class=\\"grid-overlay\\">\\n          {#each Array(20) as _, row}\\n            {#each Array(GRID_COLS) as _, col}\\n              <div \\n                class=\\"grid-cell\\"\\n                style=\\"\\n                  grid-column: {col + 1};\\n                  grid-row: {row + 1};\\n                \\"\\n              />\\n            {/each}\\n          {/each}\\n        </div>\\n      {/if}\\n    </div>\\n  </div>\\n\\n  <!-- Widget Settings Modal -->\\n  {#if selectedWidget}\\n    <div class=\\"modal-overlay\\" on:click={() => selectedWidget = null}>\\n      <div class=\\"modal\\" on:click|stopPropagation>\\n        <h3>Widget Settings</h3>\\n        <form on:submit|preventDefault={() => {\\n          if (selectedWidget) {\\n            updateWidget(selectedWidget.id, selectedWidget);\\n            selectedWidget = null;\\n          }\\n        }}>\\n          <div class=\\"form-group\\">\\n            <label for=\\"widget-title\\">Title</label>\\n            <input\\n              id=\\"widget-title\\"\\n              type=\\"text\\"\\n              bind:value={selectedWidget.title}\\n            />\\n          </div>\\n\\n          <div class=\\"form-group\\">\\n            <label for=\\"data-source\\">Data Source</label>\\n            <select id=\\"data-source\\" bind:value={selectedWidget.data_source}>\\n              {#each dataSources as source}\\n                <option value={source.id}>{source.name}</option>\\n              {/each}\\n            </select>\\n          </div>\\n\\n          <div class=\\"form-group\\">\\n            <label for=\\"refresh-interval\\">Refresh Interval (seconds)</label>\\n            <input\\n              id=\\"refresh-interval\\"\\n              type=\\"number\\"\\n              min=\\"0\\"\\n              step=\\"30\\"\\n              bind:value={selectedWidget.refresh_interval}\\n            />\\n            <small>Set to 0 to disable auto-refresh</small>\\n          </div>\\n\\n          <div class=\\"modal-actions\\">\\n            <button type=\\"button\\" class=\\"secondary-button\\" on:click={() => selectedWidget = null}>\\n              Cancel\\n            </button>\\n            <button type=\\"submit\\" class=\\"primary-button\\">\\n              Save Settings\\n            </button>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  {/if}\\n{/if}\\n\\n<style>\\n  .dashboard-builder {\\n    height: 100vh;\\n    display: flex;\\n    flex-direction: column;\\n    background: #f9fafb;\\n  }\\n\\n  .loading-container,\\n  .error-container {\\n    padding: 2rem;\\n    text-align: center;\\n  }\\n\\n  .skeleton-grid {\\n    display: grid;\\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\\n    gap: 1.5rem;\\n    margin-top: 2rem;\\n  }\\n\\n  .builder-header {\\n    background: white;\\n    border-bottom: 1px solid #e5e7eb;\\n    padding: 1rem 2rem;\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n  }\\n\\n  .header-left h1 {\\n    font-size: 1.5rem;\\n    margin: 0;\\n  }\\n\\n  .header-left p {\\n    color: #6b7280;\\n    margin: 0.25rem 0 0 0;\\n    font-size: 0.875rem;\\n  }\\n\\n  .header-actions {\\n    display: flex;\\n    gap: 0.5rem;\\n    align-items: center;\\n  }\\n\\n  .icon-button {\\n    padding: 0.5rem;\\n    background: white;\\n    border: 1px solid #e5e7eb;\\n    border-radius: 6px;\\n    cursor: pointer;\\n    transition: all 0.2s;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n  }\\n\\n  .icon-button:hover {\\n    background: #f3f4f6;\\n    border-color: #d1d5db;\\n  }\\n\\n  .icon-button:disabled {\\n    opacity: 0.5;\\n    cursor: not-allowed;\\n  }\\n\\n  .widget-panel {\\n    background: white;\\n    border-bottom: 1px solid #e5e7eb;\\n    padding: 1.5rem 2rem;\\n  }\\n\\n  .widget-panel h3 {\\n    margin: 0 0 0.5rem 0;\\n  }\\n\\n  .widget-limit {\\n    color: #6b7280;\\n    font-size: 0.875rem;\\n    margin-bottom: 1rem;\\n  }\\n\\n  .widget-types {\\n    display: flex;\\n    gap: 1rem;\\n    flex-wrap: wrap;\\n  }\\n\\n  .widget-type-button {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    gap: 0.5rem;\\n    padding: 1rem;\\n    background: white;\\n    border: 2px solid #e5e7eb;\\n    border-radius: 8px;\\n    cursor: pointer;\\n    transition: all 0.2s;\\n    min-width: 100px;\\n  }\\n\\n  .widget-type-button:hover:not(:disabled) {\\n    border-color: #10b981;\\n    background: #f0fdf4;\\n  }\\n\\n  .widget-type-button:disabled {\\n    opacity: 0.5;\\n    cursor: not-allowed;\\n  }\\n\\n  .widget-type-button span {\\n    font-size: 0.875rem;\\n    color: #374151;\\n  }\\n\\n  .dashboard-grid {\\n    flex: 1;\\n    padding: 2rem;\\n    overflow: auto;\\n    position: relative;\\n    display: grid;\\n    grid-template-columns: repeat(var(--grid-cols), 1fr);\\n    grid-auto-rows: var(--row-height);\\n    gap: var(--margin);\\n  }\\n\\n  .dnd-container {\\n    display: contents;\\n  }\\n\\n  .grid-overlay {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    display: grid;\\n    grid-template-columns: repeat(var(--grid-cols), 1fr);\\n    grid-auto-rows: var(--row-height);\\n    gap: var(--margin);\\n    pointer-events: none;\\n    z-index: 0;\\n  }\\n\\n  .grid-cell {\\n    border: 1px dashed #e5e7eb;\\n    border-radius: 4px;\\n  }\\n\\n  .widget-container {\\n    position: relative;\\n    z-index: 1;\\n  }\\n\\n  .widget {\\n    background: white;\\n    border: 1px solid #e5e7eb;\\n    border-radius: 8px;\\n    height: 100%;\\n    display: flex;\\n    flex-direction: column;\\n    overflow: hidden;\\n    transition: all 0.2s;\\n    position: relative;\\n  }\\n\\n  .edit-mode .widget:hover {\\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\\n  }\\n\\n  .dashboard-grid.resizing .widget {\\n    transition: none;\\n  }\\n\\n  .dashboard-grid.resizing .grid-overlay {\\n    z-index: 2;\\n  }\\n  \\n  .dashboard-grid.resizing .grid-cell {\\n    border-color: #9ca3af;\\n  }\\n\\n  .widget-header {\\n    padding: 1rem;\\n    border-bottom: 1px solid #e5e7eb;\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n  }\\n\\n  .widget-header h4 {\\n    margin: 0;\\n    font-size: 1rem;\\n  }\\n\\n  .widget-actions {\\n    display: flex;\\n    gap: 0.25rem;\\n  }\\n\\n  .widget-action {\\n    padding: 0.25rem;\\n    background: transparent;\\n    border: none;\\n    cursor: pointer;\\n    color: #6b7280;\\n    transition: all 0.2s;\\n  }\\n\\n  .widget-action:hover {\\n    color: #374151;\\n    background: #f3f4f6;\\n    border-radius: 4px;\\n  }\\n\\n  .drag-handle {\\n    cursor: move;\\n  }\\n\\n  .widget-content {\\n    flex: 1;\\n    padding: 1rem;\\n    overflow: auto;\\n  }\\n\\n  .widget-placeholder {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    justify-content: center;\\n    height: 100%;\\n    color: #9ca3af;\\n    text-align: center;\\n  }\\n\\n  .widget-placeholder p {\\n    margin-top: 1rem;\\n    font-size: 0.875rem;\\n  }\\n\\n  .modal-overlay {\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    background: rgba(0, 0, 0, 0.5);\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    z-index: 1000;\\n  }\\n\\n  .modal {\\n    background: white;\\n    border-radius: 12px;\\n    padding: 2rem;\\n    max-width: 500px;\\n    width: 90%;\\n  }\\n\\n  .modal h3 {\\n    margin: 0 0 1.5rem 0;\\n  }\\n\\n  .form-group {\\n    margin-bottom: 1.5rem;\\n  }\\n\\n  .form-group label {\\n    display: block;\\n    margin-bottom: 0.5rem;\\n    font-weight: 500;\\n    color: #374151;\\n  }\\n\\n  .form-group input,\\n  .form-group select {\\n    width: 100%;\\n    padding: 0.75rem;\\n    border: 1px solid #e5e7eb;\\n    border-radius: 6px;\\n    font-size: 1rem;\\n  }\\n\\n  .form-group small {\\n    display: block;\\n    margin-top: 0.25rem;\\n    color: #6b7280;\\n    font-size: 0.875rem;\\n  }\\n\\n  .modal-actions {\\n    display: flex;\\n    gap: 1rem;\\n    justify-content: flex-end;\\n    margin-top: 2rem;\\n  }\\n\\n  .primary-button,\\n  .secondary-button {\\n    padding: 0.75rem 1.5rem;\\n    border-radius: 6px;\\n    font-size: 1rem;\\n    cursor: pointer;\\n    transition: all 0.2s;\\n    border: none;\\n  }\\n\\n  .primary-button {\\n    background: #10b981;\\n    color: white;\\n  }\\n\\n  .primary-button:hover {\\n    background: #059669;\\n  }\\n\\n  .secondary-button {\\n    background: #f3f4f6;\\n    color: #374151;\\n  }\\n\\n  .secondary-button:hover {\\n    background: #e5e7eb;\\n  }\\n\\n  .error {\\n    background: #fee;\\n    color: #dc2626;\\n    padding: 1rem;\\n    border-radius: 6px;\\n    margin: 1rem 2rem;\\n  }\\n\\n  .resize-handles {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    pointer-events: none;\\n  }\\n\\n  .resize-handle {\\n    position: absolute;\\n    background: #10b981;\\n    opacity: 0;\\n    transition: opacity 0.2s;\\n    pointer-events: all;\\n  }\\n\\n  .widget:hover .resize-handle {\\n    opacity: 0.7;\\n  }\\n\\n  .resize-handle:hover {\\n    opacity: 1 !important;\\n  }\\n\\n  .resize-handle-se {\\n    bottom: 0;\\n    right: 0;\\n    width: 20px;\\n    height: 20px;\\n    cursor: nwse-resize;\\n    border-radius: 0 0 8px 0;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    color: white;\\n  }\\n\\n  .resize-handle-e {\\n    top: 50%;\\n    right: 0;\\n    width: 8px;\\n    height: 40px;\\n    transform: translateY(-50%);\\n    cursor: ew-resize;\\n    border-radius: 0 4px 4px 0;\\n  }\\n\\n  .resize-handle-s {\\n    left: 50%;\\n    bottom: 0;\\n    width: 40px;\\n    height: 8px;\\n    transform: translateX(-50%);\\n    cursor: ns-resize;\\n    border-radius: 0 0 4px 4px;\\n  }\\n\\n  .export-dropdown {\\n    position: relative;\\n  }\\n\\n  .export-menu {\\n    position: absolute;\\n    top: 100%;\\n    right: 0;\\n    margin-top: 0.5rem;\\n    background: white;\\n    border: 1px solid #e5e7eb;\\n    border-radius: 8px;\\n    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);\\n    min-width: 180px;\\n    z-index: 100;\\n  }\\n\\n  .export-option {\\n    display: flex;\\n    align-items: center;\\n    gap: 0.75rem;\\n    width: 100%;\\n    padding: 0.75rem 1rem;\\n    background: none;\\n    border: none;\\n    cursor: pointer;\\n    color: #374151;\\n    font-size: 0.875rem;\\n    transition: all 0.2s;\\n    text-align: left;\\n  }\\n\\n  .export-option:hover {\\n    background: #f3f4f6;\\n    color: #10b981;\\n  }\\n\\n  .export-option:first-child {\\n    border-radius: 8px 8px 0 0;\\n  }\\n\\n  .export-option:last-child {\\n    border-radius: 0 0 8px 8px;\\n  }\\n\\n  .export-overlay {\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    background: rgba(0, 0, 0, 0.6);\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    z-index: 2000;\\n  }\\n\\n  .export-spinner {\\n    background: white;\\n    padding: 2rem;\\n    border-radius: 12px;\\n    text-align: center;\\n    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);\\n  }\\n\\n  .spinner {\\n    width: 50px;\\n    height: 50px;\\n    border: 3px solid #e5e7eb;\\n    border-top-color: #10b981;\\n    border-radius: 50%;\\n    margin: 0 auto 1rem;\\n    animation: spin 1s linear infinite;\\n  }\\n\\n  @keyframes spin {\\n    to { transform: rotate(360deg); }\\n  }\\n\\n  .export-spinner p {\\n    margin: 0;\\n    color: #374151;\\n    font-weight: 500;\\n  }\\n\\n  @media (max-width: 768px) {\\n    .dashboard-grid {\\n      padding: 1rem;\\n    }\\n\\n    .widget-panel {\\n      padding: 1rem;\\n    }\\n\\n    .widget-types {\\n      gap: 0.5rem;\\n    }\\n\\n    .widget-type-button {\\n      min-width: 80px;\\n      padding: 0.75rem;\\n      font-size: 0.75rem;\\n    }\\n    \\n    .resize-handle {\\n      display: none;\\n    }\\n  }\\n</style>"],"names":[],"mappings":"AA8rBE,8CAAmB,CACjB,MAAM,CAAE,KAAK,CACb,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,UAAU,CAAE,OACd,CAEA,8CAAkB,CAClB,4CAAiB,CACf,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,MACd,CAEA,0CAAe,CACb,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,OAAO,QAAQ,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAC3D,GAAG,CAAE,MAAM,CACX,UAAU,CAAE,IACd,CAEA,2CAAgB,CACd,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,MACf,CAEA,0BAAY,CAAC,gBAAG,CACd,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,CACV,CAEA,0BAAY,CAAC,eAAE,CACb,KAAK,CAAE,OAAO,CACd,MAAM,CAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACrB,SAAS,CAAE,QACb,CAEA,2CAAgB,CACd,OAAO,CAAE,IAAI,CACb,GAAG,CAAE,MAAM,CACX,WAAW,CAAE,MACf,CAEA,wCAAa,CACX,OAAO,CAAE,MAAM,CACf,UAAU,CAAE,KAAK,CACjB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,GAAG,CAAC,IAAI,CACpB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MACnB,CAEA,wCAAY,MAAO,CACjB,UAAU,CAAE,OAAO,CACnB,YAAY,CAAE,OAChB,CAEA,wCAAY,SAAU,CACpB,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,WACV,CAEA,yCAAc,CACZ,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,OAAO,CAAE,MAAM,CAAC,IAClB,CAEA,2BAAa,CAAC,gBAAG,CACf,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CACrB,CAEA,yCAAc,CACZ,KAAK,CAAE,OAAO,CACd,SAAS,CAAE,QAAQ,CACnB,aAAa,CAAE,IACjB,CAEA,yCAAc,CACZ,OAAO,CAAE,IAAI,CACb,GAAG,CAAE,IAAI,CACT,SAAS,CAAE,IACb,CAEA,+CAAoB,CAClB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,CACnB,GAAG,CAAE,MAAM,CACX,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,KAAK,CACjB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,GAAG,CAAC,IAAI,CACpB,SAAS,CAAE,KACb,CAEA,+CAAmB,MAAM,KAAK,SAAS,CAAE,CACvC,YAAY,CAAE,OAAO,CACrB,UAAU,CAAE,OACd,CAEA,+CAAmB,SAAU,CAC3B,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,WACV,CAEA,iCAAmB,CAAC,kBAAK,CACvB,SAAS,CAAE,QAAQ,CACnB,KAAK,CAAE,OACT,CAEA,2CAAgB,CACd,IAAI,CAAE,CAAC,CACP,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,IAAI,CACd,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CACpD,cAAc,CAAE,IAAI,YAAY,CAAC,CACjC,GAAG,CAAE,IAAI,QAAQ,CACnB,CAEA,0CAAe,CACb,OAAO,CAAE,QACX,CAEA,yCAAc,CACZ,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CACpD,cAAc,CAAE,IAAI,YAAY,CAAC,CACjC,GAAG,CAAE,IAAI,QAAQ,CAAC,CAClB,cAAc,CAAE,IAAI,CACpB,OAAO,CAAE,CACX,CAEA,sCAAW,CACT,MAAM,CAAE,GAAG,CAAC,MAAM,CAAC,OAAO,CAC1B,aAAa,CAAE,GACjB,CAEA,6CAAkB,CAChB,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,CACX,CAEA,mCAAQ,CACN,UAAU,CAAE,KAAK,CACjB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,QAAQ,CAAE,MAAM,CAChB,UAAU,CAAE,GAAG,CAAC,IAAI,CACpB,QAAQ,CAAE,QACZ,CAEA,wBAAU,CAAC,qBAAO,MAAO,CACvB,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAC1C,CAEA,eAAe,uBAAS,CAAC,qBAAQ,CAC/B,UAAU,CAAE,IACd,CAEA,eAAe,uBAAS,CAAC,2BAAc,CACrC,OAAO,CAAE,CACX,CAEA,eAAe,uBAAS,CAAC,wBAAW,CAClC,YAAY,CAAE,OAChB,CAEA,0CAAe,CACb,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAChC,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,WAAW,CAAE,MACf,CAEA,4BAAc,CAAC,gBAAG,CAChB,MAAM,CAAE,CAAC,CACT,SAAS,CAAE,IACb,CAEA,2CAAgB,CACd,OAAO,CAAE,IAAI,CACb,GAAG,CAAE,OACP,CAEA,0CAAe,CACb,OAAO,CAAE,OAAO,CAChB,UAAU,CAAE,WAAW,CACvB,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,OAAO,CACf,KAAK,CAAE,OAAO,CACd,UAAU,CAAE,GAAG,CAAC,IAClB,CAEA,0CAAc,MAAO,CACnB,KAAK,CAAE,OAAO,CACd,UAAU,CAAE,OAAO,CACnB,aAAa,CAAE,GACjB,CAEA,wCAAa,CACX,MAAM,CAAE,IACV,CAEA,2CAAgB,CACd,IAAI,CAAE,CAAC,CACP,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,IACZ,CAEA,+CAAoB,CAClB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,OAAO,CACd,UAAU,CAAE,MACd,CAEA,iCAAmB,CAAC,eAAE,CACpB,UAAU,CAAE,IAAI,CAChB,SAAS,CAAE,QACb,CAEA,0CAAe,CACb,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,CAAC,CACT,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAC9B,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,OAAO,CAAE,IACX,CAEA,kCAAO,CACL,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,KAAK,CAChB,KAAK,CAAE,GACT,CAEA,oBAAM,CAAC,gBAAG,CACR,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CACrB,CAEA,uCAAY,CACV,aAAa,CAAE,MACjB,CAEA,yBAAW,CAAC,mBAAM,CAChB,OAAO,CAAE,KAAK,CACd,aAAa,CAAE,MAAM,CACrB,WAAW,CAAE,GAAG,CAChB,KAAK,CAAE,OACT,CAEA,yBAAW,CAAC,mBAAK,CACjB,yBAAW,CAAC,oBAAO,CACjB,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,OAAO,CAChB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,aAAa,CAAE,GAAG,CAClB,SAAS,CAAE,IACb,CAEA,yBAAW,CAAC,mBAAM,CAChB,OAAO,CAAE,KAAK,CACd,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OAAO,CACd,SAAS,CAAE,QACb,CAEA,0CAAe,CACb,OAAO,CAAE,IAAI,CACb,GAAG,CAAE,IAAI,CACT,eAAe,CAAE,QAAQ,CACzB,UAAU,CAAE,IACd,CAEA,2CAAe,CACf,6CAAkB,CAChB,OAAO,CAAE,OAAO,CAAC,MAAM,CACvB,aAAa,CAAE,GAAG,CAClB,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,GAAG,CAAC,IAAI,CACpB,MAAM,CAAE,IACV,CAEA,2CAAgB,CACd,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,KACT,CAEA,2CAAe,MAAO,CACpB,UAAU,CAAE,OACd,CAEA,6CAAkB,CAChB,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OACT,CAEA,6CAAiB,MAAO,CACtB,UAAU,CAAE,OACd,CAEA,kCAAO,CACL,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,OAAO,CACd,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,IAAI,CAAC,IACf,CAEA,2CAAgB,CACd,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,CAAC,CACT,cAAc,CAAE,IAClB,CAEA,0CAAe,CACb,QAAQ,CAAE,QAAQ,CAClB,UAAU,CAAE,OAAO,CACnB,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,OAAO,CAAC,IAAI,CACxB,cAAc,CAAE,GAClB,CAEA,qBAAO,MAAM,CAAC,4BAAe,CAC3B,OAAO,CAAE,GACX,CAEA,0CAAc,MAAO,CACnB,OAAO,CAAE,CAAC,CAAC,UACb,CAEA,6CAAkB,CAChB,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,CAAC,CACR,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,WAAW,CACnB,aAAa,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CACxB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,KAAK,CAAE,KACT,CAEA,4CAAiB,CACf,GAAG,CAAE,GAAG,CACR,KAAK,CAAE,CAAC,CACR,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,WAAW,IAAI,CAAC,CAC3B,MAAM,CAAE,SAAS,CACjB,aAAa,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAC3B,CAEA,4CAAiB,CACf,IAAI,CAAE,GAAG,CACT,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CACX,SAAS,CAAE,WAAW,IAAI,CAAC,CAC3B,MAAM,CAAE,SAAS,CACjB,aAAa,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GACzB,CAEA,4CAAiB,CACf,QAAQ,CAAE,QACZ,CAEA,wCAAa,CACX,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,IAAI,CACT,KAAK,CAAE,CAAC,CACR,UAAU,CAAE,MAAM,CAClB,UAAU,CAAE,KAAK,CACjB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAC1C,SAAS,CAAE,KAAK,CAChB,OAAO,CAAE,GACX,CAEA,0CAAe,CACb,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,GAAG,CAAE,OAAO,CACZ,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,OAAO,CAAC,IAAI,CACrB,UAAU,CAAE,IAAI,CAChB,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,OAAO,CACf,KAAK,CAAE,OAAO,CACd,SAAS,CAAE,QAAQ,CACnB,UAAU,CAAE,GAAG,CAAC,IAAI,CACpB,UAAU,CAAE,IACd,CAEA,0CAAc,MAAO,CACnB,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,OACT,CAEA,0CAAc,YAAa,CACzB,aAAa,CAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAC3B,CAEA,0CAAc,WAAY,CACxB,aAAa,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GACzB,CAEA,2CAAgB,CACd,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,CAAC,CACT,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAC9B,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,OAAO,CAAE,IACX,CAEA,2CAAgB,CACd,UAAU,CAAE,KAAK,CACjB,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,IAAI,CACnB,UAAU,CAAE,MAAM,CAClB,UAAU,CAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAC3C,CAEA,oCAAS,CACP,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,gBAAgB,CAAE,OAAO,CACzB,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CACnB,SAAS,CAAE,kBAAI,CAAC,EAAE,CAAC,MAAM,CAAC,QAC5B,CAEA,WAAW,kBAAK,CACd,EAAG,CAAE,SAAS,CAAE,OAAO,MAAM,CAAG,CAClC,CAEA,6BAAe,CAAC,eAAE,CAChB,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,OAAO,CACd,WAAW,CAAE,GACf,CAEA,MAAO,YAAY,KAAK,CAAE,CACxB,2CAAgB,CACd,OAAO,CAAE,IACX,CAEA,yCAAc,CACZ,OAAO,CAAE,IACX,CAEA,yCAAc,CACZ,GAAG,CAAE,MACP,CAEA,+CAAoB,CAClB,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,OAAO,CAChB,SAAS,CAAE,OACb,CAEA,0CAAe,CACb,OAAO,CAAE,IACX,CACF"}'
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $page, $$unsubscribe_page;
  $$unsubscribe_page = subscribe(page, (value) => $page = value);
  $page.params.id;
  function handleResize(e) {
    return;
  }
  function stopResize() {
    return;
  }
  onDestroy(() => {
    document.removeEventListener("mousemove", handleResize);
    document.removeEventListener("mouseup", stopResize);
  });
  $$result.css.add(css);
  $$unsubscribe_page();
  return `${$$result.head += `<!-- HEAD_svelte-k0xspe_START -->${$$result.title = `<title>${escape("Dashboard")} - TradeSense</title>`, ""}<!-- HEAD_svelte-k0xspe_END -->`, ""} ${`<div class="loading-container svelte-9o8nns">${validate_component(LoadingSkeleton, "LoadingSkeleton").$$render($$result, { type: "text", lines: 2, width: "300px" }, {}, {})} <div class="skeleton-grid svelte-9o8nns">${each(Array(4), (_) => {
    return `${validate_component(LoadingSkeleton, "LoadingSkeleton").$$render($$result, { type: "card", height: "200px" }, {}, {})}`;
  })}</div></div>`}`;
});
export {
  Page as default
};
