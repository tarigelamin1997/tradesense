import { c as create_ssr_component, v as validate_component } from "../../../chunks/ssr.js";
import "../../../chunks/ssr-safe.js";
import { I as Icon } from "../../../chunks/Icon.js";
import "../../../chunks/analytics.js";
const css = {
  code: ".spinner.svelte-178td72{width:2rem;height:2rem;border-width:4px;border-color:#c7d2fe;border-top-color:#4f46e5;border-radius:9999px;animation:spin 1s linear infinite}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n    import { onMount } from 'svelte';\\n    import { api } from '$lib/api/ssr-safe';\\n    import Icon from '$lib/components/Icon.svelte';\\n    import Chart from '$lib/components/Chart.svelte';\\n    import analytics from '$lib/analytics';\\n    \\n    let stats = null;\\n    let loading = true;\\n    let error = null;\\n    \\n    // Chart data\\n    let userGrowthData = null;\\n    let revenueData = null;\\n    \\n    async function loadDashboard() {\\n        try {\\n            loading = true;\\n            error = null;\\n            \\n            const response = await api.get('/admin/dashboard/stats');\\n            stats = response;\\n            \\n            // Prepare chart data\\n            prepareChartData();\\n            \\n            // Track admin dashboard view\\n            analytics.trackFeature('admin_dashboard');\\n            \\n        } catch (err) {\\n            error = err.message || 'Failed to load dashboard';\\n        } finally {\\n            loading = false;\\n        }\\n    }\\n    \\n    function prepareChartData() {\\n        // User growth chart (mock data for now)\\n        userGrowthData = {\\n            labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\\n            datasets: [{\\n                label: 'New Users',\\n                data: [12, 19, 15, 25, 22, 30, 28],\\n                borderColor: 'rgb(99, 102, 241)',\\n                backgroundColor: 'rgba(99, 102, 241, 0.1)',\\n                tension: 0.4\\n            }]\\n        };\\n        \\n        // Revenue chart (mock data for now)\\n        revenueData = {\\n            labels: ['Free', 'Pro', 'Premium'],\\n            datasets: [{\\n                data: [\\n                    stats?.subscriptions?.breakdown?.free?.count || 0,\\n                    stats?.subscriptions?.breakdown?.pro?.count || 0,\\n                    stats?.subscriptions?.breakdown?.premium?.count || 0\\n                ],\\n                backgroundColor: [\\n                    'rgb(156, 163, 175)',\\n                    'rgb(99, 102, 241)',\\n                    'rgb(139, 92, 246)'\\n                ]\\n            }]\\n        };\\n    }\\n    \\n    function formatCurrency(amount) {\\n        return new Intl.NumberFormat('en-US', {\\n            style: 'currency',\\n            currency: 'USD'\\n        }).format(amount);\\n    }\\n    \\n    function formatNumber(num) {\\n        return new Intl.NumberFormat('en-US').format(num);\\n    }\\n    \\n    function getPercentageChange(current, previous) {\\n        if (!previous) return 0;\\n        return ((current - previous) / previous * 100).toFixed(1);\\n    }\\n    \\n    onMount(() => {\\n        loadDashboard();\\n        \\n        // Refresh every 30 seconds\\n        const interval = setInterval(loadDashboard, 30000);\\n        \\n        return () => clearInterval(interval);\\n    });\\n<\/script>\\n\\n<div class=\\"space-y-6\\">\\n    <!-- Page Header -->\\n    <div class=\\"flex justify-between items-center\\">\\n        <div>\\n            <h2 class=\\"text-2xl font-bold text-gray-900\\">Admin Dashboard</h2>\\n            <p class=\\"text-gray-600 mt-1\\">Monitor system health and user activity</p>\\n        </div>\\n        <button\\n            on:click={loadDashboard}\\n            disabled={loading}\\n            class=\\"btn btn-secondary\\"\\n        >\\n            <Icon name=\\"refresh\\" class=\\"w-4 h-4 mr-2\\" />\\n            Refresh\\n        </button>\\n    </div>\\n    \\n    {#if loading && !stats}\\n        <div class=\\"flex justify-center py-12\\">\\n            <div class=\\"spinner\\"></div>\\n        </div>\\n    {:else if error}\\n        <div class=\\"alert alert-error\\">\\n            {error}\\n        </div>\\n    {:else if stats}\\n        <!-- Key Metrics Grid -->\\n        <div class=\\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\\">\\n            <!-- Total Users -->\\n            <div class=\\"admin-card\\">\\n                <div class=\\"flex items-center justify-between\\">\\n                    <div>\\n                        <p class=\\"text-sm font-medium text-gray-600\\">Total Users</p>\\n                        <p class=\\"text-2xl font-bold text-gray-900 mt-1\\">\\n                            {formatNumber(stats.users.total)}\\n                        </p>\\n                        <p class=\\"text-sm text-green-600 mt-1\\">\\n                            +{stats.users.new_7d} this week\\n                        </p>\\n                    </div>\\n                    <div class=\\"p-3 bg-indigo-100 rounded-lg\\">\\n                        <Icon name=\\"users\\" class=\\"w-6 h-6 text-indigo-600\\" />\\n                    </div>\\n                </div>\\n            </div>\\n            \\n            <!-- Monthly Revenue -->\\n            <div class=\\"admin-card\\">\\n                <div class=\\"flex items-center justify-between\\">\\n                    <div>\\n                        <p class=\\"text-sm font-medium text-gray-600\\">Monthly Revenue</p>\\n                        <p class=\\"text-2xl font-bold text-gray-900 mt-1\\">\\n                            {formatCurrency(stats.subscriptions.total_mrr)}\\n                        </p>\\n                        <p class=\\"text-sm text-gray-500 mt-1\\">\\n                            {stats.users.paid} paid users\\n                        </p>\\n                    </div>\\n                    <div class=\\"p-3 bg-green-100 rounded-lg\\">\\n                        <Icon name=\\"currency-dollar\\" class=\\"w-6 h-6 text-green-600\\" />\\n                    </div>\\n                </div>\\n            </div>\\n            \\n            <!-- Active Users -->\\n            <div class=\\"admin-card\\">\\n                <div class=\\"flex items-center justify-between\\">\\n                    <div>\\n                        <p class=\\"text-sm font-medium text-gray-600\\">Active Today</p>\\n                        <p class=\\"text-2xl font-bold text-gray-900 mt-1\\">\\n                            {formatNumber(stats.users.active_24h)}\\n                        </p>\\n                        <p class=\\"text-sm text-gray-500 mt-1\\">\\n                            {Math.round(stats.users.active_24h / stats.users.total * 100)}% of total\\n                        </p>\\n                    </div>\\n                    <div class=\\"p-3 bg-purple-100 rounded-lg\\">\\n                        <Icon name=\\"activity\\" class=\\"w-6 h-6 text-purple-600\\" />\\n                    </div>\\n                </div>\\n            </div>\\n            \\n            <!-- System Health -->\\n            <div class=\\"admin-card\\">\\n                <div class=\\"flex items-center justify-between\\">\\n                    <div>\\n                        <p class=\\"text-sm font-medium text-gray-600\\">System Health</p>\\n                        <p class=\\"text-2xl font-bold text-gray-900 mt-1\\">\\n                            {stats.system.avg_response_time_ms}ms\\n                        </p>\\n                        <p class=\\"text-sm {stats.system.errors_1h > 0 ? 'text-red-600' : 'text-green-600'} mt-1\\">\\n                            {stats.system.errors_1h} errors/hr\\n                        </p>\\n                    </div>\\n                    <div class=\\"p-3 {stats.system.errors_1h > 10 ? 'bg-red-100' : 'bg-green-100'} rounded-lg\\">\\n                        <Icon name=\\"heart\\" class=\\"w-6 h-6 {stats.system.errors_1h > 10 ? 'text-red-600' : 'text-green-600'}\\" />\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        \\n        <!-- Charts Row -->\\n        <div class=\\"grid grid-cols-1 lg:grid-cols-2 gap-6\\">\\n            <!-- User Growth Chart -->\\n            <div class=\\"admin-card\\">\\n                <h3 class=\\"text-lg font-semibold text-gray-900 mb-4\\">User Growth</h3>\\n                {#if userGrowthData}\\n                    <Chart type=\\"line\\" data={userGrowthData} height={250} />\\n                {/if}\\n            </div>\\n            \\n            <!-- Subscription Breakdown -->\\n            <div class=\\"admin-card\\">\\n                <h3 class=\\"text-lg font-semibold text-gray-900 mb-4\\">Subscription Breakdown</h3>\\n                {#if revenueData}\\n                    <Chart type=\\"doughnut\\" data={revenueData} height={250} />\\n                {/if}\\n            </div>\\n        </div>\\n        \\n        <!-- Activity Tables -->\\n        <div class=\\"grid grid-cols-1 lg:grid-cols-2 gap-6\\">\\n            <!-- Recent Signups -->\\n            <div class=\\"admin-card\\">\\n                <h3 class=\\"text-lg font-semibold text-gray-900 mb-4\\">Recent Signups</h3>\\n                <div class=\\"overflow-x-auto\\">\\n                    <table class=\\"admin-table\\">\\n                        <thead>\\n                            <tr>\\n                                <th>User</th>\\n                                <th>Plan</th>\\n                                <th>Joined</th>\\n                            </tr>\\n                        </thead>\\n                        <tbody class=\\"divide-y divide-gray-200\\">\\n                            {#each stats.recent_signups as user}\\n                                <tr>\\n                                    <td>\\n                                        <div>\\n                                            <div class=\\"text-sm font-medium text-gray-900\\">\\n                                                {user.full_name}\\n                                            </div>\\n                                            <div class=\\"text-sm text-gray-500\\">\\n                                                {user.email}\\n                                            </div>\\n                                        </div>\\n                                    </td>\\n                                    <td>\\n                                        <span class=\\"px-2 py-1 text-xs font-medium rounded-full\\n                                                   {user.subscription_tier === 'premium' ? 'bg-purple-100 text-purple-800' :\\n                                                    user.subscription_tier === 'pro' ? 'bg-indigo-100 text-indigo-800' :\\n                                                    'bg-gray-100 text-gray-800'}\\">\\n                                            {user.subscription_tier}\\n                                        </span>\\n                                    </td>\\n                                    <td class=\\"text-sm text-gray-500\\">\\n                                        {new Date(user.created_at).toLocaleDateString()}\\n                                    </td>\\n                                </tr>\\n                            {/each}\\n                        </tbody>\\n                    </table>\\n                </div>\\n            </div>\\n            \\n            <!-- Recent Issues -->\\n            <div class=\\"admin-card\\">\\n                <h3 class=\\"text-lg font-semibold text-gray-900 mb-4\\">Recent Issues</h3>\\n                {#if stats.recent_issues.length > 0}\\n                    <div class=\\"space-y-3\\">\\n                        {#each stats.recent_issues as issue}\\n                            <div class=\\"border-l-4 border-red-400 pl-4 py-2\\">\\n                                <div class=\\"text-sm font-medium text-gray-900\\">\\n                                    {issue.type === 'error' ? 'Error' : issue.type}\\n                                </div>\\n                                <div class=\\"text-sm text-gray-600 mt-1\\">\\n                                    {issue.message}\\n                                </div>\\n                                <div class=\\"text-xs text-gray-500 mt-1\\">\\n                                    {new Date(issue.timestamp).toLocaleString()}\\n                                    {#if issue.user_id}\\n                                        • User: {issue.user_id}\\n                                    {/if}\\n                                </div>\\n                            </div>\\n                        {/each}\\n                    </div>\\n                {:else}\\n                    <p class=\\"text-sm text-gray-500\\">No recent issues</p>\\n                {/if}\\n            </div>\\n        </div>\\n        \\n        <!-- System Stats -->\\n        <div class=\\"admin-card\\">\\n            <h3 class=\\"text-lg font-semibold text-gray-900 mb-4\\">System Statistics</h3>\\n            <div class=\\"grid grid-cols-2 md:grid-cols-4 gap-4\\">\\n                <div>\\n                    <p class=\\"text-sm text-gray-600\\">API Requests (1h)</p>\\n                    <p class=\\"text-xl font-semibold text-gray-900\\">\\n                        {formatNumber(stats.system.api_requests_1h)}\\n                    </p>\\n                </div>\\n                <div>\\n                    <p class=\\"text-sm text-gray-600\\">Database Size</p>\\n                    <p class=\\"text-xl font-semibold text-gray-900\\">\\n                        {stats.system.database_size_mb.toFixed(1)} MB\\n                    </p>\\n                </div>\\n                <div>\\n                    <p class=\\"text-sm text-gray-600\\">Total Trades</p>\\n                    <p class=\\"text-xl font-semibold text-gray-900\\">\\n                        {formatNumber(stats.trades.total)}\\n                    </p>\\n                </div>\\n                <div>\\n                    <p class=\\"text-sm text-gray-600\\">Trades Today</p>\\n                    <p class=\\"text-xl font-semibold text-gray-900\\">\\n                        {formatNumber(stats.trades.trades_24h)}\\n                    </p>\\n                </div>\\n            </div>\\n        </div>\\n    {/if}\\n</div>\\n\\n<style>\\n    .spinner {\\n        width: 2rem; height: 2rem; border-width: 4px; border-color: #c7d2fe; border-top-color: #4f46e5; border-radius: 9999px; animation: spin 1s linear infinite;\\n    }\\n</style>"],"names":[],"mappings":"AAgUI,uBAAS,CACL,KAAK,CAAE,IAAI,CAAE,MAAM,CAAE,IAAI,CAAE,YAAY,CAAE,GAAG,CAAE,YAAY,CAAE,OAAO,CAAE,gBAAgB,CAAE,OAAO,CAAE,aAAa,CAAE,MAAM,CAAE,SAAS,CAAE,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,QACrJ"}`
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  $$result.css.add(css);
  return `<div class="space-y-6"> <div class="flex justify-between items-center"><div data-svelte-h="svelte-xopmg4"><h2 class="text-2xl font-bold text-gray-900">Admin Dashboard</h2> <p class="text-gray-600 mt-1">Monitor system health and user activity</p></div> <button ${"disabled"} class="btn btn-secondary">${validate_component(Icon, "Icon").$$render($$result, { name: "refresh", class: "w-4 h-4 mr-2" }, {}, {})}
            Refresh</button></div> ${`<div class="flex justify-center py-12" data-svelte-h="svelte-em5o00"><div class="spinner svelte-178td72"></div></div>`} </div>`;
});
export {
  Page as default
};
