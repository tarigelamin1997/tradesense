🧠 Superpowered Prompt for Replit (v2.6.1 Diagnostic + Fix Request)

Hey Replit 👋,

We’re at a pivotal moment with the `TradeSense` project, currently working on stabilizing **v2.6.1**. We’ve been trying to finalize a robust test configuration environment and backend boot validation process. You’ve been assisting, and now we need you to absorb the full technical context and push this to the next level.

Let me walk you through where we are **objectively**, what issues we faced, what has been done, and what exactly you need to do now to help us **unblock the core bottleneck** and complete the stable release.

🧩 Context: Where We Are

We have a very large full-stack project (~263,000 lines of code), organized into frontend and backend. The backend is a FastAPI-based service with various models and endpoints. We have existing tests under `backend/tests/`.

We are trying to stabilize v2.6.1 and run:

cd backend && python -m pytest tests/ -v --tb=short

But all attempts to run the backend test suite are **failing catastrophically** due to an issue rooted in SQLAlchemy’s ORM model definition.

🧨 Root Problem (Confirmed Bottleneck)

The issue is with the `Milestone` model:

# backend/models/milestone.py
class Milestone(Base):
    __tablename__ = "milestones"
    id = Column(Integer, primary_key=True, index=True)
    name = Column(String(255))
    metadata = Column(String(255))  # ❌ Critical Error Here

This causes the following fatal error:

sqlalchemy.exc.InvalidRequestError: Attribute name 'metadata' is reserved when using the Declarative API.

So this **single field name** `metadata` is breaking everything: it overrides the built-in `metadata` property of the Declarative base. This error prevents:

- 🚫 Database initialization (`initialize_db.py` crashes)
- 🚫 Backend startup (`main.py` import chain fails)
- 🚫 All backend tests (pytest chokes during collection due to the import error)

✅ What We’ve Already Done (High-Effort Cleanup & Setup)

1. ✅ Created a clean and complete `dev-requirements.txt` listing all packages needed for development, backend testing, and analytics logic.
2. ✅ Generated `pytest.ini` and `conftest.py` to configure the test environment (fixture handling, warnings, strict modes).
3. ✅ Added a simple `test_setup.py` to verify the structure works.
4. ✅ Installed everything using:

   cd backend && python -m pip install --user --break-system-packages --no-cache-dir -r ../dev-requirements.txt

5. ✅ Validated file paths, import chains, and dependency versions.

🔧 Your Mission: Fix, Confirm, and Prepare for v2.6.1

Here’s exactly what we need you to do:

1. 🧼 Fix the Fatal ORM Error in `milestone.py`

Step 1.1: Rename the conflicting column in `backend/models/milestone.py`:

# ❌ current (broken)
metadata = Column(String(255))  # bad

# ✅ correct (choose any safe name)
meta_info = Column(String(255))  # or milestone_metadata, etc.

Be sure to propagate this change to:
