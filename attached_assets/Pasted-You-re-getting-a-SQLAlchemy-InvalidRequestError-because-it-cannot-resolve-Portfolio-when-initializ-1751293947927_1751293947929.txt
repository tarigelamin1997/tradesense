You're getting a SQLAlchemy InvalidRequestError because it cannot resolve 'Portfolio' when initializing the User model due to a relationship referencing an undefined or improperly imported class.

üî• Root Cause
Inside your User model, you probably have a relationship like:

python
Copy
Edit
portfolio = relationship("Portfolio", back_populates="user")
But SQLAlchemy doesn‚Äôt yet know what Portfolio is, because either:

The Portfolio class hasn‚Äôt been defined yet.

The Portfolio class isn‚Äôt imported correctly in the same file scope.

The relationship is defined too early ‚Äî before SQLAlchemy completes mapping both models.

‚úÖ Fix ‚Äî The Cleanest Way
Use late evaluation via string references AND move the relationship() to after both models are defined.

Here's the safest setup:

python
Copy
Edit
# backend/models/user.py
from sqlalchemy.orm import relationship
from backend.models.portfolio import Portfolio  # Ensure this exists

class User(Base):
    __tablename__ = "users"
    id = Column(Integer, primary_key=True)
    # ...
    portfolios = relationship("Portfolio", back_populates="user")
python
Copy
Edit
# backend/models/portfolio.py
from sqlalchemy.orm import relationship

class Portfolio(Base):
    __tablename__ = "portfolios"
    id = Column(Integer, primary_key=True)
    user_id = Column(Integer, ForeignKey("users.id"))
    user = relationship("User", back_populates="portfolios")
üõ† Alternative Fix if Circular Import
If you're importing between user.py and portfolio.py causes circular import errors, do not import directly. Use string literals only:

python
Copy
Edit
# in user.py
portfolios = relationship("Portfolio", back_populates="user")

# in portfolio.py
user = relationship("User", back_populates="portfolios")
And ensure both models are registered in the same Base metadata, typically by importing them in models/__init__.py or wherever your models are discovered.

‚úÖ Bonus: Patch initialize_db.py
If the script crashes because of User.query.count() before models are fully set up, move that line until after all models are configured and Base.metadata.create_all() runs successfully.

üîÅ Next Steps
Fix the circular import or model ordering as shown.

Run:

bash
Copy
Edit
cd backend && python initialize_db.py
until ‚úÖ appears.

Then:

bash
Copy
Edit
python -m pytest tests/